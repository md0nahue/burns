
=== Pipeline started at: 2025-07-07T11:17:30-07:00 ===
🎬 Burns - Audio to Ken Burns Video Pipeline
============================================================
🔍 Checking for existing video in S3...
🆕 No existing video found in S3, generating new video...
✅ Found audio file: b3.mp3
📊 File size: 5.31 MB

🚀 Initializing video generator...
🎬 Local Video Service initialized
  📁 Temp directory: /var/folders/h6/gt987qh93hs085p28xhy8z840000gn/T/d20250707-45998-oa4xvy
  🎥 FFmpeg path: ffmpeg

⚙️  Generation options:
  📐 Resolution: 1080p
  🎬 FPS: 24
  🎭 Ken Burns Effect: true
  🔄 Smooth Transitions: true
  ⏱️  Image Duration: 3.0s
  🌊 Transition Duration: 1.0s
  🔍 Zoom Factor: 1.2x
  📹 Pan Speed: 0.5
  💾 Image Caching: true
  💾 Transcription Caching: true
  💾 Analysis Caching: false
  🔄 Force Refresh: true

============================================================
🎬 STARTING KEN BURNS VIDEO GENERATION
============================================================

📝 Step 1: Processing audio and transcription...
🎵 Transcribing audio content...
⏱️  Step 1 started at: 11:17:31
🎬 Starting Ken Burns video generation
  📁 Audio file: b3.mp3
  🆔 Project ID: b3
  ⚙️  Options: {:resolution=>"1080p", :fps=>24, :test_mode=>false, :ken_burns_effect=>true, :smooth_transitions=>true, :image_duration=>3.0, :transition_duration=>1.0, :zoom_factor=>1.2, :pan_speed=>0.5, :cache_images=>true, :cache_transcription=>true, :cache_analysis=>false, :force=>true}

📝 Step 1: Transcribing audio to get text segments...
  🎤 Processing audio with Whisper...
  🎵 Processing audio file...
    🎤 Processing audio with AudioProcessor...
🎤 Processing audio file: b3.mp3
    📁 Using cached transcription from: cache/b3.json
✅ Transcription completed: 103 segments
📊 Total duration: 508.0 seconds
📝 Total words: 1835
📤 Uploading audio file: b3.mp3
✅ Audio file uploaded: s3://burns-videos/projects/b3/audio/b3.mp3
  ✅ Transcription complete: 103 segments

🎨 Step 2: Analyzing text content to generate image queries...
  🧠 Analyzing content with Gemini to generate image queries...
  🎨 Analyzing content for image generation...
🎨 Analyzing content for image generation...
🧠 Analyzing content for image generation using Gemini...
  📝 Analyzing 103 segments in batches of 10...
    🔄 Processing batch 1/11 (10 segments)
    🔄 Processing batch 2/11 (10 segments)
    🔄 Processing batch 3/11 (10 segments)
    🔄 Processing batch 4/11 (10 segments)
    🔄 Processing batch 5/11 (10 segments)
    🔄 Processing batch 6/11 (10 segments)
    🔄 Processing batch 7/11 (10 segments)
    🔄 Processing batch 8/11 (10 segments)
    🔄 Processing batch 9/11 (10 segments)
    🔄 Processing batch 10/11 (10 segments)
    🔄 Processing batch 11/11 (3 segments)
    💾 Caching content analysis to: cache/gemini_analysis_18e3ed8a0973074659593edd59ba31ee.json
✅ Content analysis completed: 103 segments processed
✅ Content analysis completed:
  📊 Total segments: 103
  🖼️  Segments with images: 103
  🔍 Total image queries: 309
  📈 Average confidence: -0.1
  ✅ Analysis complete: 309 image queries generated

🖼️  Step 3: Generating images using the queries...
  🔍 Searching for images using image service providers...
  🖼️  Generating images for segments...
    📝 Processing segment: 0
    📝 Processing segment: 0
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"Bernie Sanders speaking at podium", :category=>"famous_person"}, {:query=>"Vermont landscape with mountains", :category=>"stock_image"}, {:query=>"Portrait of Bernie Sanders", :category=>"famous_person"}]
      Debug - final image_queries: [{:query=>"Bernie Sanders speaking at podium", :category=>"famous_person"}, {:query=>"Vermont landscape with mountains", :category=>"stock_image"}, {:query=>"Portrait of Bernie Sanders", :category=>"famous_person"}]
      Searching for ONE image with 5 query options
      Trying query 1/5: 'Bernie Sanders speaking at podium' (category: famous_person)
    🔍 ImageServiceBus: Getting 3 images for query 'Bernie Sanders speaking at podium' (category: famous_person)
    👤 Famous person detected - prioritizing Wikimedia
    🔍 ImageServiceBus: Attempting wikimedia (attempt 1/12)
    ✅ ImageServiceBus: Got 7 quality images from wikimedia
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from wikimedia: https://upload.wikimedia.org/wikipedia/commons/7/79/Bernie_Sanders_Presidential_Rally_2016_%281%29.jpg
      ✅ Generated 1 images
    📝 Processing segment: 1
    📝 Processing segment: 1
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"Bernie Sanders in interview setting", :category=>"famous_person"}, {:query=>"President Trump speaking at rally", :category=>"famous_person"}, {:query=>"Close-up of Fox News logo", :category=>"stock_image"}]
      Debug - final image_queries: [{:query=>"Bernie Sanders in interview setting", :category=>"famous_person"}, {:query=>"President Trump speaking at rally", :category=>"famous_person"}, {:query=>"Close-up of Fox News logo", :category=>"stock_image"}]
      Searching for ONE image with 5 query options
      Trying query 1/5: 'Bernie Sanders in interview setting' (category: famous_person)
    🔍 ImageServiceBus: Getting 3 images for query 'Bernie Sanders in interview setting' (category: famous_person)
    👤 Famous person detected - prioritizing Wikimedia
    🔍 ImageServiceBus: Attempting wikimedia (attempt 1/12)
    ⚠️  ImageServiceBus: No results from wikimedia
    🔍 ImageServiceBus: Attempting unsplash (attempt 2/12)
    ⚠️  ImageServiceBus: No results from unsplash
    🔍 ImageServiceBus: Attempting pexels (attempt 3/12)
    ✅ ImageServiceBus: Got 10 quality images from pexels
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from pexels: https://images.pexels.com/photos/6919954/pexels-photo-6919954.jpeg?auto=compress&cs=tinysrgb&h=650&w=940
      ✅ Generated 1 images
    📝 Processing segment: 2
    📝 Processing segment: 2
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"1790s American historical figures", :category=>"famous_person"}, {:query=>"Old parchment with quill pen", :category=>"stock_image"}, {:query=>"Founding Fathers discussing", :category=>"famous_person"}]
      Debug - final image_queries: [{:query=>"1790s American historical figures", :category=>"famous_person"}, {:query=>"Old parchment with quill pen", :category=>"stock_image"}, {:query=>"Founding Fathers discussing", :category=>"famous_person"}]
      Searching for ONE image with 5 query options
      Trying query 1/5: '1790s American historical figures' (category: famous_person)
    🔍 ImageServiceBus: Getting 3 images for query '1790s American historical figures' (category: famous_person)
    👤 Famous person detected - prioritizing Wikimedia
    🔍 ImageServiceBus: Attempting wikimedia (attempt 1/12)
    ✅ ImageServiceBus: Got 1 quality images from wikimedia
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from wikimedia: https://upload.wikimedia.org/wikipedia/commons/4/48/Portrait_of_an_Indian_Lady%2C_traditionally_called_the_Bibi_of_John_Wombwell_%28d._1795%29_%28by_Arthur_William_Devis%29.jpg
      ✅ Generated 1 images
    📝 Processing segment: 3
    📝 Processing segment: 3
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"Illustration of separation of powers", :category=>"stock_image"}, {:query=>"Three branches of government diagram", :category=>"general"}, {:query=>"Capitol building exterior", :category=>"stock_image"}]
      Debug - final image_queries: [{:query=>"Illustration of separation of powers", :category=>"stock_image"}, {:query=>"Three branches of government diagram", :category=>"general"}, {:query=>"Capitol building exterior", :category=>"stock_image"}]
      Searching for ONE image with 5 query options
      Trying query 1/5: 'Illustration of separation of powers' (category: stock_image)
    🔍 ImageServiceBus: Getting 3 images for query 'Illustration of separation of powers' (category: stock_image)
    🔍 ImageServiceBus: Attempting unsplash (attempt 1/12)
    ⚠️  ImageServiceBus: No results from unsplash
    🔍 ImageServiceBus: Attempting pexels (attempt 2/12)
    ✅ ImageServiceBus: Got 10 quality images from pexels
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from pexels: https://images.pexels.com/photos/7978055/pexels-photo-7978055.jpeg?auto=compress&cs=tinysrgb&h=650&w=940
      ✅ Generated 1 images
    📝 Processing segment: 4
    📝 Processing segment: 4
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"Authoritarian leader gesturing forcefully", :category=>"stock_image"}, {:query=>"Silhouette of a powerful figure", :category=>"stock_image"}, {:query=>"Presidential seal with dark overlay", :category=>"stock_image"}]
      Debug - final image_queries: [{:query=>"Authoritarian leader gesturing forcefully", :category=>"stock_image"}, {:query=>"Silhouette of a powerful figure", :category=>"stock_image"}, {:query=>"Presidential seal with dark overlay", :category=>"stock_image"}]
      Searching for ONE image with 5 query options
      Trying query 1/5: 'Authoritarian leader gesturing forcefully' (category: stock_image)
    🔍 ImageServiceBus: Getting 3 images for query 'Authoritarian leader gesturing forcefully' (category: stock_image)
    🔍 ImageServiceBus: Attempting unsplash (attempt 1/12)
    ⚠️  ImageServiceBus: No results from unsplash
    🔍 ImageServiceBus: Attempting pexels (attempt 2/12)
    ✅ ImageServiceBus: Got 10 quality images from pexels
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from pexels: https://images.pexels.com/photos/12885859/pexels-photo-12885859.jpeg?auto=compress&cs=tinysrgb&h=650&w=940
      ✅ Generated 1 images
    📝 Processing segment: 5
    📝 Processing segment: 5
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"President Trump speaking at podium", :category=>"famous_person"}, {:query=>"Close-up of Donald Trump's face", :category=>"famous_person"}, {:query=>"Presidential press conference", :category=>"stock_image"}]
      Debug - final image_queries: [{:query=>"President Trump speaking at podium", :category=>"famous_person"}, {:query=>"Close-up of Donald Trump's face", :category=>"famous_person"}, {:query=>"Presidential press conference", :category=>"stock_image"}]
      Searching for ONE image with 5 query options
      Trying query 1/5: 'President Trump speaking at podium' (category: famous_person)
    🔍 ImageServiceBus: Getting 3 images for query 'President Trump speaking at podium' (category: famous_person)
    👤 Famous person detected - prioritizing Wikimedia
    🔍 ImageServiceBus: Attempting wikimedia (attempt 1/12)
    ⏭️  Skipping large file (164MB): Kimberly_Guilfoyle_Fayetteville%2C_NC%2C_Speech.wav
    ⚠️  ImageServiceBus: No results from wikimedia
    🔍 ImageServiceBus: Attempting unsplash (attempt 2/12)
    ⚠️  ImageServiceBus: No results from unsplash
    🔍 ImageServiceBus: Attempting pexels (attempt 3/12)
    ✅ ImageServiceBus: Got 10 quality images from pexels
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from pexels: https://images.pexels.com/photos/6172597/pexels-photo-6172597.jpeg?auto=compress&cs=tinysrgb&h=650&w=940
      ✅ Generated 1 images
    📝 Processing segment: 6
    📝 Processing segment: 6
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"CNN logo with red X", :category=>"stock_image"}, {:query=>"Journalist holding microphone", :category=>"stock_image"}, {:query=>"News broadcast graphic", :category=>"stock_image"}]
      Debug - final image_queries: [{:query=>"CNN logo with red X", :category=>"stock_image"}, {:query=>"Journalist holding microphone", :category=>"stock_image"}, {:query=>"News broadcast graphic", :category=>"stock_image"}]
      Searching for ONE image with 5 query options
      Trying query 1/5: 'CNN logo with red X' (category: stock_image)
    🔍 ImageServiceBus: Getting 3 images for query 'CNN logo with red X' (category: stock_image)
    🔍 ImageServiceBus: Attempting unsplash (attempt 1/12)
    ⚠️  ImageServiceBus: No results from unsplash
    🔍 ImageServiceBus: Attempting pexels (attempt 2/12)
    ✅ ImageServiceBus: Got 10 quality images from pexels
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from pexels: https://images.pexels.com/photos/9843280/pexels-photo-9843280.jpeg?auto=compress&cs=tinysrgb&h=650&w=940
      ✅ Generated 1 images
    📝 Processing segment: 7
    📝 Processing segment: 7
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"President Trump pointing finger", :category=>"famous_person"}, {:query=>"Close-up of CNN logo", :category=>"stock_image"}, {:query=>"President Trump in heated debate", :category=>"famous_person"}]
      Debug - final image_queries: [{:query=>"President Trump pointing finger", :category=>"famous_person"}, {:query=>"Close-up of CNN logo", :category=>"stock_image"}, {:query=>"President Trump in heated debate", :category=>"famous_person"}]
      Searching for ONE image with 5 query options
      Trying query 1/5: 'President Trump pointing finger' (category: famous_person)
    🔍 ImageServiceBus: Getting 3 images for query 'President Trump pointing finger' (category: famous_person)
    👤 Famous person detected - prioritizing Wikimedia
    🔍 ImageServiceBus: Attempting wikimedia (attempt 1/12)
    ✅ ImageServiceBus: Got 1 quality images from wikimedia
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from wikimedia: https://upload.wikimedia.org/wikipedia/commons/6/65/Baum--The_master_key.djvu
      ✅ Generated 1 images
    📝 Processing segment: 8
    📝 Processing segment: 8
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"US Capitol building dome", :category=>"stock_image"}, {:query=>"Congress in session illustration", :category=>"stock_image"}, {:query=>"Presidential seal with dollar signs", :category=>"stock_image"}]
      Debug - final image_queries: [{:query=>"US Capitol building dome", :category=>"stock_image"}, {:query=>"Congress in session illustration", :category=>"stock_image"}, {:query=>"Presidential seal with dollar signs", :category=>"stock_image"}]
      Searching for ONE image with 5 query options
      Trying query 1/5: 'US Capitol building dome' (category: stock_image)
    🔍 ImageServiceBus: Getting 3 images for query 'US Capitol building dome' (category: stock_image)
    🔍 ImageServiceBus: Attempting unsplash (attempt 1/12)
    ⚠️  ImageServiceBus: No results from unsplash
    🔍 ImageServiceBus: Attempting pexels (attempt 2/12)
    ✅ ImageServiceBus: Got 10 quality images from pexels
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from pexels: https://images.pexels.com/photos/937524/pexels-photo-937524.jpeg?auto=compress&cs=tinysrgb&h=650&w=940
      ✅ Generated 1 images
    📝 Processing segment: 9
    📝 Processing segment: 9
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"Gavel striking sound block", :category=>"stock_image"}, {:query=>"Scales of justice tilted", :category=>"stock_image"}, {:query=>"Supreme Court building exterior", :category=>"stock_image"}]
      Debug - final image_queries: [{:query=>"Gavel striking sound block", :category=>"stock_image"}, {:query=>"Scales of justice tilted", :category=>"stock_image"}, {:query=>"Supreme Court building exterior", :category=>"stock_image"}]
      Searching for ONE image with 5 query options
      Trying query 1/5: 'Gavel striking sound block' (category: stock_image)
    🔍 ImageServiceBus: Getting 3 images for query 'Gavel striking sound block' (category: stock_image)
    🔍 ImageServiceBus: Attempting unsplash (attempt 1/12)
    ⚠️  ImageServiceBus: No results from unsplash
    🔍 ImageServiceBus: Attempting pexels (attempt 2/12)
    ✅ ImageServiceBus: Got 10 quality images from pexels
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from pexels: https://images.pexels.com/photos/6077326/pexels-photo-6077326.jpeg?auto=compress&cs=tinysrgb&h=650&w=940
      ✅ Generated 1 images
    📝 Processing segment: 10
    📝 Processing segment: 10
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"person speaking at podium", :category=>"stock_image"}, {:query=>"microphone with blurred background", :category=>"stock_image"}, {:query=>"close-up of a mouth speaking", :category=>"stock_image"}]
      Debug - final image_queries: [{:query=>"person speaking at podium", :category=>"stock_image"}, {:query=>"microphone with blurred background", :category=>"stock_image"}, {:query=>"close-up of a mouth speaking", :category=>"stock_image"}]
      Searching for ONE image with 5 query options
      Trying query 1/5: 'person speaking at podium' (category: stock_image)
    🔍 ImageServiceBus: Getting 3 images for query 'person speaking at podium' (category: stock_image)
    🔍 ImageServiceBus: Attempting unsplash (attempt 1/12)
    ⚠️  ImageServiceBus: No results from unsplash
    🔍 ImageServiceBus: Attempting pexels (attempt 2/12)
    ✅ ImageServiceBus: Got 10 quality images from pexels
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from pexels: https://images.pexels.com/photos/8730757/pexels-photo-8730757.jpeg?auto=compress&cs=tinysrgb&h=650&w=940
      ✅ Generated 1 images
    📝 Processing segment: 11
    📝 Processing segment: 11
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"prison cell bars close-up", :category=>"stock_image"}, {:query=>"man in prison uniform looking down", :category=>"stock_image"}, {:query=>"handcuffs on a table", :category=>"stock_image"}]
      Debug - final image_queries: [{:query=>"prison cell bars close-up", :category=>"stock_image"}, {:query=>"man in prison uniform looking down", :category=>"stock_image"}, {:query=>"handcuffs on a table", :category=>"stock_image"}]
      Searching for ONE image with 5 query options
      Trying query 1/5: 'prison cell bars close-up' (category: stock_image)
    🔍 ImageServiceBus: Getting 3 images for query 'prison cell bars close-up' (category: stock_image)
    🔍 ImageServiceBus: Attempting unsplash (attempt 1/12)
    ⚠️  ImageServiceBus: No results from unsplash
    🔍 ImageServiceBus: Attempting pexels (attempt 2/12)
    ✅ ImageServiceBus: Got 10 quality images from pexels
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from pexels: https://images.pexels.com/photos/10475003/pexels-photo-10475003.jpeg?auto=compress&cs=tinysrgb&h=650&w=940
      ✅ Generated 1 images
    📝 Processing segment: 12
    📝 Processing segment: 12
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"gavel on law book", :category=>"stock_image"}, {:query=>"blindfolded justice statue", :category=>"stock_image"}, {:query=>"scales of justice close-up", :category=>"stock_image"}]
      Debug - final image_queries: [{:query=>"gavel on law book", :category=>"stock_image"}, {:query=>"blindfolded justice statue", :category=>"stock_image"}, {:query=>"scales of justice close-up", :category=>"stock_image"}]
      Searching for ONE image with 5 query options
      Trying query 1/5: 'gavel on law book' (category: stock_image)
    🔍 ImageServiceBus: Getting 3 images for query 'gavel on law book' (category: stock_image)
    🔍 ImageServiceBus: Attempting unsplash (attempt 1/12)
    ⚠️  ImageServiceBus: No results from unsplash
    🔍 ImageServiceBus: Attempting pexels (attempt 2/12)
    ✅ ImageServiceBus: Got 10 quality images from pexels
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from pexels: https://images.pexels.com/photos/7876088/pexels-photo-7876088.jpeg?auto=compress&cs=tinysrgb&h=650&w=940
      ✅ Generated 1 images
    📝 Processing segment: 13
    📝 Processing segment: 13
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"single spotlight on empty stage", :category=>"stock_image"}, {:query=>"abstract light beams", :category=>"stock_image"}, {:query=>"empty courtroom bench", :category=>"stock_image"}]
      Debug - final image_queries: [{:query=>"single spotlight on empty stage", :category=>"stock_image"}, {:query=>"abstract light beams", :category=>"stock_image"}, {:query=>"empty courtroom bench", :category=>"stock_image"}]
      Searching for ONE image with 5 query options
      Trying query 1/5: 'single spotlight on empty stage' (category: stock_image)
    🔍 ImageServiceBus: Getting 3 images for query 'single spotlight on empty stage' (category: stock_image)
    🔍 ImageServiceBus: Attempting unsplash (attempt 1/12)
    ⚠️  ImageServiceBus: No results from unsplash
    🔍 ImageServiceBus: Attempting pexels (attempt 2/12)
    ✅ ImageServiceBus: Got 10 quality images from pexels
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from pexels: https://images.pexels.com/photos/696407/pexels-photo-696407.jpeg?auto=compress&cs=tinysrgb&h=650&w=940
      ✅ Generated 1 images
    📝 Processing segment: 14
    📝 Processing segment: 14
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"Chief Justice John Roberts", :category=>"famous_person"}, {:query=>"Supreme Court building exterior", :category=>"stock_image"}, {:query=>"close-up of a hand gesturing", :category=>"stock_image"}]
      Debug - final image_queries: [{:query=>"Chief Justice John Roberts", :category=>"famous_person"}, {:query=>"Supreme Court building exterior", :category=>"stock_image"}, {:query=>"close-up of a hand gesturing", :category=>"stock_image"}]
      Searching for ONE image with 5 query options
      Trying query 1/5: 'Chief Justice John Roberts' (category: famous_person)
    🔍 ImageServiceBus: Getting 3 images for query 'Chief Justice John Roberts' (category: famous_person)
    👤 Famous person detected - prioritizing Wikimedia
    🔍 ImageServiceBus: Attempting wikimedia (attempt 1/12)
    ⏭️  Skipping large file (80MB): St._Nicholas_%28serial%29_%28IA_stnicholasserial321dodg%29.pdf
    ✅ ImageServiceBus: Got 5 quality images from wikimedia
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from wikimedia: https://upload.wikimedia.org/wikipedia/commons/f/f1/Chief_Justice_Roberts_and_Judge_Gorsuch.jpg
      ✅ Generated 1 images
    📝 Processing segment: 15
    📝 Processing segment: 15
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"money raining down on election ballot", :category=>"stock_image"}, {:query=>"\"Citizens United\" headline graphic", :category=>"general"}, {:query=>"silhouette of a billionaire with money bags", :category=>"stock_image"}]
      Debug - final image_queries: [{:query=>"money raining down on election ballot", :category=>"stock_image"}, {:query=>"\"Citizens United\" headline graphic", :category=>"general"}, {:query=>"silhouette of a billionaire with money bags", :category=>"stock_image"}]
      Searching for ONE image with 5 query options
      Trying query 1/5: 'money raining down on election ballot' (category: stock_image)
    🔍 ImageServiceBus: Getting 3 images for query 'money raining down on election ballot' (category: stock_image)
    🔍 ImageServiceBus: Attempting unsplash (attempt 1/12)
    ⚠️  ImageServiceBus: No results from unsplash
    🔍 ImageServiceBus: Attempting pexels (attempt 2/12)
    ✅ ImageServiceBus: Got 9 quality images from pexels
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from pexels: https://images.pexels.com/photos/8846079/pexels-photo-8846079.jpeg?auto=compress&cs=tinysrgb&h=650&w=940
      ✅ Generated 1 images
    📝 Processing segment: 16
    📝 Processing segment: 16
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"shattered glass on law book", :category=>"stock_image"}, {:query=>"crumpled legal document", :category=>"stock_image"}, {:query=>"dark stormy sky over courthouse", :category=>"stock_image"}]
      Debug - final image_queries: [{:query=>"shattered glass on law book", :category=>"stock_image"}, {:query=>"crumpled legal document", :category=>"stock_image"}, {:query=>"dark stormy sky over courthouse", :category=>"stock_image"}]
      Searching for ONE image with 5 query options
      Trying query 1/5: 'shattered glass on law book' (category: stock_image)
    🔍 ImageServiceBus: Getting 3 images for query 'shattered glass on law book' (category: stock_image)
    🔍 ImageServiceBus: Attempting unsplash (attempt 1/12)
    ⚠️  ImageServiceBus: No results from unsplash
    🔍 ImageServiceBus: Attempting pexels (attempt 2/12)
    ✅ ImageServiceBus: Got 10 quality images from pexels
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from pexels: https://images.pexels.com/photos/6170859/pexels-photo-6170859.jpeg?auto=compress&cs=tinysrgb&h=650&w=940
      ✅ Generated 1 images
    📝 Processing segment: 17
    📝 Processing segment: 17
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"protestors holding signs outside courthouse", :category=>"stock_image"}, {:query=>"crowd of people with raised fists", :category=>"stock_image"}, {:query=>"empty podium with microphones", :category=>"stock_image"}]
      Debug - final image_queries: [{:query=>"protestors holding signs outside courthouse", :category=>"stock_image"}, {:query=>"crowd of people with raised fists", :category=>"stock_image"}, {:query=>"empty podium with microphones", :category=>"stock_image"}]
      Searching for ONE image with 5 query options
      Trying query 1/5: 'protestors holding signs outside courthouse' (category: stock_image)
    🔍 ImageServiceBus: Getting 3 images for query 'protestors holding signs outside courthouse' (category: stock_image)
    🔍 ImageServiceBus: Attempting unsplash (attempt 1/12)
    ⚠️  ImageServiceBus: No results from unsplash
    🔍 ImageServiceBus: Attempting pexels (attempt 2/12)
    ✅ ImageServiceBus: Got 10 quality images from pexels
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from pexels: https://images.pexels.com/photos/4614296/pexels-photo-4614296.jpeg?auto=compress&cs=tinysrgb&h=650&w=940
      ✅ Generated 1 images
    📝 Processing segment: 18
    📝 Processing segment: 18
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"woman's silhouette with hand over heart", :category=>"stock_image"}, {:query=>"\"Roe v. Wade\" text graphic", :category=>"general"}, {:query=>"abstract representation of bodily autonomy", :category=>"stock_image"}]
      Debug - final image_queries: [{:query=>"woman's silhouette with hand over heart", :category=>"stock_image"}, {:query=>"\"Roe v. Wade\" text graphic", :category=>"general"}, {:query=>"abstract representation of bodily autonomy", :category=>"stock_image"}]
      Searching for ONE image with 5 query options
      Trying query 1/5: 'woman's silhouette with hand over heart' (category: stock_image)
    🔍 ImageServiceBus: Getting 3 images for query 'woman's silhouette with hand over heart' (category: stock_image)
    🔍 ImageServiceBus: Attempting unsplash (attempt 1/12)
    ⚠️  ImageServiceBus: No results from unsplash
    🔍 ImageServiceBus: Attempting pexels (attempt 2/12)
    ✅ ImageServiceBus: Got 10 quality images from pexels
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from pexels: https://images.pexels.com/photos/3824825/pexels-photo-3824825.jpeg?auto=compress&cs=tinysrgb&h=650&w=940
      ✅ Generated 1 images
    📝 Processing segment: 19
    📝 Processing segment: 19
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"scales of justice in silhouette", :category=>"stock_image"}, {:query=>"pathway through a forest", :category=>"stock_image"}, {:query=>"close-up of a compass", :category=>"stock_image"}]
      Debug - final image_queries: [{:query=>"scales of justice in silhouette", :category=>"stock_image"}, {:query=>"pathway through a forest", :category=>"stock_image"}, {:query=>"close-up of a compass", :category=>"stock_image"}]
      Searching for ONE image with 5 query options
      Trying query 1/5: 'scales of justice in silhouette' (category: stock_image)
    🔍 ImageServiceBus: Getting 3 images for query 'scales of justice in silhouette' (category: stock_image)
    🔍 ImageServiceBus: Attempting unsplash (attempt 1/12)
    ⚠️  ImageServiceBus: No results from unsplash
    🔍 ImageServiceBus: Attempting pexels (attempt 2/12)
    ✅ ImageServiceBus: Got 10 quality images from pexels
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from pexels: https://images.pexels.com/photos/6077297/pexels-photo-6077297.jpeg?auto=compress&cs=tinysrgb&h=650&w=940
      ✅ Generated 1 images
    📝 Processing segment: 20
    📝 Processing segment: 20
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"Gavel striking sounding block", :category=>"stock_image"}, {:query=>"Supreme Court building facade", :category=>"stock_image"}, {:query=>"Scales of justice close-up", :category=>"stock_image"}]
      Debug - final image_queries: [{:query=>"Gavel striking sounding block", :category=>"stock_image"}, {:query=>"Supreme Court building facade", :category=>"stock_image"}, {:query=>"Scales of justice close-up", :category=>"stock_image"}]
      Searching for ONE image with 5 query options
      Trying query 1/5: 'Gavel striking sounding block' (category: stock_image)
    🔍 ImageServiceBus: Getting 3 images for query 'Gavel striking sounding block' (category: stock_image)
    🔍 ImageServiceBus: Attempting unsplash (attempt 1/12)
    ⚠️  ImageServiceBus: No results from unsplash
    🔍 ImageServiceBus: Attempting pexels (attempt 2/12)
    ✅ ImageServiceBus: Got 10 quality images from pexels
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from pexels: https://images.pexels.com/photos/6998005/pexels-photo-6998005.jpeg?auto=compress&cs=tinysrgb&h=650&w=940
      ✅ Generated 1 images
    📝 Processing segment: 21
    📝 Processing segment: 21
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"Frightened American faces montage", :category=>"stock_image"}, {:query=>"Presidential seal with cracks", :category=>"stock_image"}, {:query=>"Constitution document with shadows", :category=>"stock_image"}]
      Debug - final image_queries: [{:query=>"Frightened American faces montage", :category=>"stock_image"}, {:query=>"Presidential seal with cracks", :category=>"stock_image"}, {:query=>"Constitution document with shadows", :category=>"stock_image"}]
      Searching for ONE image with 5 query options
      Trying query 1/5: 'Frightened American faces montage' (category: stock_image)
    🔍 ImageServiceBus: Getting 3 images for query 'Frightened American faces montage' (category: stock_image)
    🔍 ImageServiceBus: Attempting unsplash (attempt 1/12)
    ⚠️  ImageServiceBus: No results from unsplash
    🔍 ImageServiceBus: Attempting pexels (attempt 2/12)
    ✅ ImageServiceBus: Got 10 quality images from pexels
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from pexels: https://images.pexels.com/photos/6787007/pexels-photo-6787007.jpeg?auto=compress&cs=tinysrgb&h=650&w=940
      ✅ Generated 1 images
    📝 Processing segment: 22
    📝 Processing segment: 22
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"Red warning sign with exclamation", :category=>"stock_image"}, {:query=>"Dark stormy clouds gathering", :category=>"stock_image"}, {:query=>"Silhouette of a person looking menacing", :category=>"stock_image"}]
      Debug - final image_queries: [{:query=>"Red warning sign with exclamation", :category=>"stock_image"}, {:query=>"Dark stormy clouds gathering", :category=>"stock_image"}, {:query=>"Silhouette of a person looking menacing", :category=>"stock_image"}]
      Searching for ONE image with 5 query options
      Trying query 1/5: 'Red warning sign with exclamation' (category: stock_image)
    🔍 ImageServiceBus: Getting 3 images for query 'Red warning sign with exclamation' (category: stock_image)
    🔍 ImageServiceBus: Attempting unsplash (attempt 1/12)
    ⚠️  ImageServiceBus: No results from unsplash
    🔍 ImageServiceBus: Attempting pexels (attempt 2/12)
    ✅ ImageServiceBus: Got 10 quality images from pexels
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from pexels: https://images.pexels.com/photos/28487527/pexels-photo-28487527.jpeg?auto=compress&cs=tinysrgb&h=650&w=940
      ✅ Generated 1 images
    📝 Processing segment: 23
    📝 Processing segment: 23
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"John Roberts portrait", :category=>"famous_person"}, {:query=>"Supreme Court justices seated", :category=>"famous_person"}, {:query=>"Chief Justice John Roberts speaking", :category=>"famous_person"}]
      Debug - final image_queries: [{:query=>"John Roberts portrait", :category=>"famous_person"}, {:query=>"Supreme Court justices seated", :category=>"famous_person"}, {:query=>"Chief Justice John Roberts speaking", :category=>"famous_person"}]
      Searching for ONE image with 5 query options
      Trying query 1/5: 'John Roberts portrait' (category: famous_person)
    🔍 ImageServiceBus: Getting 3 images for query 'John Roberts portrait' (category: famous_person)
    👤 Famous person detected - prioritizing Wikimedia
    🔍 ImageServiceBus: Attempting wikimedia (attempt 1/12)
    ✅ ImageServiceBus: Got 8 quality images from wikimedia
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from wikimedia: https://upload.wikimedia.org/wikipedia/commons/5/58/A_woman_of_the_century.djvu
      ✅ Generated 1 images
    📝 Processing segment: 24
    📝 Processing segment: 24
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"John Roberts close-up profile", :category=>"famous_person"}, {:query=>"Man shrugging with uncertainty", :category=>"stock_image"}, {:query=>"Person looking thoughtful and hesitant", :category=>"stock_image"}]
      Debug - final image_queries: [{:query=>"John Roberts close-up profile", :category=>"famous_person"}, {:query=>"Man shrugging with uncertainty", :category=>"stock_image"}, {:query=>"Person looking thoughtful and hesitant", :category=>"stock_image"}]
      Searching for ONE image with 5 query options
      Trying query 1/5: 'John Roberts close-up profile' (category: famous_person)
    🔍 ImageServiceBus: Getting 3 images for query 'John Roberts close-up profile' (category: famous_person)
    👤 Famous person detected - prioritizing Wikimedia
    🔍 ImageServiceBus: Attempting wikimedia (attempt 1/12)
    ⏭️  Skipping large file (166MB): The_International_-_Volume_3.djvu
    ⏭️  Skipping large file (126MB): The_Minnesota_legislative_manual._1985-1986.pdf
    ⏭️  Skipping large file (58MB): The_life_and_works_of_Edward_Greene_Malbone.djvu
    ⏭️  Skipping large file (68MB): Tumors_of_the_pituitary_gland.djvu
    ✅ ImageServiceBus: Got 2 quality images from wikimedia
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from wikimedia: https://upload.wikimedia.org/wikipedia/commons/a/ac/Cartoon_portraits_and_biographical_sketches_of_men_of_the_day.djvu
      ✅ Generated 1 images
    📝 Processing segment: 25
    📝 Processing segment: 25
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"Courtroom bench with empty seats", :category=>"stock_image"}, {:query=>"Abstract representation of judicial system", :category=>"stock_image"}, {:query=>"Man looking unimpressed", :category=>"stock_image"}]
      Debug - final image_queries: [{:query=>"Courtroom bench with empty seats", :category=>"stock_image"}, {:query=>"Abstract representation of judicial system", :category=>"stock_image"}, {:query=>"Man looking unimpressed", :category=>"stock_image"}]
      Searching for ONE image with 5 query options
      Trying query 1/5: 'Courtroom bench with empty seats' (category: stock_image)
    🔍 ImageServiceBus: Getting 3 images for query 'Courtroom bench with empty seats' (category: stock_image)
    🔍 ImageServiceBus: Attempting unsplash (attempt 1/12)
    ⚠️  ImageServiceBus: No results from unsplash
    🔍 ImageServiceBus: Attempting pexels (attempt 2/12)
    ✅ ImageServiceBus: Got 10 quality images from pexels
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from pexels: https://images.pexels.com/photos/7002939/pexels-photo-7002939.jpeg?auto=compress&cs=tinysrgb&h=650&w=940
      ✅ Generated 1 images
    📝 Processing segment: 26
    📝 Processing segment: 26
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"Presidential seal with a shadow", :category=>"stock_image"}, {:query=>"Constitution of the United States page", :category=>"stock_image"}, {:query=>"Man reaching for more power", :category=>"stock_image"}]
      Debug - final image_queries: [{:query=>"Presidential seal with a shadow", :category=>"stock_image"}, {:query=>"Constitution of the United States page", :category=>"stock_image"}, {:query=>"Man reaching for more power", :category=>"stock_image"}]
      Searching for ONE image with 5 query options
      Trying query 1/5: 'Presidential seal with a shadow' (category: stock_image)
    🔍 ImageServiceBus: Getting 3 images for query 'Presidential seal with a shadow' (category: stock_image)
    🔍 ImageServiceBus: Attempting unsplash (attempt 1/12)
    ⚠️  ImageServiceBus: No results from unsplash
    🔍 ImageServiceBus: Attempting pexels (attempt 2/12)
    ✅ ImageServiceBus: Got 10 quality images from pexels
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from pexels: https://images.pexels.com/photos/7767654/pexels-photo-7767654.jpeg?auto=compress&cs=tinysrgb&h=650&w=940
      ✅ Generated 1 images
    📝 Processing segment: 27
    📝 Processing segment: 27
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"67 senators voting in chamber", :category=>"famous_person"}, {:query=>"Republican and Democrat senators", :category=>"famous_person"}, {:query=>"Senate chamber interior", :category=>"stock_image"}]
      Debug - final image_queries: [{:query=>"67 senators voting in chamber", :category=>"famous_person"}, {:query=>"Republican and Democrat senators", :category=>"famous_person"}, {:query=>"Senate chamber interior", :category=>"stock_image"}]
      Searching for ONE image with 5 query options
      Trying query 1/5: '67 senators voting in chamber' (category: famous_person)
    🔍 ImageServiceBus: Getting 3 images for query '67 senators voting in chamber' (category: famous_person)
    👤 Famous person detected - prioritizing Wikimedia
    🔍 ImageServiceBus: Attempting wikimedia (attempt 1/12)
    ⏭️  Skipping large file (85MB): Exhibitor%27s_Trade_Review_%28weekly%2C_May_30%2C_1925_to_August_29%2C_1925%29.djvu
    ⏭️  Skipping large file (50MB): Redbook-1955-1956_%2856GA%29.pdf
    ⏭️  Skipping large file (56MB): Redbook-1961-1962_%2859GA%29.pdf
    ⏭️  Skipping large file (62MB): Redbook-1967-1968_%2862GA%29.pdf
    ⏭️  Skipping large file (95MB): Sherman_Genealogy.djvu
    ✅ ImageServiceBus: Got 1 quality images from wikimedia
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from wikimedia: https://upload.wikimedia.org/wikipedia/commons/c/c7/Debates_in_the_Several_State_Conventions%2C_v2.djvu
      ✅ Generated 1 images
    📝 Processing segment: 28
    📝 Processing segment: 28
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"Republican senators looking skeptical", :category=>"famous_person"}, {:query=>"Democratic senators looking hesitant", :category=>"famous_person"}, {:query=>"Group of politicians shaking heads", :category=>"famous_person"}]
      Debug - final image_queries: [{:query=>"Republican senators looking skeptical", :category=>"famous_person"}, {:query=>"Democratic senators looking hesitant", :category=>"famous_person"}, {:query=>"Group of politicians shaking heads", :category=>"famous_person"}]
      Searching for ONE image with 5 query options
      Trying query 1/5: 'Republican senators looking skeptical' (category: famous_person)
    🔍 ImageServiceBus: Getting 3 images for query 'Republican senators looking skeptical' (category: famous_person)
    👤 Famous person detected - prioritizing Wikimedia
    🔍 ImageServiceBus: Attempting wikimedia (attempt 1/12)
    ⏭️  Skipping video file: Address_Before_a_Joint_Session_of_Congress_%28February_24%2C_2009%29-Barack_Obama.ogv
    ⏭️  Skipping video file: Address_Before_a_Joint_Session_of_Congress_%28February_24%2C_2009%29-Barack_Obama_%28WhiteHouse.gov%29.ogv
    ⏭️  Skipping video file: Address_Before_a_Joint_Session_of_Congress_%28February_24%2C_2009%29_-_Barack_Obama_%28WhiteHouse.gov%29.ogv
    ⏭️  Skipping large file (149MB): Interview_of_Gordon_Sondland_with_addendum.pdf
    ⏭️  Skipping video file: State_of_the_Union_Address_%28January_27%2C_2010%29_Barack_Obama_%28WhiteHouse.gov%29.ogv
    ⏭️  Skipping video file: State_of_the_Union_Address_%28January_27%2C_2010%29_Barack_Obama_%28WhiteHouse.gov-reedit%29.ogv
    ⚠️  ImageServiceBus: No results from wikimedia
    🔍 ImageServiceBus: Attempting unsplash (attempt 2/12)
    ⚠️  ImageServiceBus: No results from unsplash
    🔍 ImageServiceBus: Attempting pexels (attempt 3/12)
    ✅ ImageServiceBus: Got 10 quality images from pexels
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from pexels: https://images.pexels.com/photos/6974936/pexels-photo-6974936.jpeg?auto=compress&cs=tinysrgb&h=650&w=940
      ✅ Generated 1 images
    📝 Processing segment: 29
    📝 Processing segment: 29
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"Man waving hand dismissively", :category=>"stock_image"}, {:query=>"Person shaking head no", :category=>"stock_image"}, {:query=>"Abstract 'no' symbol", :category=>"stock_image"}]
      Debug - final image_queries: [{:query=>"Man waving hand dismissively", :category=>"stock_image"}, {:query=>"Person shaking head no", :category=>"stock_image"}, {:query=>"Abstract 'no' symbol", :category=>"stock_image"}]
      Searching for ONE image with 5 query options
      Trying query 1/5: 'Man waving hand dismissively' (category: stock_image)
    🔍 ImageServiceBus: Getting 3 images for query 'Man waving hand dismissively' (category: stock_image)
    🔍 ImageServiceBus: Attempting unsplash (attempt 1/12)
    ⚠️  ImageServiceBus: No results from unsplash
    🔍 ImageServiceBus: Attempting pexels (attempt 2/12)
    ✅ ImageServiceBus: Got 10 quality images from pexels
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from pexels: https://images.pexels.com/photos/6937809/pexels-photo-6937809.jpeg?auto=compress&cs=tinysrgb&h=650&w=940
      ✅ Generated 1 images
    📝 Processing segment: 30
    📝 Processing segment: 30
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"Donald Trump speaking at podium", :category=>"famous_person"}, {:query=>"close-up of a period punctuation mark", :category=>"stock_image"}, {:query=>"political rally crowd cheering", :category=>"general"}]
      Debug - final image_queries: [{:query=>"Donald Trump speaking at podium", :category=>"famous_person"}, {:query=>"close-up of a period punctuation mark", :category=>"stock_image"}, {:query=>"political rally crowd cheering", :category=>"general"}]
      Searching for ONE image with 5 query options
      Trying query 1/5: 'Donald Trump speaking at podium' (category: famous_person)
    🔍 ImageServiceBus: Getting 3 images for query 'Donald Trump speaking at podium' (category: famous_person)
    👤 Famous person detected - prioritizing Wikimedia
    🔍 ImageServiceBus: Attempting wikimedia (attempt 1/12)
    ⏭️  Skipping large file (164MB): Kimberly_Guilfoyle_Fayetteville%2C_NC%2C_Speech.wav
    ✅ ImageServiceBus: Got 1 quality images from wikimedia
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from wikimedia: https://upload.wikimedia.org/wikipedia/commons/0/04/Donald_Trump_rally_Grappone_Conference_Center_Concord_NH_January_2024_30.jpg
      ✅ Generated 1 images
    📝 Processing segment: 31
    📝 Processing segment: 31
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"shadowy figures in authoritarian government", :category=>"stock_image"}, {:query=>"scales of justice tilted unfairly", :category=>"stock_image"}, {:query=>"protestors against authoritarianism", :category=>"general"}]
      Debug - final image_queries: [{:query=>"shadowy figures in authoritarian government", :category=>"stock_image"}, {:query=>"scales of justice tilted unfairly", :category=>"stock_image"}, {:query=>"protestors against authoritarianism", :category=>"general"}]
      Searching for ONE image with 5 query options
      Trying query 1/5: 'shadowy figures in authoritarian government' (category: stock_image)
    🔍 ImageServiceBus: Getting 3 images for query 'shadowy figures in authoritarian government' (category: stock_image)
    🔍 ImageServiceBus: Attempting unsplash (attempt 1/12)
    ⚠️  ImageServiceBus: No results from unsplash
    🔍 ImageServiceBus: Attempting pexels (attempt 2/12)
    ✅ ImageServiceBus: Got 10 quality images from pexels
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from pexels: https://images.pexels.com/photos/5435273/pexels-photo-5435273.jpeg?auto=compress&cs=tinysrgb&h=650&w=940
      ✅ Generated 1 images
    📝 Processing segment: 32
    📝 Processing segment: 32
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"Donald Trump smiling warmly", :category=>"famous_person"}, {:query=>"people shaking hands enthusiastically", :category=>"stock_image"}, {:query=>"Donald Trump interacting with supporters", :category=>"famous_person"}]
      Debug - final image_queries: [{:query=>"Donald Trump smiling warmly", :category=>"famous_person"}, {:query=>"people shaking hands enthusiastically", :category=>"stock_image"}, {:query=>"Donald Trump interacting with supporters", :category=>"famous_person"}]
      Searching for ONE image with 5 query options
      Trying query 1/5: 'Donald Trump smiling warmly' (category: famous_person)
    🔍 ImageServiceBus: Getting 3 images for query 'Donald Trump smiling warmly' (category: famous_person)
    👤 Famous person detected - prioritizing Wikimedia
    🔍 ImageServiceBus: Attempting wikimedia (attempt 1/12)
    ⏭️  Skipping large file (147MB): Donald%27s_school_days_%28IA_donaldsschoolday00howa%29.pdf
    ⚠️  ImageServiceBus: No results from wikimedia
    🔍 ImageServiceBus: Attempting unsplash (attempt 2/12)
    ⚠️  ImageServiceBus: No results from unsplash
    🔍 ImageServiceBus: Attempting pexels (attempt 3/12)
    ✅ ImageServiceBus: Got 10 quality images from pexels
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from pexels: https://images.pexels.com/photos/266004/pexels-photo-266004.jpeg?auto=compress&cs=tinysrgb&h=650&w=940
      ✅ Generated 1 images
    📝 Processing segment: 33
    📝 Processing segment: 33
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"people celebrating a victory", :category=>"stock_image"}, {:query=>"trophy being held aloft", :category=>"stock_image"}, {:query=>"group of smiling people", :category=>"stock_image"}]
      Debug - final image_queries: [{:query=>"people celebrating a victory", :category=>"stock_image"}, {:query=>"trophy being held aloft", :category=>"stock_image"}, {:query=>"group of smiling people", :category=>"stock_image"}]
      Searching for ONE image with 5 query options
      Trying query 1/5: 'people celebrating a victory' (category: stock_image)
    🔍 ImageServiceBus: Getting 3 images for query 'people celebrating a victory' (category: stock_image)
    🔍 ImageServiceBus: Attempting unsplash (attempt 1/12)
    ⚠️  ImageServiceBus: No results from unsplash
    🔍 ImageServiceBus: Attempting pexels (attempt 2/12)
    ✅ ImageServiceBus: Got 10 quality images from pexels
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from pexels: https://images.pexels.com/photos/3760044/pexels-photo-3760044.jpeg?auto=compress&cs=tinysrgb&h=650&w=940
      ✅ Generated 1 images
    📝 Processing segment: 34
    📝 Processing segment: 34
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"beautiful landscape at sunrise", :category=>"stock_image"}, {:query=>"people admiring art", :category=>"stock_image"}, {:query=>"close-up of a beautiful flower", :category=>"stock_image"}]
      Debug - final image_queries: [{:query=>"beautiful landscape at sunrise", :category=>"stock_image"}, {:query=>"people admiring art", :category=>"stock_image"}, {:query=>"close-up of a beautiful flower", :category=>"stock_image"}]
      Searching for ONE image with 5 query options
      Trying query 1/5: 'beautiful landscape at sunrise' (category: stock_image)
    🔍 ImageServiceBus: Getting 3 images for query 'beautiful landscape at sunrise' (category: stock_image)
    🔍 ImageServiceBus: Attempting unsplash (attempt 1/12)
    ⚠️  ImageServiceBus: No results from unsplash
    🔍 ImageServiceBus: Attempting pexels (attempt 2/12)
    ✅ ImageServiceBus: Got 10 quality images from pexels
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from pexels: https://images.pexels.com/photos/32901387/pexels-photo-32901387.jpeg?auto=compress&cs=tinysrgb&h=650&w=940
      ✅ Generated 1 images
    📝 Processing segment: 35
    📝 Processing segment: 35
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"person pointing finger accusingly", :category=>"stock_image"}, {:query=>"gavel striking a judge's bench", :category=>"stock_image"}, {:query=>"protestors holding signs", :category=>"general"}]
      Debug - final image_queries: [{:query=>"person pointing finger accusingly", :category=>"stock_image"}, {:query=>"gavel striking a judge's bench", :category=>"stock_image"}, {:query=>"protestors holding signs", :category=>"general"}]
      Searching for ONE image with 5 query options
      Trying query 1/5: 'person pointing finger accusingly' (category: stock_image)
    🔍 ImageServiceBus: Getting 3 images for query 'person pointing finger accusingly' (category: stock_image)
    🔍 ImageServiceBus: Attempting unsplash (attempt 1/12)
    ⚠️  ImageServiceBus: No results from unsplash
    🔍 ImageServiceBus: Attempting pexels (attempt 2/12)
    ✅ ImageServiceBus: Got 10 quality images from pexels
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from pexels: https://images.pexels.com/photos/652355/pexels-photo-652355.jpeg?auto=compress&cs=tinysrgb&h=650&w=940
      ✅ Generated 1 images
    📝 Processing segment: 36
    📝 Processing segment: 36
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"impeachment proceedings in congress", :category=>"famous_person"}, {:query=>"political cartoon of impeachment", :category=>"general"}, {:query=>"gavel and law books", :category=>"stock_image"}]
      Debug - final image_queries: [{:query=>"impeachment proceedings in congress", :category=>"famous_person"}, {:query=>"political cartoon of impeachment", :category=>"general"}, {:query=>"gavel and law books", :category=>"stock_image"}]
      Searching for ONE image with 5 query options
      Trying query 1/5: 'impeachment proceedings in congress' (category: famous_person)
    🔍 ImageServiceBus: Getting 3 images for query 'impeachment proceedings in congress' (category: famous_person)
    👤 Famous person detected - prioritizing Wikimedia
    🔍 ImageServiceBus: Attempting wikimedia (attempt 1/12)
    ✅ ImageServiceBus: Got 4 quality images from wikimedia
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from wikimedia: https://upload.wikimedia.org/wikipedia/commons/f/f7/Examiner%2C_Journal_of_Political_Economy%2C_v2n01.djvu
      ✅ Generated 1 images
    📝 Processing segment: 37
    📝 Processing segment: 37
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"person looking angry and disgusted", :category=>"stock_image"}, {:query=>"crumpled paper representing failure", :category=>"stock_image"}, {:query=>"dark storm clouds gathering", :category=>"stock_image"}]
      Debug - final image_queries: [{:query=>"person looking angry and disgusted", :category=>"stock_image"}, {:query=>"crumpled paper representing failure", :category=>"stock_image"}, {:query=>"dark storm clouds gathering", :category=>"stock_image"}]
      Searching for ONE image with 5 query options
      Trying query 1/5: 'person looking angry and disgusted' (category: stock_image)
    🔍 ImageServiceBus: Getting 3 images for query 'person looking angry and disgusted' (category: stock_image)
    🔍 ImageServiceBus: Attempting unsplash (attempt 1/12)
    ⚠️  ImageServiceBus: No results from unsplash
    🔍 ImageServiceBus: Attempting pexels (attempt 2/12)
    ✅ ImageServiceBus: Got 10 quality images from pexels
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from pexels: https://images.pexels.com/photos/3760790/pexels-photo-3760790.jpeg?auto=compress&cs=tinysrgb&h=650&w=940
      ✅ Generated 1 images
    📝 Processing segment: 38
    📝 Processing segment: 38
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"person labeled 'left-wing fanatic'", :category=>"general"}, {:query=>"political extremist propaganda poster", :category=>"general"}, {:query=>"person shouting aggressively", :category=>"stock_image"}]
      Debug - final image_queries: [{:query=>"person labeled 'left-wing fanatic'", :category=>"general"}, {:query=>"political extremist propaganda poster", :category=>"general"}, {:query=>"person shouting aggressively", :category=>"stock_image"}]
      Searching for ONE image with 5 query options
      Trying query 1/5: 'person labeled 'left-wing fanatic'' (category: general)
    🔍 ImageServiceBus: Getting 3 images for query 'person labeled 'left-wing fanatic'' (category: general)
    🔍 ImageServiceBus: Attempting unsplash (attempt 1/12)
    ⚠️  ImageServiceBus: No results from unsplash
    🔍 ImageServiceBus: Attempting pexels (attempt 2/12)
    ✅ ImageServiceBus: Got 10 quality images from pexels
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from pexels: https://images.pexels.com/photos/7217852/pexels-photo-7217852.jpeg?auto=compress&cs=tinysrgb&h=650&w=940
      ✅ Generated 1 images
    📝 Processing segment: 39
    📝 Processing segment: 39
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"warning sign with skull and crossbones", :category=>"stock_image"}, {:query=>"person looking worried at a trend graph", :category=>"stock_image"}, {:query=>"dominoes falling in a chain reaction", :category=>"stock_image"}]
      Debug - final image_queries: [{:query=>"warning sign with skull and crossbones", :category=>"stock_image"}, {:query=>"person looking worried at a trend graph", :category=>"stock_image"}, {:query=>"dominoes falling in a chain reaction", :category=>"stock_image"}]
      Searching for ONE image with 5 query options
      Trying query 1/5: 'warning sign with skull and crossbones' (category: stock_image)
    🔍 ImageServiceBus: Getting 3 images for query 'warning sign with skull and crossbones' (category: stock_image)
    🔍 ImageServiceBus: Attempting unsplash (attempt 1/12)
    ⚠️  ImageServiceBus: No results from unsplash
    🔍 ImageServiceBus: Attempting pexels (attempt 2/12)
    ✅ ImageServiceBus: Got 10 quality images from pexels
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from pexels: https://images.pexels.com/photos/3660228/pexels-photo-3660228.jpeg?auto=compress&cs=tinysrgb&h=650&w=940
      ✅ Generated 1 images
    📝 Processing segment: 40
    📝 Processing segment: 40
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"storm clouds gathering over city", :category=>"stock_image"}, {:query=>"person looking worried at news", :category=>"stock_image"}, {:query=>"abstract representation of difficult times", :category=>"general"}]
      Debug - final image_queries: [{:query=>"storm clouds gathering over city", :category=>"stock_image"}, {:query=>"person looking worried at news", :category=>"stock_image"}, {:query=>"abstract representation of difficult times", :category=>"general"}]
      Searching for ONE image with 5 query options
      Trying query 1/5: 'storm clouds gathering over city' (category: stock_image)
    🔍 ImageServiceBus: Getting 3 images for query 'storm clouds gathering over city' (category: stock_image)
    🔍 ImageServiceBus: Attempting unsplash (attempt 1/12)
    ⚠️  ImageServiceBus: No results from unsplash
    🔍 ImageServiceBus: Attempting pexels (attempt 2/12)
    ✅ ImageServiceBus: Got 10 quality images from pexels
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from pexels: https://images.pexels.com/photos/3102321/pexels-photo-3102321.jpeg?auto=compress&cs=tinysrgb&h=650&w=940
      ✅ Generated 1 images
    📝 Processing segment: 41
    📝 Processing segment: 41
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"statue of liberty with chains", :category=>"stock_image"}, {:query=>"Elon Musk speaking at podium", :category=>"famous_person"}, {:query=>"group of billionaires in suits", :category=>"stock_image"}]
      Debug - final image_queries: [{:query=>"statue of liberty with chains", :category=>"stock_image"}, {:query=>"Elon Musk speaking at podium", :category=>"famous_person"}, {:query=>"group of billionaires in suits", :category=>"stock_image"}]
      Searching for ONE image with 5 query options
      Trying query 1/5: 'statue of liberty with chains' (category: stock_image)
    🔍 ImageServiceBus: Getting 3 images for query 'statue of liberty with chains' (category: stock_image)
    🔍 ImageServiceBus: Attempting unsplash (attempt 1/12)
    ⚠️  ImageServiceBus: No results from unsplash
    🔍 ImageServiceBus: Attempting pexels (attempt 2/12)
    ✅ ImageServiceBus: Got 10 quality images from pexels
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from pexels: https://images.pexels.com/photos/32839123/pexels-photo-32839123.jpeg?auto=compress&cs=tinysrgb&h=650&w=940
      ✅ Generated 1 images
    📝 Processing segment: 42
    📝 Processing segment: 42
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"US Department of Veterans Affairs building", :category=>"stock_image"}, {:query=>"healthcare workers in hospital", :category=>"stock_image"}, {:query=>"veteran receiving medical care", :category=>"stock_image"}]
      Debug - final image_queries: [{:query=>"US Department of Veterans Affairs building", :category=>"stock_image"}, {:query=>"healthcare workers in hospital", :category=>"stock_image"}, {:query=>"veteran receiving medical care", :category=>"stock_image"}]
      Searching for ONE image with 5 query options
      Trying query 1/5: 'US Department of Veterans Affairs building' (category: stock_image)
    🔍 ImageServiceBus: Getting 3 images for query 'US Department of Veterans Affairs building' (category: stock_image)
    🔍 ImageServiceBus: Attempting unsplash (attempt 1/12)
    ⚠️  ImageServiceBus: No results from unsplash
    🔍 ImageServiceBus: Attempting pexels (attempt 2/12)
    ✅ ImageServiceBus: Got 10 quality images from pexels
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from pexels: https://images.pexels.com/photos/12449550/pexels-photo-12449550.jpeg?auto=compress&cs=tinysrgb&h=650&w=940
      ✅ Generated 1 images
    📝 Processing segment: 43
    📝 Processing segment: 43
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"Social Security building facade", :category=>"stock_image"}, {:query=>"graphic of declining social security", :category=>"general"}, {:query=>"elderly person looking concerned", :category=>"stock_image"}]
      Debug - final image_queries: [{:query=>"Social Security building facade", :category=>"stock_image"}, {:query=>"graphic of declining social security", :category=>"general"}, {:query=>"elderly person looking concerned", :category=>"stock_image"}]
      Searching for ONE image with 5 query options
      Trying query 1/5: 'Social Security building facade' (category: stock_image)
    🔍 ImageServiceBus: Getting 3 images for query 'Social Security building facade' (category: stock_image)
    🔍 ImageServiceBus: Attempting unsplash (attempt 1/12)
    ⚠️  ImageServiceBus: No results from unsplash
    🔍 ImageServiceBus: Attempting pexels (attempt 2/12)
    ✅ ImageServiceBus: Got 10 quality images from pexels
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from pexels: https://images.pexels.com/photos/105066/pexels-photo-105066.jpeg?auto=compress&cs=tinysrgb&h=650&w=940
      ✅ Generated 1 images
    📝 Processing segment: 44
    📝 Processing segment: 44
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"closed Social Security office door", :category=>"stock_image"}, {:query=>"person with disability walking", :category=>"stock_image"}, {:query=>"empty government office interior", :category=>"stock_image"}]
      Debug - final image_queries: [{:query=>"closed Social Security office door", :category=>"stock_image"}, {:query=>"person with disability walking", :category=>"stock_image"}, {:query=>"empty government office interior", :category=>"stock_image"}]
      Searching for ONE image with 5 query options
      Trying query 1/5: 'closed Social Security office door' (category: stock_image)
    🔍 ImageServiceBus: Getting 3 images for query 'closed Social Security office door' (category: stock_image)
    🔍 ImageServiceBus: Attempting unsplash (attempt 1/12)
    ⚠️  ImageServiceBus: No results from unsplash
    🔍 ImageServiceBus: Attempting pexels (attempt 2/12)
    ✅ ImageServiceBus: Got 10 quality images from pexels
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from pexels: https://images.pexels.com/photos/12311703/pexels-photo-12311703.jpeg?auto=compress&cs=tinysrgb&h=650&w=940
      ✅ Generated 1 images
    📝 Processing segment: 45
    📝 Processing segment: 45
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"group of oligarchs in dark suits", :category=>"stock_image"}, {:query=>"graphic of tax cuts for wealthy", :category=>"general"}, {:query=>"protest against corporate greed", :category=>"stock_image"}]
      Debug - final image_queries: [{:query=>"group of oligarchs in dark suits", :category=>"stock_image"}, {:query=>"graphic of tax cuts for wealthy", :category=>"general"}, {:query=>"protest against corporate greed", :category=>"stock_image"}]
      Searching for ONE image with 5 query options
      Trying query 1/5: 'group of oligarchs in dark suits' (category: stock_image)
    🔍 ImageServiceBus: Getting 3 images for query 'group of oligarchs in dark suits' (category: stock_image)
    🔍 ImageServiceBus: Attempting unsplash (attempt 1/12)
    ⚠️  ImageServiceBus: No results from unsplash
    🔍 ImageServiceBus: Attempting pexels (attempt 2/12)
    ✅ ImageServiceBus: Got 10 quality images from pexels
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from pexels: https://images.pexels.com/photos/30741322/pexels-photo-30741322.png?auto=compress&cs=tinysrgb&h=650&w=940
      ✅ Generated 1 images
    📝 Processing segment: 46
    📝 Processing segment: 46
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"Alexandria Ocasio-Cortez speaking", :category=>"famous_person"}, {:query=>"person campaigning on stage", :category=>"stock_image"}, {:query=>"crowd at political rally", :category=>"stock_image"}]
      Debug - final image_queries: [{:query=>"Alexandria Ocasio-Cortez speaking", :category=>"famous_person"}, {:query=>"person campaigning on stage", :category=>"stock_image"}, {:query=>"crowd at political rally", :category=>"stock_image"}]
      Searching for ONE image with 5 query options
      Trying query 1/5: 'Alexandria Ocasio-Cortez speaking' (category: famous_person)
    🔍 ImageServiceBus: Getting 3 images for query 'Alexandria Ocasio-Cortez speaking' (category: famous_person)
    👤 Famous person detected - prioritizing Wikimedia
    🔍 ImageServiceBus: Attempting wikimedia (attempt 1/12)
    ✅ ImageServiceBus: Got 9 quality images from wikimedia
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from wikimedia: https://upload.wikimedia.org/wikipedia/commons/a/a3/Bernie_Sanders_%26_Alexandria_Ocasio-Cortez_%2854402258346%29.jpg
      ✅ Generated 1 images
    📝 Processing segment: 47
    📝 Processing segment: 47
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"Alexandria Ocasio-Cortez and speaker", :category=>"famous_person"}, {:query=>"political tour bus on road", :category=>"stock_image"}, {:query=>"people shaking hands at event", :category=>"stock_image"}]
      Debug - final image_queries: [{:query=>"Alexandria Ocasio-Cortez and speaker", :category=>"famous_person"}, {:query=>"political tour bus on road", :category=>"stock_image"}, {:query=>"people shaking hands at event", :category=>"stock_image"}]
      Searching for ONE image with 5 query options
      Trying query 1/5: 'Alexandria Ocasio-Cortez and speaker' (category: famous_person)
    🔍 ImageServiceBus: Getting 3 images for query 'Alexandria Ocasio-Cortez and speaker' (category: famous_person)
    👤 Famous person detected - prioritizing Wikimedia
    🔍 ImageServiceBus: Attempting wikimedia (attempt 1/12)
    ✅ ImageServiceBus: Got 1 quality images from wikimedia
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from wikimedia: https://upload.wikimedia.org/wikipedia/commons/2/23/Nancy_Pelosi_with_Rep_AOC_at_the_Speaker%27s_Room.jpg
      ✅ Generated 1 images
    📝 Processing segment: 48
    📝 Processing segment: 48
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"people gathered at a stop", :category=>"stock_image"}, {:query=>"speaker addressing a crowd", :category=>"stock_image"}, {:query=>"enthusiastic audience at event", :category=>"stock_image"}]
      Debug - final image_queries: [{:query=>"people gathered at a stop", :category=>"stock_image"}, {:query=>"speaker addressing a crowd", :category=>"stock_image"}, {:query=>"enthusiastic audience at event", :category=>"stock_image"}]
      Searching for ONE image with 5 query options
      Trying query 1/5: 'people gathered at a stop' (category: stock_image)
    🔍 ImageServiceBus: Getting 3 images for query 'people gathered at a stop' (category: stock_image)
    🔍 ImageServiceBus: Attempting unsplash (attempt 1/12)
    ⚠️  ImageServiceBus: No results from unsplash
    🔍 ImageServiceBus: Attempting pexels (attempt 2/12)
    ✅ ImageServiceBus: Got 10 quality images from pexels
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from pexels: https://images.pexels.com/photos/4614298/pexels-photo-4614298.jpeg?auto=compress&cs=tinysrgb&h=650&w=940
      ✅ Generated 1 images
    📝 Processing segment: 49
    📝 Processing segment: 49
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"large crowd at political rally", :category=>"stock_image"}, {:query=>"people cheering at event", :category=>"stock_image"}, {:query=>"diverse group of attendees", :category=>"stock_image"}]
      Debug - final image_queries: [{:query=>"large crowd at political rally", :category=>"stock_image"}, {:query=>"people cheering at event", :category=>"stock_image"}, {:query=>"diverse group of attendees", :category=>"stock_image"}]
      Searching for ONE image with 5 query options
      Trying query 1/5: 'large crowd at political rally' (category: stock_image)
    🔍 ImageServiceBus: Getting 3 images for query 'large crowd at political rally' (category: stock_image)
    🔍 ImageServiceBus: Attempting unsplash (attempt 1/12)
    ⚠️  ImageServiceBus: No results from unsplash
    🔍 ImageServiceBus: Attempting pexels (attempt 2/12)
    ✅ ImageServiceBus: Got 10 quality images from pexels
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from pexels: https://images.pexels.com/photos/2833377/pexels-photo-2833377.png?auto=compress&cs=tinysrgb&h=650&w=940
      ✅ Generated 1 images
    📝 Processing segment: 50
    📝 Processing segment: 50
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"politician speaking at podium Colorado", :category=>"famous_person"}, {:query=>"crowd listening to speaker Wisconsin", :category=>"stock_image"}, {:query=>"map of United States travel routes", :category=>"general"}]
      Debug - final image_queries: [{:query=>"politician speaking at podium Colorado", :category=>"famous_person"}, {:query=>"crowd listening to speaker Wisconsin", :category=>"stock_image"}, {:query=>"map of United States travel routes", :category=>"general"}]
      Searching for ONE image with 5 query options
      Trying query 1/5: 'politician speaking at podium Colorado' (category: famous_person)
    🔍 ImageServiceBus: Getting 3 images for query 'politician speaking at podium Colorado' (category: famous_person)
    👤 Famous person detected - prioritizing Wikimedia
    🔍 ImageServiceBus: Attempting wikimedia (attempt 1/12)
    ⚠️  ImageServiceBus: No results from wikimedia
    🔍 ImageServiceBus: Attempting unsplash (attempt 2/12)
    ⚠️  ImageServiceBus: No results from unsplash
    🔍 ImageServiceBus: Attempting pexels (attempt 3/12)
    ✅ ImageServiceBus: Got 10 quality images from pexels
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from pexels: https://images.pexels.com/photos/8847168/pexels-photo-8847168.jpeg?auto=compress&cs=tinysrgb&h=650&w=940
      ✅ Generated 1 images
    📝 Processing segment: 51
    📝 Processing segment: 51
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"calendar with next week highlighted", :category=>"stock_image"}, {:query=>"travel itinerary planner", :category=>"general"}, {:query=>"politician's schedule book", :category=>"famous_person"}]
      Debug - final image_queries: [{:query=>"calendar with next week highlighted", :category=>"stock_image"}, {:query=>"travel itinerary planner", :category=>"general"}, {:query=>"politician's schedule book", :category=>"famous_person"}]
      Searching for ONE image with 5 query options
      Trying query 1/5: 'calendar with next week highlighted' (category: stock_image)
    🔍 ImageServiceBus: Getting 3 images for query 'calendar with next week highlighted' (category: stock_image)
    🔍 ImageServiceBus: Attempting unsplash (attempt 1/12)
    ⚠️  ImageServiceBus: No results from unsplash
    🔍 ImageServiceBus: Attempting pexels (attempt 2/12)
    ✅ ImageServiceBus: Got 10 quality images from pexels
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from pexels: https://images.pexels.com/photos/8850864/pexels-photo-8850864.jpeg?auto=compress&cs=tinysrgb&h=650&w=940
      ✅ Generated 1 images
    📝 Processing segment: 52
    📝 Processing segment: 52
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"Elon Musk portrait serious expression", :category=>"famous_person"}, {:query=>"Donald Trump speaking at rally", :category=>"famous_person"}, {:query=>"despair in country abstract concept", :category=>"stock_image"}]
      Debug - final image_queries: [{:query=>"Elon Musk portrait serious expression", :category=>"famous_person"}, {:query=>"Donald Trump speaking at rally", :category=>"famous_person"}, {:query=>"despair in country abstract concept", :category=>"stock_image"}]
      Searching for ONE image with 5 query options
      Trying query 1/5: 'Elon Musk portrait serious expression' (category: famous_person)
    🔍 ImageServiceBus: Getting 3 images for query 'Elon Musk portrait serious expression' (category: famous_person)
    👤 Famous person detected - prioritizing Wikimedia
    🔍 ImageServiceBus: Attempting wikimedia (attempt 1/12)
    ⚠️  ImageServiceBus: No results from wikimedia
    🔍 ImageServiceBus: Attempting unsplash (attempt 2/12)
    ⚠️  ImageServiceBus: No results from unsplash
    🔍 ImageServiceBus: Attempting pexels (attempt 3/12)
    ✅ ImageServiceBus: Got 10 quality images from pexels
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from pexels: https://images.pexels.com/photos/32815478/pexels-photo-32815478.jpeg?auto=compress&cs=tinysrgb&h=650&w=940
      ✅ Generated 1 images
    📝 Processing segment: 53
    📝 Processing segment: 53
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"Democratic Congressman Glenn Ivey speaking", :category=>"famous_person"}, {:query=>"town hall meeting audience", :category=>"stock_image"}, {:query=>"congressman listening to constituent", :category=>"famous_person"}]
      Debug - final image_queries: [{:query=>"Democratic Congressman Glenn Ivey speaking", :category=>"famous_person"}, {:query=>"town hall meeting audience", :category=>"stock_image"}, {:query=>"congressman listening to constituent", :category=>"famous_person"}]
      Searching for ONE image with 5 query options
      Trying query 1/5: 'Democratic Congressman Glenn Ivey speaking' (category: famous_person)
    🔍 ImageServiceBus: Getting 3 images for query 'Democratic Congressman Glenn Ivey speaking' (category: famous_person)
    👤 Famous person detected - prioritizing Wikimedia
    🔍 ImageServiceBus: Attempting wikimedia (attempt 1/12)
    ⚠️  ImageServiceBus: No results from wikimedia
    🔍 ImageServiceBus: Attempting unsplash (attempt 2/12)
    ⚠️  ImageServiceBus: No results from unsplash
    🔍 ImageServiceBus: Attempting pexels (attempt 3/12)
    ✅ ImageServiceBus: Got 10 quality images from pexels
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from pexels: https://images.pexels.com/photos/8845955/pexels-photo-8845955.jpeg?auto=compress&cs=tinysrgb&h=650&w=940
      ✅ Generated 1 images
    📝 Processing segment: 54
    📝 Processing segment: 54
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"crumbling bridge symbolizing failure", :category=>"stock_image"}, {:query=>"broken gears mechanism", :category=>"stock_image"}, {:query=>"graphic of falling stock market", :category=>"general"}]
      Debug - final image_queries: [{:query=>"crumbling bridge symbolizing failure", :category=>"stock_image"}, {:query=>"broken gears mechanism", :category=>"stock_image"}, {:query=>"graphic of falling stock market", :category=>"general"}]
      Searching for ONE image with 5 query options
      Trying query 1/5: 'crumbling bridge symbolizing failure' (category: stock_image)
    🔍 ImageServiceBus: Getting 3 images for query 'crumbling bridge symbolizing failure' (category: stock_image)
    🔍 ImageServiceBus: Attempting unsplash (attempt 1/12)
    ⚠️  ImageServiceBus: No results from unsplash
    🔍 ImageServiceBus: Attempting pexels (attempt 2/12)
    ✅ ImageServiceBus: Got 10 quality images from pexels
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from pexels: https://images.pexels.com/photos/12957328/pexels-photo-12957328.jpeg?auto=compress&cs=tinysrgb&h=650&w=940
      ✅ Generated 1 images
    📝 Processing segment: 55
    📝 Processing segment: 55
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"group of people looking away", :category=>"stock_image"}, {:query=>"empty podium with microphone", :category=>"stock_image"}, {:query=>"politician ignored by audience", :category=>"famous_person"}]
      Debug - final image_queries: [{:query=>"group of people looking away", :category=>"stock_image"}, {:query=>"empty podium with microphone", :category=>"stock_image"}, {:query=>"politician ignored by audience", :category=>"famous_person"}]
      Searching for ONE image with 5 query options
      Trying query 1/5: 'group of people looking away' (category: stock_image)
    🔍 ImageServiceBus: Getting 3 images for query 'group of people looking away' (category: stock_image)
    🔍 ImageServiceBus: Attempting unsplash (attempt 1/12)
    ⚠️  ImageServiceBus: No results from unsplash
    🔍 ImageServiceBus: Attempting pexels (attempt 2/12)
    ✅ ImageServiceBus: Got 10 quality images from pexels
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from pexels: https://images.pexels.com/photos/18303277/pexels-photo-18303277.jpeg?auto=compress&cs=tinysrgb&h=650&w=940
      ✅ Generated 1 images
    📝 Processing segment: 56
    📝 Processing segment: 56
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"people nodding in agreement", :category=>"stock_image"}, {:query=>"knowledge graphic", :category=>"general"}, {:query=>"audience understanding speaker", :category=>"stock_image"}]
      Debug - final image_queries: [{:query=>"people nodding in agreement", :category=>"stock_image"}, {:query=>"knowledge graphic", :category=>"general"}, {:query=>"audience understanding speaker", :category=>"stock_image"}]
      Searching for ONE image with 5 query options
      Trying query 1/5: 'people nodding in agreement' (category: stock_image)
    🔍 ImageServiceBus: Getting 3 images for query 'people nodding in agreement' (category: stock_image)
    🔍 ImageServiceBus: Attempting unsplash (attempt 1/12)
    ⚠️  ImageServiceBus: No results from unsplash
    🔍 ImageServiceBus: Attempting pexels (attempt 2/12)
    ✅ ImageServiceBus: Got 10 quality images from pexels
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from pexels: https://images.pexels.com/photos/3184465/pexels-photo-3184465.jpeg?auto=compress&cs=tinysrgb&h=650&w=940
      ✅ Generated 1 images
    📝 Processing segment: 57
    📝 Processing segment: 57
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"Mitch McConnell portrait strategic look", :category=>"famous_person"}, {:query=>"protestors for working class", :category=>"stock_image"}, {:query=>"Alexandria Ocasio-Cortez speaking", :category=>"famous_person"}]
      Debug - final image_queries: [{:query=>"Mitch McConnell portrait strategic look", :category=>"famous_person"}, {:query=>"protestors for working class", :category=>"stock_image"}, {:query=>"Alexandria Ocasio-Cortez speaking", :category=>"famous_person"}]
      Searching for ONE image with 5 query options
      Trying query 1/5: 'Mitch McConnell portrait strategic look' (category: famous_person)
    🔍 ImageServiceBus: Getting 3 images for query 'Mitch McConnell portrait strategic look' (category: famous_person)
    👤 Famous person detected - prioritizing Wikimedia
    🔍 ImageServiceBus: Attempting wikimedia (attempt 1/12)
    ⚠️  ImageServiceBus: No results from wikimedia
    🔍 ImageServiceBus: Attempting unsplash (attempt 2/12)
    ⚠️  ImageServiceBus: No results from unsplash
    🔍 ImageServiceBus: Attempting pexels (attempt 3/12)
    ✅ ImageServiceBus: Got 10 quality images from pexels
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from pexels: https://images.pexels.com/photos/6688898/pexels-photo-6688898.jpeg?auto=compress&cs=tinysrgb&h=650&w=940
      ✅ Generated 1 images
    📝 Processing segment: 58
    📝 Processing segment: 58
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"graphic showing wage stagnation", :category=>"general"}, {:query=>"contrasting images of rich and poor", :category=>"stock_image"}, {:query=>"inflation chart with falling wages", :category=>"general"}]
      Debug - final image_queries: [{:query=>"graphic showing wage stagnation", :category=>"general"}, {:query=>"contrasting images of rich and poor", :category=>"stock_image"}, {:query=>"inflation chart with falling wages", :category=>"general"}]
      Searching for ONE image with 5 query options
      Trying query 1/5: 'graphic showing wage stagnation' (category: general)
    🔍 ImageServiceBus: Getting 3 images for query 'graphic showing wage stagnation' (category: general)
    🔍 ImageServiceBus: Attempting unsplash (attempt 1/12)
    ⚠️  ImageServiceBus: No results from unsplash
    🔍 ImageServiceBus: Attempting pexels (attempt 2/12)
    ✅ ImageServiceBus: Got 10 quality images from pexels
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from pexels: https://images.pexels.com/photos/417458/pexels-photo-417458.jpeg?auto=compress&cs=tinysrgb&h=650&w=940
      ✅ Generated 1 images
    📝 Processing segment: 59
    📝 Processing segment: 59
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"broken medical cross symbol", :category=>"stock_image"}, {:query=>"empty medicine cabinet", :category=>"stock_image"}, {:query=>"people waiting in long hospital line", :category=>"stock_image"}]
      Debug - final image_queries: [{:query=>"broken medical cross symbol", :category=>"stock_image"}, {:query=>"empty medicine cabinet", :category=>"stock_image"}, {:query=>"people waiting in long hospital line", :category=>"stock_image"}]
      Searching for ONE image with 5 query options
      Trying query 1/5: 'broken medical cross symbol' (category: stock_image)
    🔍 ImageServiceBus: Getting 3 images for query 'broken medical cross symbol' (category: stock_image)
    🔍 ImageServiceBus: Attempting unsplash (attempt 1/12)
    ⚠️  ImageServiceBus: No results from unsplash
    🔍 ImageServiceBus: Attempting pexels (attempt 2/12)
    ✅ ImageServiceBus: Got 10 quality images from pexels
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from pexels: https://images.pexels.com/photos/249348/pexels-photo-249348.jpeg?auto=compress&cs=tinysrgb&h=650&w=940
      ✅ Generated 1 images
    📝 Processing segment: 60
    📝 Processing segment: 60
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"crumbling daycare building exterior", :category=>"stock_image"}, {:query=>"sad parent holding child", :category=>"stock_image"}, {:query=>"empty classroom with toys", :category=>"stock_image"}]
      Debug - final image_queries: [{:query=>"crumbling daycare building exterior", :category=>"stock_image"}, {:query=>"sad parent holding child", :category=>"stock_image"}, {:query=>"empty classroom with toys", :category=>"stock_image"}]
      Searching for ONE image with 5 query options
      Trying query 1/5: 'crumbling daycare building exterior' (category: stock_image)
    🔍 ImageServiceBus: Getting 3 images for query 'crumbling daycare building exterior' (category: stock_image)
    🔍 ImageServiceBus: Attempting unsplash (attempt 1/12)
    ⚠️  ImageServiceBus: No results from unsplash
    🔍 ImageServiceBus: Attempting pexels (attempt 2/12)
    ✅ ImageServiceBus: Got 10 quality images from pexels
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from pexels: https://images.pexels.com/photos/1472234/pexels-photo-1472234.jpeg?auto=compress&cs=tinysrgb&h=650&w=940
      ✅ Generated 1 images
    📝 Processing segment: 61
    📝 Processing segment: 61
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"melting glacier with cracked ice", :category=>"stock_image"}, {:query=>"smoggy city skyline at sunset", :category=>"stock_image"}, {:query=>"dying coral reef underwater", :category=>"stock_image"}]
      Debug - final image_queries: [{:query=>"melting glacier with cracked ice", :category=>"stock_image"}, {:query=>"smoggy city skyline at sunset", :category=>"stock_image"}, {:query=>"dying coral reef underwater", :category=>"stock_image"}]
      Searching for ONE image with 5 query options
      Trying query 1/5: 'melting glacier with cracked ice' (category: stock_image)
    🔍 ImageServiceBus: Getting 3 images for query 'melting glacier with cracked ice' (category: stock_image)
    🔍 ImageServiceBus: Attempting unsplash (attempt 1/12)
    ⚠️  ImageServiceBus: No results from unsplash
    🔍 ImageServiceBus: Attempting pexels (attempt 2/12)
    ✅ ImageServiceBus: Got 10 quality images from pexels
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from pexels: https://images.pexels.com/photos/7442125/pexels-photo-7442125.jpeg?auto=compress&cs=tinysrgb&h=650&w=940
      ✅ Generated 1 images
    📝 Processing segment: 62
    📝 Processing segment: 62
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"diverse group of Americans protesting", :category=>"stock_image"}, {:query=>"crowd of people with signs", :category=>"stock_image"}, {:query=>"American flag waving in wind", :category=>"stock_image"}]
      Debug - final image_queries: [{:query=>"diverse group of Americans protesting", :category=>"stock_image"}, {:query=>"crowd of people with signs", :category=>"stock_image"}, {:query=>"American flag waving in wind", :category=>"stock_image"}]
      Searching for ONE image with 5 query options
      Trying query 1/5: 'diverse group of Americans protesting' (category: stock_image)
    🔍 ImageServiceBus: Getting 3 images for query 'diverse group of Americans protesting' (category: stock_image)
    🔍 ImageServiceBus: Attempting unsplash (attempt 1/12)
    ⚠️  ImageServiceBus: No results from unsplash
    🔍 ImageServiceBus: Attempting pexels (attempt 2/12)
    ✅ ImageServiceBus: Got 10 quality images from pexels
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from pexels: https://images.pexels.com/photos/5879677/pexels-photo-5879677.jpeg?auto=compress&cs=tinysrgb&h=650&w=940
      ✅ Generated 1 images
    📝 Processing segment: 63
    📝 Processing segment: 63
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"protestors marching against Trump", :category=>"famous_person"}, {:query=>"homeless person sleeping on sidewalk", :category=>"stock_image"}, {:query=>"healthcare worker in hospital", :category=>"stock_image"}]
      Debug - final image_queries: [{:query=>"protestors marching against Trump", :category=>"famous_person"}, {:query=>"homeless person sleeping on sidewalk", :category=>"stock_image"}, {:query=>"healthcare worker in hospital", :category=>"stock_image"}]
      Searching for ONE image with 5 query options
      Trying query 1/5: 'protestors marching against Trump' (category: famous_person)
    🔍 ImageServiceBus: Getting 3 images for query 'protestors marching against Trump' (category: famous_person)
    👤 Famous person detected - prioritizing Wikimedia
    🔍 ImageServiceBus: Attempting wikimedia (attempt 1/12)
    ✅ ImageServiceBus: Got 8 quality images from wikimedia
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from wikimedia: https://upload.wikimedia.org/wikipedia/commons/4/4a/Climate_March_protesters_against_Erik_Paulsen_%2833539628573%29.jpg
      ✅ Generated 1 images
    📝 Processing segment: 64
    📝 Processing segment: 64
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"iconic American landmarks montage", :category=>"stock_image"}, {:query=>"diverse Americans looking hopeful", :category=>"stock_image"}, {:query=>"American flag with diverse faces", :category=>"stock_image"}]
      Debug - final image_queries: [{:query=>"iconic American landmarks montage", :category=>"stock_image"}, {:query=>"diverse Americans looking hopeful", :category=>"stock_image"}, {:query=>"American flag with diverse faces", :category=>"stock_image"}]
      Searching for ONE image with 5 query options
      Trying query 1/5: 'iconic American landmarks montage' (category: stock_image)
    🔍 ImageServiceBus: Getting 3 images for query 'iconic American landmarks montage' (category: stock_image)
    🔍 ImageServiceBus: Attempting unsplash (attempt 1/12)
    ⚠️  ImageServiceBus: No results from unsplash
    🔍 ImageServiceBus: Attempting pexels (attempt 2/12)
    ✅ ImageServiceBus: Got 10 quality images from pexels
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from pexels: https://images.pexels.com/photos/22039069/pexels-photo-22039069.jpeg?auto=compress&cs=tinysrgb&h=650&w=940
      ✅ Generated 1 images
    📝 Processing segment: 65
    📝 Processing segment: 65
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"skyscrapers in a major city", :category=>"stock_image"}, {:query=>"stock market ticker display", :category=>"stock_image"}, {:query=>"overflowing wealth and resources", :category=>"stock_image"}]
      Debug - final image_queries: [{:query=>"skyscrapers in a major city", :category=>"stock_image"}, {:query=>"stock market ticker display", :category=>"stock_image"}, {:query=>"overflowing wealth and resources", :category=>"stock_image"}]
      Searching for ONE image with 5 query options
      Trying query 1/5: 'skyscrapers in a major city' (category: stock_image)
    🔍 ImageServiceBus: Getting 3 images for query 'skyscrapers in a major city' (category: stock_image)
    🔍 ImageServiceBus: Attempting unsplash (attempt 1/12)
    ⚠️  ImageServiceBus: No results from unsplash
    🔍 ImageServiceBus: Attempting pexels (attempt 2/12)
    ✅ ImageServiceBus: Got 10 quality images from pexels
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from pexels: https://images.pexels.com/photos/3879060/pexels-photo-3879060.jpeg?auto=compress&cs=tinysrgb&h=650&w=940
      ✅ Generated 1 images
    📝 Processing segment: 66
    📝 Processing segment: 66
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"diverse community working together", :category=>"stock_image"}, {:query=>"people building something collaboratively", :category=>"stock_image"}, {:query=>"prosperous cityscape with green spaces", :category=>"stock_image"}]
      Debug - final image_queries: [{:query=>"diverse community working together", :category=>"stock_image"}, {:query=>"people building something collaboratively", :category=>"stock_image"}, {:query=>"prosperous cityscape with green spaces", :category=>"stock_image"}]
      Searching for ONE image with 5 query options
      Trying query 1/5: 'diverse community working together' (category: stock_image)
    🔍 ImageServiceBus: Getting 3 images for query 'diverse community working together' (category: stock_image)
    🔍 ImageServiceBus: Attempting unsplash (attempt 1/12)
    ⚠️  ImageServiceBus: No results from unsplash
    🔍 ImageServiceBus: Attempting pexels (attempt 2/12)
    ✅ ImageServiceBus: Got 10 quality images from pexels
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from pexels: https://images.pexels.com/photos/6994831/pexels-photo-6994831.jpeg?auto=compress&cs=tinysrgb&h=650&w=940
      ✅ Generated 1 images
    📝 Processing segment: 67
    📝 Processing segment: 67
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"Senator Chuck Schumer speaking", :category=>"famous_person"}, {:query=>"US Senate chamber interior", :category=>"stock_image"}, {:query=>"political debate on stage", :category=>"stock_image"}]
      Debug - final image_queries: [{:query=>"Senator Chuck Schumer speaking", :category=>"famous_person"}, {:query=>"US Senate chamber interior", :category=>"stock_image"}, {:query=>"political debate on stage", :category=>"stock_image"}]
      Searching for ONE image with 5 query options
      Trying query 1/5: 'Senator Chuck Schumer speaking' (category: famous_person)
    🔍 ImageServiceBus: Getting 3 images for query 'Senator Chuck Schumer speaking' (category: famous_person)
    👤 Famous person detected - prioritizing Wikimedia
    🔍 ImageServiceBus: Attempting wikimedia (attempt 1/12)
    ✅ ImageServiceBus: Got 3 quality images from wikimedia
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from wikimedia: https://upload.wikimedia.org/wikipedia/commons/2/24/Aerial_Tour_of_Storm_Damage_%2853052463127%29.jpg
      ✅ Generated 1 images
    📝 Processing segment: 68
    📝 Processing segment: 68
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"Chuck Schumer looking serious", :category=>"famous_person"}, {:query=>"shaking head no gesture", :category=>"stock_image"}, {:query=>"disagreement between politicians", :category=>"stock_image"}]
      Debug - final image_queries: [{:query=>"Chuck Schumer looking serious", :category=>"famous_person"}, {:query=>"shaking head no gesture", :category=>"stock_image"}, {:query=>"disagreement between politicians", :category=>"stock_image"}]
      Searching for ONE image with 5 query options
      Trying query 1/5: 'Chuck Schumer looking serious' (category: famous_person)
    🔍 ImageServiceBus: Getting 3 images for query 'Chuck Schumer looking serious' (category: famous_person)
    👤 Famous person detected - prioritizing Wikimedia
    🔍 ImageServiceBus: Attempting wikimedia (attempt 1/12)
    ⚠️  ImageServiceBus: No results from wikimedia
    🔍 ImageServiceBus: Attempting unsplash (attempt 2/12)
    ⚠️  ImageServiceBus: No results from unsplash
    🔍 ImageServiceBus: Attempting pexels (attempt 3/12)
    ✅ ImageServiceBus: Got 10 quality images from pexels
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from pexels: https://images.pexels.com/photos/3775130/pexels-photo-3775130.jpeg?auto=compress&cs=tinysrgb&h=650&w=940
      ✅ Generated 1 images
    📝 Processing segment: 69
    📝 Processing segment: 69
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"Chuck Schumer in a debate", :category=>"famous_person"}, {:query=>"person pointing finger in argument", :category=>"stock_image"}, {:query=>"political opponents facing off", :category=>"stock_image"}]
      Debug - final image_queries: [{:query=>"Chuck Schumer in a debate", :category=>"famous_person"}, {:query=>"person pointing finger in argument", :category=>"stock_image"}, {:query=>"political opponents facing off", :category=>"stock_image"}]
      Searching for ONE image with 5 query options
      Trying query 1/5: 'Chuck Schumer in a debate' (category: famous_person)
    🔍 ImageServiceBus: Getting 3 images for query 'Chuck Schumer in a debate' (category: famous_person)
    👤 Famous person detected - prioritizing Wikimedia
    🔍 ImageServiceBus: Attempting wikimedia (attempt 1/12)
    ⏭️  Skipping large file (108MB): Congressional_Record_1990-_Vol_136_Index_%28IA_sim_congressional-record-proceedings-and-debates_1990_136_index%29.pdf
    ⏭️  Skipping video file: Graham-_Obama%2C_House_of_Representatives_Should_Back_China_Currency_Bill.webm
    ⚠️  ImageServiceBus: No results from wikimedia
    🔍 ImageServiceBus: Attempting unsplash (attempt 2/12)
    ⚠️  ImageServiceBus: No results from unsplash
    🔍 ImageServiceBus: Attempting pexels (attempt 3/12)
    ✅ ImageServiceBus: Got 10 quality images from pexels
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from pexels: https://images.pexels.com/photos/6077797/pexels-photo-6077797.jpeg?auto=compress&cs=tinysrgb&h=650&w=940
      ✅ Generated 1 images
    📝 Processing segment: 70
    📝 Processing segment: 70
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"Chuck Schumer speaking at podium", :category=>"famous_person"}, {:query=>"Close-up of a gavel hitting wood", :category=>"stock_image"}, {:query=>"Senate chamber interior wide shot", :category=>"stock_image"}]
      Debug - final image_queries: [{:query=>"Chuck Schumer speaking at podium", :category=>"famous_person"}, {:query=>"Close-up of a gavel hitting wood", :category=>"stock_image"}, {:query=>"Senate chamber interior wide shot", :category=>"stock_image"}]
      Searching for ONE image with 5 query options
      Trying query 1/5: 'Chuck Schumer speaking at podium' (category: famous_person)
    🔍 ImageServiceBus: Getting 3 images for query 'Chuck Schumer speaking at podium' (category: famous_person)
    👤 Famous person detected - prioritizing Wikimedia
    🔍 ImageServiceBus: Attempting wikimedia (attempt 1/12)
    ⚠️  ImageServiceBus: No results from wikimedia
    🔍 ImageServiceBus: Attempting unsplash (attempt 2/12)
    ⚠️  ImageServiceBus: No results from unsplash
    🔍 ImageServiceBus: Attempting pexels (attempt 3/12)
    ✅ ImageServiceBus: Got 10 quality images from pexels
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from pexels: https://images.pexels.com/photos/6172613/pexels-photo-6172613.jpeg?auto=compress&cs=tinysrgb&h=650&w=940
      ✅ Generated 1 images
    📝 Processing segment: 71
    📝 Processing segment: 71
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"Diverse group of politicians in discussion", :category=>"stock_image"}, {:query=>"Abstract representation of a political caucus", :category=>"stock_image"}, {:query=>"Congressional building interior hallway", :category=>"stock_image"}]
      Debug - final image_queries: [{:query=>"Diverse group of politicians in discussion", :category=>"stock_image"}, {:query=>"Abstract representation of a political caucus", :category=>"stock_image"}, {:query=>"Congressional building interior hallway", :category=>"stock_image"}]
      Searching for ONE image with 5 query options
      Trying query 1/5: 'Diverse group of politicians in discussion' (category: stock_image)
    🔍 ImageServiceBus: Getting 3 images for query 'Diverse group of politicians in discussion' (category: stock_image)
    🔍 ImageServiceBus: Attempting unsplash (attempt 1/12)
    ⚠️  ImageServiceBus: No results from unsplash
    🔍 ImageServiceBus: Attempting pexels (attempt 2/12)
    ✅ ImageServiceBus: Got 10 quality images from pexels
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from pexels: https://images.pexels.com/photos/4427628/pexels-photo-4427628.jpeg?auto=compress&cs=tinysrgb&h=650&w=940
      ✅ Generated 1 images
    📝 Processing segment: 72
    📝 Processing segment: 72
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"Lone figure walking away from a crowd", :category=>"stock_image"}, {:query=>"Abstract image of fractured unity", :category=>"stock_image"}, {:query=>"Empty legislative chamber seats", :category=>"stock_image"}]
      Debug - final image_queries: [{:query=>"Lone figure walking away from a crowd", :category=>"stock_image"}, {:query=>"Abstract image of fractured unity", :category=>"stock_image"}, {:query=>"Empty legislative chamber seats", :category=>"stock_image"}]
      Searching for ONE image with 5 query options
      Trying query 1/5: 'Lone figure walking away from a crowd' (category: stock_image)
    🔍 ImageServiceBus: Getting 3 images for query 'Lone figure walking away from a crowd' (category: stock_image)
    🔍 ImageServiceBus: Attempting unsplash (attempt 1/12)
    ⚠️  ImageServiceBus: No results from unsplash
    🔍 ImageServiceBus: Attempting pexels (attempt 2/12)
    ✅ ImageServiceBus: Got 10 quality images from pexels
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from pexels: https://images.pexels.com/photos/1857395/pexels-photo-1857395.jpeg?auto=compress&cs=tinysrgb&h=650&w=940
      ✅ Generated 1 images
    📝 Processing segment: 73
    📝 Processing segment: 73
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"Democratic Party donkey symbol close-up", :category=>"stock_image"}, {:query=>"Group of diverse people holding Democratic signs", :category=>"stock_image"}, {:query=>"US Capitol building with Democratic flags", :category=>"stock_image"}]
      Debug - final image_queries: [{:query=>"Democratic Party donkey symbol close-up", :category=>"stock_image"}, {:query=>"Group of diverse people holding Democratic signs", :category=>"stock_image"}, {:query=>"US Capitol building with Democratic flags", :category=>"stock_image"}]
      Searching for ONE image with 5 query options
      Trying query 1/5: 'Democratic Party donkey symbol close-up' (category: stock_image)
    🔍 ImageServiceBus: Getting 3 images for query 'Democratic Party donkey symbol close-up' (category: stock_image)
    🔍 ImageServiceBus: Attempting unsplash (attempt 1/12)
    ⚠️  ImageServiceBus: No results from unsplash
    🔍 ImageServiceBus: Attempting pexels (attempt 2/12)
    ✅ ImageServiceBus: Got 10 quality images from pexels
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from pexels: https://images.pexels.com/photos/5550311/pexels-photo-5550311.jpeg?auto=compress&cs=tinysrgb&h=650&w=940
      ✅ Generated 1 images
    📝 Processing segment: 74
    📝 Processing segment: 74
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"Elon Musk with Tesla logo background", :category=>"famous_person"}, {:query=>"Republican elephant symbol with dollar signs", :category=>"stock_image"}, {:query=>"Donald Trump speaking at a rally", :category=>"famous_person"}]
      Debug - final image_queries: [{:query=>"Elon Musk with Tesla logo background", :category=>"famous_person"}, {:query=>"Republican elephant symbol with dollar signs", :category=>"stock_image"}, {:query=>"Donald Trump speaking at a rally", :category=>"famous_person"}]
      Searching for ONE image with 6 query options
      Trying query 1/6: 'Elon Musk with Tesla logo background' (category: famous_person)
    🔍 ImageServiceBus: Getting 3 images for query 'Elon Musk with Tesla logo background' (category: famous_person)
    👤 Famous person detected - prioritizing Wikimedia
    🔍 ImageServiceBus: Attempting wikimedia (attempt 1/12)
    ✅ ImageServiceBus: Got 2 quality images from wikimedia
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from wikimedia: https://upload.wikimedia.org/wikipedia/commons/c/c8/Grand_Unveiling%2C_with_my_Roadster_%29_%285122701464%29.jpg
      ✅ Generated 1 images
    📝 Processing segment: 75
    📝 Processing segment: 75
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"Billionaire in a suit looking at city skyline", :category=>"stock_image"}, {:query=>"Consultants in a modern office meeting", :category=>"stock_image"}, {:query=>"Abstract representation of out-of-touch thinking", :category=>"stock_image"}]
      Debug - final image_queries: [{:query=>"Billionaire in a suit looking at city skyline", :category=>"stock_image"}, {:query=>"Consultants in a modern office meeting", :category=>"stock_image"}, {:query=>"Abstract representation of out-of-touch thinking", :category=>"stock_image"}]
      Searching for ONE image with 6 query options
      Trying query 1/6: 'Billionaire in a suit looking at city skyline' (category: stock_image)
    🔍 ImageServiceBus: Getting 3 images for query 'Billionaire in a suit looking at city skyline' (category: stock_image)
    🔍 ImageServiceBus: Attempting unsplash (attempt 1/12)
    ⚠️  ImageServiceBus: No results from unsplash
    🔍 ImageServiceBus: Attempting pexels (attempt 2/12)
    ✅ ImageServiceBus: Got 10 quality images from pexels
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from pexels: https://images.pexels.com/photos/8513068/pexels-photo-8513068.jpeg?auto=compress&cs=tinysrgb&h=650&w=940
      ✅ Generated 1 images
    📝 Processing segment: 76
    📝 Processing segment: 76
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"Empty street with a single person walking", :category=>"stock_image"}, {:query=>"Abstract image of fading support", :category=>"stock_image"}, {:query=>"Grassroots movement symbol", :category=>"stock_image"}]
      Debug - final image_queries: [{:query=>"Empty street with a single person walking", :category=>"stock_image"}, {:query=>"Abstract image of fading support", :category=>"stock_image"}, {:query=>"Grassroots movement symbol", :category=>"stock_image"}]
      Searching for ONE image with 5 query options
      Trying query 1/5: 'Empty street with a single person walking' (category: stock_image)
    🔍 ImageServiceBus: Getting 3 images for query 'Empty street with a single person walking' (category: stock_image)
    🔍 ImageServiceBus: Attempting unsplash (attempt 1/12)
    ⚠️  ImageServiceBus: No results from unsplash
    🔍 ImageServiceBus: Attempting pexels (attempt 2/12)
    ✅ ImageServiceBus: Got 10 quality images from pexels
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from pexels: https://images.pexels.com/photos/14533242/pexels-photo-14533242.jpeg?auto=compress&cs=tinysrgb&h=650&w=940
      ✅ Generated 1 images
    📝 Processing segment: 77
    📝 Processing segment: 77
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"Young people and working class people protesting", :category=>"stock_image"}, {:query=>"Alexandria Ocasio-Cortez speaking to a crowd", :category=>"famous_person"}, {:query=>"People of color at a political rally", :category=>"stock_image"}]
      Debug - final image_queries: [{:query=>"Young people and working class people protesting", :category=>"stock_image"}, {:query=>"Alexandria Ocasio-Cortez speaking to a crowd", :category=>"famous_person"}, {:query=>"People of color at a political rally", :category=>"stock_image"}]
      Searching for ONE image with 6 query options
      Trying query 1/6: 'Young people and working class people protesting' (category: stock_image)
    🔍 ImageServiceBus: Getting 3 images for query 'Young people and working class people protesting' (category: stock_image)
    🔍 ImageServiceBus: Attempting unsplash (attempt 1/12)
    ⚠️  ImageServiceBus: No results from unsplash
    🔍 ImageServiceBus: Attempting pexels (attempt 2/12)
    ✅ ImageServiceBus: Got 10 quality images from pexels
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from pexels: https://images.pexels.com/photos/3184468/pexels-photo-3184468.jpeg?auto=compress&cs=tinysrgb&h=650&w=940
      ✅ Generated 1 images
    📝 Processing segment: 78
    📝 Processing segment: 78
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"Alexandria Ocasio-Cortez interacting with voters", :category=>"famous_person"}, {:query=>"Close-up of a voter speaking to a politician", :category=>"stock_image"}, {:query=>"Crowd at a political event", :category=>"stock_image"}]
      Debug - final image_queries: [{:query=>"Alexandria Ocasio-Cortez interacting with voters", :category=>"famous_person"}, {:query=>"Close-up of a voter speaking to a politician", :category=>"stock_image"}, {:query=>"Crowd at a political event", :category=>"stock_image"}]
      Searching for ONE image with 6 query options
      Trying query 1/6: 'Alexandria Ocasio-Cortez interacting with voters' (category: famous_person)
    🔍 ImageServiceBus: Getting 3 images for query 'Alexandria Ocasio-Cortez interacting with voters' (category: famous_person)
    👤 Famous person detected - prioritizing Wikimedia
    🔍 ImageServiceBus: Attempting wikimedia (attempt 1/12)
    ⚠️  ImageServiceBus: No results from wikimedia
    🔍 ImageServiceBus: Attempting unsplash (attempt 2/12)
    ⚠️  ImageServiceBus: No results from unsplash
    🔍 ImageServiceBus: Attempting pexels (attempt 3/12)
    ✅ ImageServiceBus: Got 10 quality images from pexels
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from pexels: https://images.pexels.com/photos/7103122/pexels-photo-7103122.jpeg?auto=compress&cs=tinysrgb&h=650&w=940
      ✅ Generated 1 images
    📝 Processing segment: 79
    📝 Processing segment: 79
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"People chanting 'Primary Schumer'", :category=>"stock_image"}, {:query=>"Chuck Schumer looking concerned", :category=>"famous_person"}, {:query=>"Political campaign poster with 'Primary' text", :category=>"stock_image"}]
      Debug - final image_queries: [{:query=>"People chanting 'Primary Schumer'", :category=>"stock_image"}, {:query=>"Chuck Schumer looking concerned", :category=>"famous_person"}, {:query=>"Political campaign poster with 'Primary' text", :category=>"stock_image"}]
      Searching for ONE image with 6 query options
      Trying query 1/6: 'People chanting 'Primary Schumer'' (category: stock_image)
    🔍 ImageServiceBus: Getting 3 images for query 'People chanting 'Primary Schumer'' (category: stock_image)
    🔍 ImageServiceBus: Attempting unsplash (attempt 1/12)
    ⚠️  ImageServiceBus: No results from unsplash
    🔍 ImageServiceBus: Attempting pexels (attempt 2/12)
    ✅ ImageServiceBus: Got 10 quality images from pexels
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from pexels: https://images.pexels.com/photos/1464218/pexels-photo-1464218.jpeg?auto=compress&cs=tinysrgb&h=650&w=940
      ✅ Generated 1 images
    📝 Processing segment: 80
    📝 Processing segment: 80
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"politician looking determined debate", :category=>"famous_person"}, {:query=>"woman in political debate stance", :category=>"stock_image"}, {:query=>"strong female political opponent", :category=>"general"}]
      Debug - final image_queries: [{:query=>"politician looking determined debate", :category=>"famous_person"}, {:query=>"woman in political debate stance", :category=>"stock_image"}, {:query=>"strong female political opponent", :category=>"general"}]
      Searching for ONE image with 5 query options
      Trying query 1/5: 'politician looking determined debate' (category: famous_person)
    🔍 ImageServiceBus: Getting 3 images for query 'politician looking determined debate' (category: famous_person)
    👤 Famous person detected - prioritizing Wikimedia
    🔍 ImageServiceBus: Attempting wikimedia (attempt 1/12)
    ✅ ImageServiceBus: Got 4 quality images from wikimedia
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from wikimedia: https://upload.wikimedia.org/wikipedia/commons/e/e1/American_Boy%27s_Life_of_William_McKinley.djvu
      ✅ Generated 1 images
    📝 Processing segment: 81
    📝 Processing segment: 81
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"person looking away with reluctance", :category=>"stock_image"}, {:query=>"man with hesitant expression", :category=>"general"}, {:query=>"person refusing to move forward", :category=>"stock_image"}]
      Debug - final image_queries: [{:query=>"person looking away with reluctance", :category=>"stock_image"}, {:query=>"man with hesitant expression", :category=>"general"}, {:query=>"person refusing to move forward", :category=>"stock_image"}]
      Searching for ONE image with 5 query options
      Trying query 1/5: 'person looking away with reluctance' (category: stock_image)
    🔍 ImageServiceBus: Getting 3 images for query 'person looking away with reluctance' (category: stock_image)
    🔍 ImageServiceBus: Attempting unsplash (attempt 1/12)
    ⚠️  ImageServiceBus: No results from unsplash
    🔍 ImageServiceBus: Attempting pexels (attempt 2/12)
    ✅ ImageServiceBus: Got 10 quality images from pexels
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from pexels: https://images.pexels.com/photos/3986976/pexels-photo-3986976.jpeg?auto=compress&cs=tinysrgb&h=650&w=940
      ✅ Generated 1 images
    📝 Processing segment: 82
    📝 Processing segment: 82
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"calendar pages flipping rapidly", :category=>"stock_image"}, {:query=>"political timeline graphic", :category=>"general"}, {:query=>"abstract representation of time passing", :category=>"stock_image"}]
      Debug - final image_queries: [{:query=>"calendar pages flipping rapidly", :category=>"stock_image"}, {:query=>"political timeline graphic", :category=>"general"}, {:query=>"abstract representation of time passing", :category=>"stock_image"}]
      Searching for ONE image with 5 query options
      Trying query 1/5: 'calendar pages flipping rapidly' (category: stock_image)
    🔍 ImageServiceBus: Getting 3 images for query 'calendar pages flipping rapidly' (category: stock_image)
    🔍 ImageServiceBus: Attempting unsplash (attempt 1/12)
    ⚠️  ImageServiceBus: No results from unsplash
    🔍 ImageServiceBus: Attempting pexels (attempt 2/12)
    ✅ ImageServiceBus: Got 10 quality images from pexels
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from pexels: https://images.pexels.com/photos/5190598/pexels-photo-5190598.jpeg?auto=compress&cs=tinysrgb&h=650&w=940
      ✅ Generated 1 images
    📝 Processing segment: 83
    📝 Processing segment: 83
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"news headlines montage television", :category=>"stock_image"}, {:query=>"media circus chaotic scene", :category=>"general"}, {:query=>"television screen with news graphics", :category=>"stock_image"}]
      Debug - final image_queries: [{:query=>"news headlines montage television", :category=>"stock_image"}, {:query=>"media circus chaotic scene", :category=>"general"}, {:query=>"television screen with news graphics", :category=>"stock_image"}]
      Searching for ONE image with 5 query options
      Trying query 1/5: 'news headlines montage television' (category: stock_image)
    🔍 ImageServiceBus: Getting 3 images for query 'news headlines montage television' (category: stock_image)
    🔍 ImageServiceBus: Attempting unsplash (attempt 1/12)
    ⚠️  ImageServiceBus: No results from unsplash
    🔍 ImageServiceBus: Attempting pexels (attempt 2/12)
    ✅ ImageServiceBus: Got 10 quality images from pexels
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from pexels: https://images.pexels.com/photos/30885924/pexels-photo-30885924.jpeg?auto=compress&cs=tinysrgb&h=650&w=940
      ✅ Generated 1 images
    📝 Processing segment: 84
    📝 Processing segment: 84
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"crowd of concerned citizens", :category=>"stock_image"}, {:query=>"people looking worried at home", :category=>"general"}, {:query=>"ordinary people with worried expressions", :category=>"stock_image"}]
      Debug - final image_queries: [{:query=>"crowd of concerned citizens", :category=>"stock_image"}, {:query=>"people looking worried at home", :category=>"general"}, {:query=>"ordinary people with worried expressions", :category=>"stock_image"}]
      Searching for ONE image with 5 query options
      Trying query 1/5: 'crowd of concerned citizens' (category: stock_image)
    🔍 ImageServiceBus: Getting 3 images for query 'crowd of concerned citizens' (category: stock_image)
    🔍 ImageServiceBus: Attempting unsplash (attempt 1/12)
    ⚠️  ImageServiceBus: No results from unsplash
    🔍 ImageServiceBus: Attempting pexels (attempt 2/12)
    ✅ ImageServiceBus: Got 10 quality images from pexels
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from pexels: https://images.pexels.com/photos/6257138/pexels-photo-6257138.jpeg?auto=compress&cs=tinysrgb&h=650&w=940
      ✅ Generated 1 images
    📝 Processing segment: 85
    📝 Processing segment: 85
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"democratic party logo with question mark", :category=>"general"}, {:query=>"voters at polling station", :category=>"stock_image"}, {:query=>"group of diverse voters", :category=>"stock_image"}]
      Debug - final image_queries: [{:query=>"democratic party logo with question mark", :category=>"general"}, {:query=>"voters at polling station", :category=>"stock_image"}, {:query=>"group of diverse voters", :category=>"stock_image"}]
      Searching for ONE image with 5 query options
      Trying query 1/5: 'democratic party logo with question mark' (category: general)
    🔍 ImageServiceBus: Getting 3 images for query 'democratic party logo with question mark' (category: general)
    🔍 ImageServiceBus: Attempting unsplash (attempt 1/12)
    ⚠️  ImageServiceBus: No results from unsplash
    🔍 ImageServiceBus: Attempting pexels (attempt 2/12)
    ✅ ImageServiceBus: Got 10 quality images from pexels
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from pexels: https://images.pexels.com/photos/9215242/pexels-photo-9215242.jpeg?auto=compress&cs=tinysrgb&h=650&w=940
      ✅ Generated 1 images
    📝 Processing segment: 86
    📝 Processing segment: 86
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"person waking up stretching", :category=>"stock_image"}, {:query=>"sun rising over American landscape", :category=>"stock_image"}, {:query=>"awakening American people concept", :category=>"general"}]
      Debug - final image_queries: [{:query=>"person waking up stretching", :category=>"stock_image"}, {:query=>"sun rising over American landscape", :category=>"stock_image"}, {:query=>"awakening American people concept", :category=>"general"}]
      Searching for ONE image with 5 query options
      Trying query 1/5: 'person waking up stretching' (category: stock_image)
    🔍 ImageServiceBus: Getting 3 images for query 'person waking up stretching' (category: stock_image)
    🔍 ImageServiceBus: Attempting unsplash (attempt 1/12)
    ⚠️  ImageServiceBus: No results from unsplash
    🔍 ImageServiceBus: Attempting pexels (attempt 2/12)
    ✅ ImageServiceBus: Got 10 quality images from pexels
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from pexels: https://images.pexels.com/photos/7592293/pexels-photo-7592293.jpeg?auto=compress&cs=tinysrgb&h=650&w=940
      ✅ Generated 1 images
    📝 Processing segment: 87
    📝 Processing segment: 87
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"protest against tax breaks for rich", :category=>"stock_image"}, {:query=>"graphic showing tax cuts for billionaires", :category=>"general"}, {:query=>"protestors holding signs against cuts", :category=>"stock_image"}]
      Debug - final image_queries: [{:query=>"protest against tax breaks for rich", :category=>"stock_image"}, {:query=>"graphic showing tax cuts for billionaires", :category=>"general"}, {:query=>"protestors holding signs against cuts", :category=>"stock_image"}]
      Searching for ONE image with 5 query options
      Trying query 1/5: 'protest against tax breaks for rich' (category: stock_image)
    🔍 ImageServiceBus: Getting 3 images for query 'protest against tax breaks for rich' (category: stock_image)
    🔍 ImageServiceBus: Attempting unsplash (attempt 1/12)
    ⚠️  ImageServiceBus: No results from unsplash
    🔍 ImageServiceBus: Attempting pexels (attempt 2/12)
    ✅ ImageServiceBus: Got 10 quality images from pexels
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from pexels: https://images.pexels.com/photos/5723325/pexels-photo-5723325.jpeg?auto=compress&cs=tinysrgb&h=650&w=940
      ✅ Generated 1 images
    📝 Processing segment: 88
    📝 Processing segment: 88
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"working class family at dinner table", :category=>"stock_image"}, {:query=>"people rallying for workers rights", :category=>"stock_image"}, {:query=>"grassroots activism montage", :category=>"general"}]
      Debug - final image_queries: [{:query=>"working class family at dinner table", :category=>"stock_image"}, {:query=>"people rallying for workers rights", :category=>"stock_image"}, {:query=>"grassroots activism montage", :category=>"general"}]
      Searching for ONE image with 5 query options
      Trying query 1/5: 'working class family at dinner table' (category: stock_image)
    🔍 ImageServiceBus: Getting 3 images for query 'working class family at dinner table' (category: stock_image)
    🔍 ImageServiceBus: Attempting unsplash (attempt 1/12)
    ⚠️  ImageServiceBus: No results from unsplash
    🔍 ImageServiceBus: Attempting pexels (attempt 2/12)
    ✅ ImageServiceBus: Got 10 quality images from pexels
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from pexels: https://images.pexels.com/photos/6232531/pexels-photo-6232531.jpeg?auto=compress&cs=tinysrgb&h=650&w=940
      ✅ Generated 1 images
    📝 Processing segment: 89
    📝 Processing segment: 89
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"politician shaking hands with working class", :category=>"stock_image"}, {:query=>"person standing up for others", :category=>"general"}, {:query=>"contrast between rich and poor", :category=>"stock_image"}]
      Debug - final image_queries: [{:query=>"politician shaking hands with working class", :category=>"stock_image"}, {:query=>"person standing up for others", :category=>"general"}, {:query=>"contrast between rich and poor", :category=>"stock_image"}]
      Searching for ONE image with 5 query options
      Trying query 1/5: 'politician shaking hands with working class' (category: stock_image)
    🔍 ImageServiceBus: Getting 3 images for query 'politician shaking hands with working class' (category: stock_image)
    🔍 ImageServiceBus: Attempting unsplash (attempt 1/12)
    ⚠️  ImageServiceBus: No results from unsplash
    🔍 ImageServiceBus: Attempting pexels (attempt 2/12)
    ✅ ImageServiceBus: Got 10 quality images from pexels
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from pexels: https://images.pexels.com/photos/6503156/pexels-photo-6503156.jpeg?auto=compress&cs=tinysrgb&h=650&w=940
      ✅ Generated 1 images
    📝 Processing segment: 90
    📝 Processing segment: 90
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"Senator speaking at town hall", :category=>"famous_person"}, {:query=>"crowd listening intently at town hall", :category=>"stock_image"}, {:query=>"politician interacting with constituents", :category=>"general"}]
      Debug - final image_queries: [{:query=>"Senator speaking at town hall", :category=>"famous_person"}, {:query=>"crowd listening intently at town hall", :category=>"stock_image"}, {:query=>"politician interacting with constituents", :category=>"general"}]
      Searching for ONE image with 5 query options
      Trying query 1/5: 'Senator speaking at town hall' (category: famous_person)
    🔍 ImageServiceBus: Getting 3 images for query 'Senator speaking at town hall' (category: famous_person)
    👤 Famous person detected - prioritizing Wikimedia
    🔍 ImageServiceBus: Attempting wikimedia (attempt 1/12)
    ⏭️  Skipping large file (51MB): Charles_DWolf_of_Guadaloupe_OS.djvu
    ⏭️  Skipping large file (623MB): Frank_Leslie%27s_Illustrated_Newspaper_Vol._18.djvu
    ⏭️  Skipping large file (219MB): Library_journal_v_45_1920.djvu
    ⏭️  Skipping large file (100MB): Stories_from_old_English_poetry_%28IA_storiesfromolden00rich%29.pdf
    ⏭️  Skipping large file (63MB): The_King_in_Yellow_%281895%29.djvu
    ⚠️  ImageServiceBus: No results from wikimedia
    🔍 ImageServiceBus: Attempting unsplash (attempt 2/12)
    ⚠️  ImageServiceBus: No results from unsplash
    🔍 ImageServiceBus: Attempting pexels (attempt 3/12)
    ✅ ImageServiceBus: Got 10 quality images from pexels
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from pexels: https://images.pexels.com/photos/5711032/pexels-photo-5711032.jpeg?auto=compress&cs=tinysrgb&h=650&w=940
      ✅ Generated 1 images
    📝 Processing segment: 91
    📝 Processing segment: 91
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"Senator's campaign bus driving across country", :category=>"stock_image"}, {:query=>"map of United States with campaign stops", :category=>"general"}, {:query=>"politician waving from stage during tour", :category=>"famous_person"}]
      Debug - final image_queries: [{:query=>"Senator's campaign bus driving across country", :category=>"stock_image"}, {:query=>"map of United States with campaign stops", :category=>"general"}, {:query=>"politician waving from stage during tour", :category=>"famous_person"}]
      Searching for ONE image with 5 query options
      Trying query 1/5: 'Senator's campaign bus driving across country' (category: stock_image)
    🔍 ImageServiceBus: Getting 3 images for query 'Senator's campaign bus driving across country' (category: stock_image)
    🔍 ImageServiceBus: Attempting unsplash (attempt 1/12)
    ⚠️  ImageServiceBus: No results from unsplash
    🔍 ImageServiceBus: Attempting pexels (attempt 2/12)
    ✅ ImageServiceBus: Got 10 quality images from pexels
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from pexels: https://images.pexels.com/photos/14029723/pexels-photo-14029723.jpeg?auto=compress&cs=tinysrgb&h=650&w=940
      ✅ Generated 1 images
    📝 Processing segment: 92
    📝 Processing segment: 92
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"excited audience cheering at political rally", :category=>"stock_image"}, {:query=>"close-up of diverse audience faces reacting", :category=>"stock_image"}, {:query=>"Senator acknowledging applause from crowd", :category=>"famous_person"}]
      Debug - final image_queries: [{:query=>"excited audience cheering at political rally", :category=>"stock_image"}, {:query=>"close-up of diverse audience faces reacting", :category=>"stock_image"}, {:query=>"Senator acknowledging applause from crowd", :category=>"famous_person"}]
      Searching for ONE image with 5 query options
      Trying query 1/5: 'excited audience cheering at political rally' (category: stock_image)
    🔍 ImageServiceBus: Getting 3 images for query 'excited audience cheering at political rally' (category: stock_image)
    🔍 ImageServiceBus: Attempting unsplash (attempt 1/12)
    ⚠️  ImageServiceBus: No results from unsplash
    🔍 ImageServiceBus: Attempting pexels (attempt 2/12)
    ✅ ImageServiceBus: Got 10 quality images from pexels
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from pexels: https://images.pexels.com/photos/4955728/pexels-photo-4955728.jpeg?auto=compress&cs=tinysrgb&h=650&w=940
      ✅ Generated 1 images
    📝 Processing segment: 93
    📝 Processing segment: 93
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"President Trump speaking at podium", :category=>"famous_person"}, {:query=>"breaking news graphic with text overlay", :category=>"stock_image"}, {:query=>"White House exterior shot at night", :category=>"stock_image"}]
      Debug - final image_queries: [{:query=>"President Trump speaking at podium", :category=>"famous_person"}, {:query=>"breaking news graphic with text overlay", :category=>"stock_image"}, {:query=>"White House exterior shot at night", :category=>"stock_image"}]
      Searching for ONE image with 5 query options
      Trying query 1/5: 'President Trump speaking at podium' (category: famous_person)
    🔍 ImageServiceBus: Getting 3 images for query 'President Trump speaking at podium' (category: famous_person)
    👤 Famous person detected - prioritizing Wikimedia
    🔍 ImageServiceBus: Attempting wikimedia (attempt 1/12)
    ⏭️  Skipping large file (164MB): Kimberly_Guilfoyle_Fayetteville%2C_NC%2C_Speech.wav
    ⚠️  ImageServiceBus: No results from wikimedia
    🔍 ImageServiceBus: Attempting unsplash (attempt 2/12)
    ⚠️  ImageServiceBus: No results from unsplash
    🔍 ImageServiceBus: Attempting pexels (attempt 3/12)
    ✅ ImageServiceBus: Got 10 quality images from pexels
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from pexels: https://images.pexels.com/photos/3880204/pexels-photo-3880204.jpeg?auto=compress&cs=tinysrgb&h=650&w=940
      ✅ Generated 1 images
    📝 Processing segment: 94
    📝 Processing segment: 94
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"Federal Trade Commission building exterior", :category=>"stock_image"}, {:query=>"graphic illustrating government commission seats", :category=>"general"}, {:query=>"US Capitol building dome", :category=>"stock_image"}]
      Debug - final image_queries: [{:query=>"Federal Trade Commission building exterior", :category=>"stock_image"}, {:query=>"graphic illustrating government commission seats", :category=>"general"}, {:query=>"US Capitol building dome", :category=>"stock_image"}]
      Searching for ONE image with 5 query options
      Trying query 1/5: 'Federal Trade Commission building exterior' (category: stock_image)
    🔍 ImageServiceBus: Getting 3 images for query 'Federal Trade Commission building exterior' (category: stock_image)
    🔍 ImageServiceBus: Attempting unsplash (attempt 1/12)
    ⚠️  ImageServiceBus: No results from unsplash
    🔍 ImageServiceBus: Attempting pexels (attempt 2/12)
    ✅ ImageServiceBus: Got 10 quality images from pexels
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from pexels: https://images.pexels.com/photos/109629/pexels-photo-109629.jpeg?auto=compress&cs=tinysrgb&h=650&w=940
      ✅ Generated 1 images
    📝 Processing segment: 95
    📝 Processing segment: 95
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"graphic showing balance of power on board", :category=>"general"}, {:query=>"two opposing symbols on a scale", :category=>"stock_image"}, {:query=>"abstract representation of political balance", :category=>"stock_image"}]
      Debug - final image_queries: [{:query=>"graphic showing balance of power on board", :category=>"general"}, {:query=>"two opposing symbols on a scale", :category=>"stock_image"}, {:query=>"abstract representation of political balance", :category=>"stock_image"}]
      Searching for ONE image with 5 query options
      Trying query 1/5: 'graphic showing balance of power on board' (category: general)
    🔍 ImageServiceBus: Getting 3 images for query 'graphic showing balance of power on board' (category: general)
    🔍 ImageServiceBus: Attempting unsplash (attempt 1/12)
    ⚠️  ImageServiceBus: No results from unsplash
    🔍 ImageServiceBus: Attempting pexels (attempt 2/12)
    ✅ ImageServiceBus: Got 10 quality images from pexels
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from pexels: https://images.pexels.com/photos/6786608/pexels-photo-6786608.jpeg?auto=compress&cs=tinysrgb&h=650&w=940
      ✅ Generated 1 images
    📝 Processing segment: 96
    📝 Processing segment: 96
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"Senator looking thoughtful and concerned", :category=>"famous_person"}, {:query=>"gavel striking sound block", :category=>"stock_image"}, {:query=>"question mark graphic", :category=>"general"}]
      Debug - final image_queries: [{:query=>"Senator looking thoughtful and concerned", :category=>"famous_person"}, {:query=>"gavel striking sound block", :category=>"stock_image"}, {:query=>"question mark graphic", :category=>"general"}]
      Searching for ONE image with 5 query options
      Trying query 1/5: 'Senator looking thoughtful and concerned' (category: famous_person)
    🔍 ImageServiceBus: Getting 3 images for query 'Senator looking thoughtful and concerned' (category: famous_person)
    👤 Famous person detected - prioritizing Wikimedia
    🔍 ImageServiceBus: Attempting wikimedia (attempt 1/12)
    ⏭️  Skipping large file (52MB): Orations_and_speeches_on_various_occasions_%28IA_orationsspeeches03inever%29.pdf
    ⏭️  Skipping large file (61MB): The_Protocols_of_Zion.djvu
    ✅ ImageServiceBus: Got 2 quality images from wikimedia
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from wikimedia: https://upload.wikimedia.org/wikipedia/commons/f/fe/Love_Insurance_-_Earl_Biggers_%281914%29.djvu
      ✅ Generated 1 images
    📝 Processing segment: 97
    📝 Processing segment: 97
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"Senator nodding in agreement", :category=>"famous_person"}, {:query=>"thumbs up gesture", :category=>"stock_image"}, {:query=>"affirmative head nod", :category=>"general"}]
      Debug - final image_queries: [{:query=>"Senator nodding in agreement", :category=>"famous_person"}, {:query=>"thumbs up gesture", :category=>"stock_image"}, {:query=>"affirmative head nod", :category=>"general"}]
      Searching for ONE image with 5 query options
      Trying query 1/5: 'Senator nodding in agreement' (category: famous_person)
    🔍 ImageServiceBus: Getting 3 images for query 'Senator nodding in agreement' (category: famous_person)
    👤 Famous person detected - prioritizing Wikimedia
    🔍 ImageServiceBus: Attempting wikimedia (attempt 1/12)
    ⏭️  Skipping large file (100MB): Stories_from_old_English_poetry_%28IA_storiesfromolden00rich%29.pdf
    ⏭️  Skipping large file (118MB): The_International_-_Volume_7.djvu
    ✅ ImageServiceBus: Got 1 quality images from wikimedia
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from wikimedia: https://upload.wikimedia.org/wikipedia/commons/f/fe/Love_Insurance_-_Earl_Biggers_%281914%29.djvu (duplicate fallback)
      ✅ Generated 1 images
    📝 Processing segment: 98
    📝 Processing segment: 98
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"President Trump pointing finger", :category=>"famous_person"}, {:query=>"National Labor Relations Board building", :category=>"stock_image"}, {:query=>"graphic of labor union symbol", :category=>"general"}]
      Debug - final image_queries: [{:query=>"President Trump pointing finger", :category=>"famous_person"}, {:query=>"National Labor Relations Board building", :category=>"stock_image"}, {:query=>"graphic of labor union symbol", :category=>"general"}]
      Searching for ONE image with 5 query options
      Trying query 1/5: 'President Trump pointing finger' (category: famous_person)
    🔍 ImageServiceBus: Getting 3 images for query 'President Trump pointing finger' (category: famous_person)
    👤 Famous person detected - prioritizing Wikimedia
    🔍 ImageServiceBus: Attempting wikimedia (attempt 1/12)
    ✅ ImageServiceBus: Got 1 quality images from wikimedia
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from wikimedia: https://upload.wikimedia.org/wikipedia/commons/6/65/Baum--The_master_key.djvu (duplicate fallback)
      ✅ Generated 1 images
    📝 Processing segment: 99
    📝 Processing segment: 99
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"President Trump speaking at rally", :category=>"famous_person"}, {:query=>"close-up of President Trump's face", :category=>"famous_person"}, {:query=>"historical footage of political speech", :category=>"general"}]
      Debug - final image_queries: [{:query=>"President Trump speaking at rally", :category=>"famous_person"}, {:query=>"close-up of President Trump's face", :category=>"famous_person"}, {:query=>"historical footage of political speech", :category=>"general"}]
      Searching for ONE image with 5 query options
      Trying query 1/5: 'President Trump speaking at rally' (category: famous_person)
    🔍 ImageServiceBus: Getting 3 images for query 'President Trump speaking at rally' (category: famous_person)
    👤 Famous person detected - prioritizing Wikimedia
    🔍 ImageServiceBus: Attempting wikimedia (attempt 1/12)
    ⏭️  Skipping video file: Trump_Rallies_Supporters_in_Florida_%E2%80%98Without_the_Filter_of_Fake_News%E2%80%99.webm
    ✅ ImageServiceBus: Got 4 quality images from wikimedia
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from wikimedia: https://upload.wikimedia.org/wikipedia/commons/c/c5/Charles_Herbster_campaigning_with_Donald_Trump.jpg
      ✅ Generated 1 images
    📝 Processing segment: 100
    📝 Processing segment: 100
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"man tearing up constitution", :category=>"stock_image"}, {:query=>"hand crushing gavel symbol", :category=>"stock_image"}, {:query=>"shadowy figure wielding power", :category=>"stock_image"}]
      Debug - final image_queries: [{:query=>"man tearing up constitution", :category=>"stock_image"}, {:query=>"hand crushing gavel symbol", :category=>"stock_image"}, {:query=>"shadowy figure wielding power", :category=>"stock_image"}]
      Searching for ONE image with 5 query options
      Trying query 1/5: 'man tearing up constitution' (category: stock_image)
    🔍 ImageServiceBus: Getting 3 images for query 'man tearing up constitution' (category: stock_image)
    🔍 ImageServiceBus: Attempting unsplash (attempt 1/12)
    ⚠️  ImageServiceBus: No results from unsplash
    🔍 ImageServiceBus: Attempting pexels (attempt 2/12)
    ✅ ImageServiceBus: Got 10 quality images from pexels
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from pexels: https://images.pexels.com/photos/5716001/pexels-photo-5716001.jpeg?auto=compress&cs=tinysrgb&h=650&w=940
      ✅ Generated 1 images
    📝 Processing segment: 101
    📝 Processing segment: 101
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"diverse crowd raising fists", :category=>"stock_image"}, {:query=>"people marching with signs", :category=>"stock_image"}, {:query=>"American flag waving defiantly", :category=>"stock_image"}]
      Debug - final image_queries: [{:query=>"diverse crowd raising fists", :category=>"stock_image"}, {:query=>"people marching with signs", :category=>"stock_image"}, {:query=>"American flag waving defiantly", :category=>"stock_image"}]
      Searching for ONE image with 5 query options
      Trying query 1/5: 'diverse crowd raising fists' (category: stock_image)
    🔍 ImageServiceBus: Getting 3 images for query 'diverse crowd raising fists' (category: stock_image)
    🔍 ImageServiceBus: Attempting unsplash (attempt 1/12)
    ⚠️  ImageServiceBus: No results from unsplash
    🔍 ImageServiceBus: Attempting pexels (attempt 2/12)
    ✅ ImageServiceBus: Got 10 quality images from pexels
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from pexels: https://images.pexels.com/photos/10010406/pexels-photo-10010406.jpeg?auto=compress&cs=tinysrgb&h=650&w=940
      ✅ Generated 1 images
    📝 Processing segment: 102
    📝 Processing segment: 102
      Debug - segment keys: [:id, :start_time, :end_time, :text, :confidence, :no_speech_prob, :compression_ratio, :words, :image_queries, :backup_queries, :has_images]
      Debug - image_queries: [{:query=>"Senator Bernie Sanders speaking", :category=>"famous_person"}, {:query=>"Bernie Sanders on CNN set", :category=>"famous_person"}, {:query=>"Bernie Sanders during campaign tour", :category=>"famous_person"}]
      Debug - final image_queries: [{:query=>"Senator Bernie Sanders speaking", :category=>"famous_person"}, {:query=>"Bernie Sanders on CNN set", :category=>"famous_person"}, {:query=>"Bernie Sanders during campaign tour", :category=>"famous_person"}]
      Searching for ONE image with 5 query options
      Trying query 1/5: 'Senator Bernie Sanders speaking' (category: famous_person)
    🔍 ImageServiceBus: Getting 3 images for query 'Senator Bernie Sanders speaking' (category: famous_person)
    👤 Famous person detected - prioritizing Wikimedia
    🔍 ImageServiceBus: Attempting wikimedia (attempt 1/12)
    ✅ ImageServiceBus: Got 10 quality images from wikimedia
    🔍 ImageServiceBus: Returning 1 results
      ✅ Found quality image from wikimedia: https://upload.wikimedia.org/wikipedia/commons/a/a7/Bernie_Sanders_%2849624954238%29.jpg
      ✅ Generated 1 images
  ✅ Image generation complete: 103 images found

📋 Step 4: Creating project manifest with all data...
  📋 Creating project manifest...
📤 Uploading project manifest: b3
✅ Project manifest uploaded: s3://burns-videos/projects/b3/manifest.json
  ✅ Manifest created successfully

🎥 Step 5: Generating final Ken Burns video...
  🎥 Generating final video using AWS Lambda for parallel processing...
📥 Getting project manifest: b3
✅ Project manifest retrieved: s3://burns-videos/projects/b3/manifest.json
    📝 Processing 103 segments concurrently...
🚀 Generating video segments concurrently for project: b3
  📝 Segments: 103
  ⚡ Concurrency: 10 (conservative to prevent Lambda /tmp issues)
    Debug - Segment 0: id=0, start_time=0.0, end_time=3.0
    Debug - Segment 1: id=1, start_time=3.0, end_time=12.25
    Debug - Segment 2: id=2, start_time=12.25, end_time=16.25
    Debug - Segment 3: id=3, start_time=16.25, end_time=23.25
    Debug - Segment 4: id=4, start_time=23.25, end_time=26.5
    Debug - Segment 5: id=5, start_time=26.5, end_time=29.5
    Debug - Segment 6: id=6, start_time=29.5, end_time=33.5
    Debug - Segment 7: id=7, start_time=33.5, end_time=37.0
    Debug - Segment 8: id=8, start_time=37.0, end_time=40.0
    Debug - Segment 9: id=9, start_time=40.0, end_time=43.5
    Debug - Segment 10: id=10, start_time=43.5, end_time=46.5
    Debug - Segment 11: id=11, start_time=46.5, end_time=49.5
    Debug - Segment 12: id=12, start_time=49.5, end_time=53.75
    Debug - Segment 13: id=13, start_time=53.75, end_time=56.75
    Debug - Segment 14: id=14, start_time=56.75, end_time=65.0
    Debug - Segment 15: id=15, start_time=65.0, end_time=68.0
    Debug - Segment 16: id=16, start_time=68.0, end_time=72.0
    Debug - Segment 17: id=17, start_time=72.0, end_time=76.5
    Debug - Segment 18: id=18, start_time=76.5, end_time=79.5
    Debug - Segment 19: id=19, start_time=79.5, end_time=82.5
    Debug - Segment 20: id=20, start_time=82.5, end_time=85.5
    Debug - Segment 21: id=21, start_time=85.5, end_time=93.0
    Debug - Segment 22: id=22, start_time=93.0, end_time=96.0
    Debug - Segment 23: id=23, start_time=96.0, end_time=108.75
    Debug - Segment 24: id=24, start_time=108.75, end_time=111.75
    Debug - Segment 25: id=25, start_time=111.75, end_time=114.75
    Debug - Segment 26: id=26, start_time=114.75, end_time=125.75
    Debug - Segment 27: id=27, start_time=125.75, end_time=131.0
    Debug - Segment 28: id=28, start_time=131.0, end_time=134.0
    Debug - Segment 29: id=29, start_time=134.0, end_time=137.0
    Debug - Segment 30: id=30, start_time=137.0, end_time=140.0
    Debug - Segment 31: id=31, start_time=140.0, end_time=143.0
    Debug - Segment 32: id=32, start_time=143.0, end_time=146.0
    Debug - Segment 33: id=33, start_time=146.0, end_time=149.0
    Debug - Segment 34: id=34, start_time=149.0, end_time=152.0
    Debug - Segment 35: id=35, start_time=152.0, end_time=155.0
    Debug - Segment 36: id=36, start_time=155.0, end_time=158.0
    Debug - Segment 37: id=37, start_time=158.0, end_time=161.0
    Debug - Segment 38: id=38, start_time=161.0, end_time=164.0
    Debug - Segment 39: id=39, start_time=164.0, end_time=167.0
    Debug - Segment 40: id=40, start_time=167.0, end_time=170.5
    Debug - Segment 41: id=41, start_time=170.5, end_time=181.0
    Debug - Segment 42: id=42, start_time=181.0, end_time=188.0
    Debug - Segment 43: id=43, start_time=188.0, end_time=191.0
    Debug - Segment 44: id=44, start_time=191.0, end_time=198.0
    Debug - Segment 45: id=45, start_time=198.0, end_time=209.75
    Debug - Segment 46: id=46, start_time=209.75, end_time=216.5
    Debug - Segment 47: id=47, start_time=216.5, end_time=219.5
    Debug - Segment 48: id=48, start_time=219.5, end_time=222.5
    Debug - Segment 49: id=49, start_time=222.5, end_time=226.5
    Debug - Segment 50: id=50, start_time=226.5, end_time=232.75
    Debug - Segment 51: id=51, start_time=232.75, end_time=235.75
    Debug - Segment 52: id=52, start_time=235.75, end_time=255.25
    Debug - Segment 53: id=53, start_time=255.25, end_time=258.25
    Debug - Segment 54: id=54, start_time=258.25, end_time=261.25
    Debug - Segment 55: id=55, start_time=261.25, end_time=264.25
    Debug - Segment 56: id=56, start_time=264.25, end_time=288.25
    Debug - Segment 57: id=57, start_time=288.25, end_time=294.0
    Debug - Segment 58: id=58, start_time=294.0, end_time=297.0
    Debug - Segment 59: id=59, start_time=297.0, end_time=300.0
    Debug - Segment 60: id=60, start_time=300.0, end_time=303.0
    Debug - Segment 61: id=61, start_time=303.0, end_time=306.75
    Debug - Segment 62: id=62, start_time=306.75, end_time=314.25
    Debug - Segment 63: id=63, start_time=314.25, end_time=333.75
    Debug - Segment 64: id=64, start_time=333.75, end_time=336.75
    Debug - Segment 65: id=65, start_time=336.75, end_time=340.0
    Debug - Segment 66: id=66, start_time=340.0, end_time=345.5
    Debug - Segment 67: id=67, start_time=345.5, end_time=348.5
    Debug - Segment 68: id=68, start_time=348.5, end_time=352.0
    Debug - Segment 69: id=69, start_time=352.0, end_time=355.0
    Debug - Segment 70: id=70, start_time=355.0, end_time=358.0
    Debug - Segment 71: id=71, start_time=358.0, end_time=361.0
    Debug - Segment 72: id=72, start_time=361.0, end_time=364.0
    Debug - Segment 73: id=73, start_time=364.0, end_time=367.0
    Debug - Segment 74: id=74, start_time=367.0, end_time=377.5
    Debug - Segment 75: id=75, start_time=377.5, end_time=384.25
    Debug - Segment 76: id=76, start_time=384.25, end_time=387.25
    Debug - Segment 77: id=77, start_time=387.25, end_time=402.75
    Debug - Segment 78: id=78, start_time=402.75, end_time=407.0
    Debug - Segment 79: id=79, start_time=407.0, end_time=410.0
    Debug - Segment 80: id=80, start_time=410.0, end_time=413.0
    Debug - Segment 81: id=81, start_time=413.0, end_time=416.0
    Debug - Segment 82: id=82, start_time=416.0, end_time=421.75
    Debug - Segment 83: id=83, start_time=421.75, end_time=424.75
    Debug - Segment 84: id=84, start_time=424.75, end_time=427.75
    Debug - Segment 85: id=85, start_time=427.75, end_time=430.75
    Debug - Segment 86: id=86, start_time=430.75, end_time=434.0
    Debug - Segment 87: id=87, start_time=434.0, end_time=441.25
    Debug - Segment 88: id=88, start_time=441.25, end_time=451.5
    Debug - Segment 89: id=89, start_time=451.5, end_time=454.5
    Debug - Segment 90: id=90, start_time=454.5, end_time=460.25
    Debug - Segment 91: id=91, start_time=460.25, end_time=463.25
    Debug - Segment 92: id=92, start_time=463.25, end_time=466.25
    Debug - Segment 93: id=93, start_time=466.25, end_time=473.25
    Debug - Segment 94: id=94, start_time=473.25, end_time=476.25
    Debug - Segment 95: id=95, start_time=476.25, end_time=479.25
    Debug - Segment 96: id=96, start_time=479.25, end_time=482.25
    Debug - Segment 97: id=97, start_time=482.25, end_time=485.25
    Debug - Segment 98: id=98, start_time=485.25, end_time=489.25
    Debug - Segment 99: id=99, start_time=489.25, end_time=492.25
    Debug - Segment 100: id=100, start_time=492.25, end_time=499.5
    Debug - Segment 101: id=101, start_time=499.5, end_time=502.5
    Debug - Segment 102: id=102, start_time=502.5, end_time=508.0
  📹 Processing segment 0 (1/103) - Duration: 3.0s
    Debug - Payload: project_id=b3, segment_id=0, segment_index=0, images=Array, duration=3.0, start_time=0.0, end_time=3.0
  📹 Processing segment 1 (2/103) - Duration: 9.25s
    Debug - Payload: project_id=b3, segment_id=1, segment_index=1, images=Array, duration=9.25, start_time=3.0, end_time=12.25
  📹 Processing segment 2 (3/103) - Duration: 4.0s
    Debug - Payload: project_id=b3, segment_id=2, segment_index=2, images=Array, duration=4.0, start_time=12.25, end_time=16.25
  📹 Processing segment 3 (4/103) - Duration: 7.0s
    Debug - Payload: project_id=b3, segment_id=3, segment_index=3, images=Array, duration=7.0, start_time=16.25, end_time=23.25
  📹 Processing segment 4 (5/103) - Duration: 3.25s
  📹 Processing segment 5 (6/103) - Duration: 3.0s
    Debug - Payload: project_id=b3, segment_id=5, segment_index=5, images=Array, duration=3.0, start_time=26.5, end_time=29.5
  📹 Processing segment 6 (7/103) - Duration: 4.0s
    Debug - Payload: project_id=b3, segment_id=6, segment_index=6, images=Array, duration=4.0, start_time=29.5, end_time=33.5
  📹 Processing segment 7 (8/103) - Duration: 3.5s
    Debug - Payload: project_id=b3, segment_id=7, segment_index=7, images=Array, duration=3.5, start_time=33.5, end_time=37.0
  📹 Processing segment 8 (9/103) - Duration: 3.0s
  📹 Processing segment 9 (10/103) - Duration: 3.5s
    Debug - Payload: project_id=b3, segment_id=9, segment_index=9, images=Array, duration=3.5, start_time=40.0, end_time=43.5
  ⏳ Waiting for 103 segments to complete...
    Debug - Payload: project_id=b3, segment_id=4, segment_index=4, images=Array, duration=3.25, start_time=23.25, end_time=26.5
    Debug - Payload: project_id=b3, segment_id=8, segment_index=8, images=Array, duration=3.0, start_time=37.0, end_time=40.0
    ⚡ Invoking Lambda for segment 0 (1 images)...
  📤 Invoking Lambda function: ken-burns-video-generator-go
    Debug - Payload keys: project_id, segment_id, segment_index, images, duration, start_time, end_time, options
    Debug - Payload values: String, String, Integer, Array, Float, Float, Float, Hash
    ⚡ Invoking Lambda for segment 1 (1 images)...
  📤 Invoking Lambda function: ken-burns-video-generator-go
    Debug - Payload keys: project_id, segment_id, segment_index, images, duration, start_time, end_time, options
    Debug - Payload values: String, String, Integer, Array, Float, Float, Float, Hash
    ⚡ Invoking Lambda for segment 5 (1 images)...
  📤 Invoking Lambda function: ken-burns-video-generator-go
    Debug - Payload keys: project_id, segment_id, segment_index, images, duration, start_time, end_time, options
    Debug - Payload values: String, String, Integer, Array, Float, Float, Float, Hash
    ⚡ Invoking Lambda for segment 9 (1 images)...
  📤 Invoking Lambda function: ken-burns-video-generator-go
    Debug - Payload keys: project_id, segment_id, segment_index, images, duration, start_time, end_time, options
    Debug - Payload values: String, String, Integer, Array, Float, Float, Float, Hash
    ⚡ Invoking Lambda for segment 6 (1 images)...
    ⚡ Invoking Lambda for segment 8 (1 images)...
  📤 Invoking Lambda function: ken-burns-video-generator-go
    ⚡ Invoking Lambda for segment 2 (1 images)...
    Debug - Payload keys: project_id, segment_id, segment_index, images, duration, start_time, end_time, options
    Debug - Payload values: String, String, Integer, Array, Float, Float, Float, Hash
    ⚡ Invoking Lambda for segment 4 (1 images)...
  📤 Invoking Lambda function: ken-burns-video-generator-go
    Debug - Payload keys: project_id, segment_id, segment_index, images, duration, start_time, end_time, options
    Debug - Payload values: String, String, Integer, Array, Float, Float, Float, Hash
  📤 Invoking Lambda function: ken-burns-video-generator-go
    Debug - Payload keys: project_id, segment_id, segment_index, images, duration, start_time, end_time, options
    ⚡ Invoking Lambda for segment 3 (1 images)...
  📤 Invoking Lambda function: ken-burns-video-generator-go
    Debug - Payload keys: project_id, segment_id, segment_index, images, duration, start_time, end_time, options
    Debug - Payload values: String, String, Integer, Array, Float, Float, Float, Hash
  📤 Invoking Lambda function: ken-burns-video-generator-go
    Debug - Payload keys: project_id, segment_id, segment_index, images, duration, start_time, end_time, options
    Debug - Payload values: String, String, Integer, Array, Float, Float, Float, Hash
    Debug - Payload values: String, String, Integer, Array, Float, Float, Float, Hash
    ⚡ Invoking Lambda for segment 7 (1 images)...
  📤 Invoking Lambda function: ken-burns-video-generator-go
    Debug - Payload keys: project_id, segment_id, segment_index, images, duration, start_time, end_time, options
    Debug - Payload values: String, String, Integer, Array, Float, Float, Float, Hash
    Debug - Response status: 200
    Debug - Response body keys: statusCode, body
    ✅ Segment 5 completed in 17.94s (Lambda: 17.54s)
    📁 Segment file: segments/b3/5_segment.mp4
  📹 Processing segment 10 (11/103) - Duration: 3.0s
    Debug - Payload: project_id=b3, segment_id=10, segment_index=10, images=Array, duration=3.0, start_time=43.5, end_time=46.5
    Debug - Response status: 200
    Debug - Response body keys: statusCode, body
    ✅ Segment 8 completed in 18.23s (Lambda: 17.83s)
    📁 Segment file: segments/b3/8_segment.mp4
  📹 Processing segment 11 (12/103) - Duration: 3.0s
    Debug - Payload: project_id=b3, segment_id=11, segment_index=11, images=Array, duration=3.0, start_time=46.5, end_time=49.5
    ⚡ Invoking Lambda for segment 10 (1 images)...
  📤 Invoking Lambda function: ken-burns-video-generator-go
    Debug - Payload keys: project_id, segment_id, segment_index, images, duration, start_time, end_time, options
    Debug - Payload values: String, String, Integer, Array, Float, Float, Float, Hash
    ⚡ Invoking Lambda for segment 11 (1 images)...
  📤 Invoking Lambda function: ken-burns-video-generator-go
    Debug - Payload keys: project_id, segment_id, segment_index, images, duration, start_time, end_time, options
    Debug - Payload values: String, String, Integer, Array, Float, Float, Float, Hash
    Debug - Response status: 200
    Debug - Response body keys: statusCode, body
    ✅ Segment 6 completed in 19.86s (Lambda: 19.45s)
    📁 Segment file: segments/b3/6_segment.mp4
  📹 Processing segment 12 (13/103) - Duration: 4.25s
    Debug - Payload: project_id=b3, segment_id=12, segment_index=12, images=Array, duration=4.25, start_time=49.5, end_time=53.75
    ⚡ Invoking Lambda for segment 12 (1 images)...
  📤 Invoking Lambda function: ken-burns-video-generator-go
    Debug - Payload keys: project_id, segment_id, segment_index, images, duration, start_time, end_time, options
    Debug - Payload values: String, String, Integer, Array, Float, Float, Float, Hash
    Debug - Response status: 200
    Debug - Response body keys: statusCode, body
    ✅ Segment 4 completed in 20.02s (Lambda: 19.61s)
    📁 Segment file: segments/b3/4_segment.mp4
  📹 Processing segment 13 (14/103) - Duration: 3.0s
    Debug - Payload: project_id=b3, segment_id=13, segment_index=13, images=Array, duration=3.0, start_time=53.75, end_time=56.75
    ⚡ Invoking Lambda for segment 13 (1 images)...
  📤 Invoking Lambda function: ken-burns-video-generator-go
    Debug - Payload keys: project_id, segment_id, segment_index, images, duration, start_time, end_time, options
    Debug - Payload values: String, String, Integer, Array, Float, Float, Float, Hash
    Debug - Response status: 200
    Debug - Response body keys: statusCode, body
    ✅ Segment 9 completed in 21.12s (Lambda: 20.72s)
    📁 Segment file: segments/b3/9_segment.mp4
  📹 Processing segment 14 (15/103) - Duration: 8.25s
    Debug - Payload: project_id=b3, segment_id=14, segment_index=14, images=Array, duration=8.25, start_time=56.75, end_time=65.0
    ⚡ Invoking Lambda for segment 14 (1 images)...
  📤 Invoking Lambda function: ken-burns-video-generator-go
    Debug - Payload keys: project_id, segment_id, segment_index, images, duration, start_time, end_time, options
    Debug - Payload values: String, String, Integer, Array, Float, Float, Float, Hash
    Debug - Response status: 200
    Debug - Response body keys: statusCode, body
    ✅ Segment 0 completed in 23.66s (Lambda: 23.55s)
    📁 Segment file: segments/b3/0_segment.mp4
  📹 Processing segment 15 (16/103) - Duration: 3.0s
    Debug - Payload: project_id=b3, segment_id=15, segment_index=15, images=Array, duration=3.0, start_time=65.0, end_time=68.0
    ⚡ Invoking Lambda for segment 15 (1 images)...
  📤 Invoking Lambda function: ken-burns-video-generator-go
    Debug - Payload keys: project_id, segment_id, segment_index, images, duration, start_time, end_time, options
    Debug - Payload values: String, String, Integer, Array, Float, Float, Float, Hash
    Debug - Response status: 200
    Debug - Response body keys: statusCode, body
    ✅ Segment 13 completed in 5.47s (Lambda: 5.31s)
    📁 Segment file: segments/b3/13_segment.mp4
  📹 Processing segment 16 (17/103) - Duration: 4.0s
    Debug - Payload: project_id=b3, segment_id=16, segment_index=16, images=Array, duration=4.0, start_time=68.0, end_time=72.0
    Debug - Response status: 200
    Debug - Response body keys: statusCode, body
    ✅ Segment 2 completed in 25.57s (Lambda: 25.16s)
    📁 Segment file: segments/b3/2_segment.mp4
  📹 Processing segment 17 (18/103) - Duration: 4.5s
    Debug - Payload: project_id=b3, segment_id=17, segment_index=17, images=Array, duration=4.5, start_time=72.0, end_time=76.5
    ⚡ Invoking Lambda for segment 16 (1 images)...
  📤 Invoking Lambda function: ken-burns-video-generator-go
    Debug - Payload keys: project_id, segment_id, segment_index, images, duration, start_time, end_time, options
    Debug - Payload values: String, String, Integer, Array, Float, Float, Float, Hash
    ⚡ Invoking Lambda for segment 17 (1 images)...
  📤 Invoking Lambda function: ken-burns-video-generator-go
    Debug - Payload keys: project_id, segment_id, segment_index, images, duration, start_time, end_time, options
    Debug - Payload values: String, String, Integer, Array, Float, Float, Float, Hash
    Debug - Response status: 200
    Debug - Response body keys: statusCode, body
    ✅ Segment 10 completed in 15.74s (Lambda: 15.39s)
    📁 Segment file: segments/b3/10_segment.mp4
  📹 Processing segment 18 (19/103) - Duration: 3.0s
    Debug - Payload: project_id=b3, segment_id=18, segment_index=18, images=Array, duration=3.0, start_time=76.5, end_time=79.5
    ⚡ Invoking Lambda for segment 18 (1 images)...
  📤 Invoking Lambda function: ken-burns-video-generator-go
    Debug - Payload keys: project_id, segment_id, segment_index, images, duration, start_time, end_time, options
    Debug - Payload values: String, String, Integer, Array, Float, Float, Float, Hash
    Debug - Response status: 200
    Debug - Response body keys: statusCode, body
    ✅ Segment 11 completed in 16.5s (Lambda: 16.15s)
    📁 Segment file: segments/b3/11_segment.mp4
  📹 Processing segment 19 (20/103) - Duration: 3.0s
    Debug - Payload: project_id=b3, segment_id=19, segment_index=19, images=Array, duration=3.0, start_time=79.5, end_time=82.5
    ⚡ Invoking Lambda for segment 19 (1 images)...
  📤 Invoking Lambda function: ken-burns-video-generator-go
    Debug - Payload keys: project_id, segment_id, segment_index, images, duration, start_time, end_time, options
    Debug - Payload values: String, String, Integer, Array, Float, Float, Float, Hash
    Debug - Response status: 200
    Debug - Response body keys: statusCode, body
    ✅ Segment 3 completed in 39.27s (Lambda: 38.86s)
    📁 Segment file: segments/b3/3_segment.mp4
  📹 Processing segment 20 (21/103) - Duration: 3.0s
    Debug - Payload: project_id=b3, segment_id=20, segment_index=20, images=Array, duration=3.0, start_time=82.5, end_time=85.5
    ⚡ Invoking Lambda for segment 20 (1 images)...
  📤 Invoking Lambda function: ken-burns-video-generator-go
    Debug - Payload keys: project_id, segment_id, segment_index, images, duration, start_time, end_time, options
    Debug - Payload values: String, String, Integer, Array, Float, Float, Float, Hash
    Debug - Response status: 200
    Debug - Response body keys: statusCode, body
    ✅ Segment 15 completed in 16.48s (Lambda: 16.38s)
    📁 Segment file: segments/b3/15_segment.mp4
  📹 Processing segment 21 (22/103) - Duration: 7.5s
    Debug - Payload: project_id=b3, segment_id=21, segment_index=21, images=Array, duration=7.5, start_time=85.5, end_time=93.0
    ⚡ Invoking Lambda for segment 21 (1 images)...
  📤 Invoking Lambda function: ken-burns-video-generator-go
    Debug - Payload keys: project_id, segment_id, segment_index, images, duration, start_time, end_time, options
    Debug - Payload values: String, String, Integer, Array, Float, Float, Float, Hash
    Debug - Response status: 200
    Debug - Response body keys: statusCode, body
    ✅ Segment 12 completed in 21.21s (Lambda: 21.11s)
    📁 Segment file: segments/b3/12_segment.mp4
  📹 Processing segment 22 (23/103) - Duration: 3.0s
    Debug - Payload: project_id=b3, segment_id=22, segment_index=22, images=Array, duration=3.0, start_time=93.0, end_time=96.0
    ⚡ Invoking Lambda for segment 22 (1 images)...
  📤 Invoking Lambda function: ken-burns-video-generator-go
    Debug - Payload keys: project_id, segment_id, segment_index, images, duration, start_time, end_time, options
    Debug - Payload values: String, String, Integer, Array, Float, Float, Float, Hash
    Debug - Response status: 200
    Debug - Response body keys: statusCode, body
    ✅ Segment 1 completed in 44.74s (Lambda: 44.34s)
    📁 Segment file: segments/b3/1_segment.mp4
  📹 Processing segment 23 (24/103) - Duration: 12.75s
    Debug - Payload: project_id=b3, segment_id=23, segment_index=23, images=Array, duration=12.75, start_time=96.0, end_time=108.75
    ⚡ Invoking Lambda for segment 23 (1 images)...
  📤 Invoking Lambda function: ken-burns-video-generator-go
    Debug - Payload keys: project_id, segment_id, segment_index, images, duration, start_time, end_time, options
    Debug - Payload values: String, String, Integer, Array, Float, Float, Float, Hash
    Debug - Response status: 200
    Debug - Response body keys: statusCode, body
    ✅ Segment 16 completed in 20.69s (Lambda: 20.59s)
    📁 Segment file: segments/b3/16_segment.mp4
  📹 Processing segment 24 (25/103) - Duration: 3.0s
    Debug - Payload: project_id=b3, segment_id=24, segment_index=24, images=Array, duration=3.0, start_time=108.75, end_time=111.75
    ⚡ Invoking Lambda for segment 24 (1 images)...
  📤 Invoking Lambda function: ken-burns-video-generator-go
    Debug - Payload keys: project_id, segment_id, segment_index, images, duration, start_time, end_time, options
    Debug - Payload values: String, String, Integer, Array, Float, Float, Float, Hash
    Debug - Response status: 200
    Debug - Response body keys: statusCode, body
    ✅ Segment 19 completed in 15.9s (Lambda: 15.79s)
    📁 Segment file: segments/b3/19_segment.mp4
  📹 Processing segment 25 (26/103) - Duration: 3.0s
    Debug - Payload: project_id=b3, segment_id=25, segment_index=25, images=Array, duration=3.0, start_time=111.75, end_time=114.75
    ⚡ Invoking Lambda for segment 25 (1 images)...
  📤 Invoking Lambda function: ken-burns-video-generator-go
    Debug - Payload keys: project_id, segment_id, segment_index, images, duration, start_time, end_time, options
    Debug - Payload values: String, String, Integer, Array, Float, Float, Float, Hash
    Debug - Response status: 200
    Debug - Response body keys: statusCode, body
    ✅ Segment 18 completed in 17.53s (Lambda: 17.15s)
    📁 Segment file: segments/b3/18_segment.mp4
  📹 Processing segment 26 (27/103) - Duration: 11.0s
    Debug - Payload: project_id=b3, segment_id=26, segment_index=26, images=Array, duration=11.0, start_time=114.75, end_time=125.75
    ⚡ Invoking Lambda for segment 26 (1 images)...
  📤 Invoking Lambda function: ken-burns-video-generator-go
    Debug - Payload keys: project_id, segment_id, segment_index, images, duration, start_time, end_time, options
    Debug - Payload values: String, String, Integer, Array, Float, Float, Float, Hash
    Debug - Response status: 200
    Debug - Response body keys: statusCode, body
    ✅ Segment 17 completed in 26.03s (Lambda: 25.92s)
    📁 Segment file: segments/b3/17_segment.mp4
  📹 Processing segment 27 (28/103) - Duration: 5.25s
    Debug - Payload: project_id=b3, segment_id=27, segment_index=27, images=Array, duration=5.25, start_time=125.75, end_time=131.0
    ⚡ Invoking Lambda for segment 27 (1 images)...
  📤 Invoking Lambda function: ken-burns-video-generator-go
    Debug - Payload keys: project_id, segment_id, segment_index, images, duration, start_time, end_time, options
    Debug - Payload values: String, String, Integer, Array, Float, Float, Float, Hash
    Debug - Response status: 200
    Debug - Response body keys: statusCode, body
    ✅ Segment 20 completed in 16.53s (Lambda: 16.44s)
    📁 Segment file: segments/b3/20_segment.mp4
  📹 Processing segment 28 (29/103) - Duration: 3.0s
    Debug - Payload: project_id=b3, segment_id=28, segment_index=28, images=Array, duration=3.0, start_time=131.0, end_time=134.0
    ⚡ Invoking Lambda for segment 28 (1 images)...
  📤 Invoking Lambda function: ken-burns-video-generator-go
    Debug - Payload keys: project_id, segment_id, segment_index, images, duration, start_time, end_time, options
    Debug - Payload values: String, String, Integer, Array, Float, Float, Float, Hash
    Debug - Response status: 200
    Debug - Response body keys: statusCode, body
    ✅ Segment 22 completed in 16.78s (Lambda: 16.68s)
    📁 Segment file: segments/b3/22_segment.mp4
  📹 Processing segment 29 (30/103) - Duration: 3.0s
    Debug - Payload: project_id=b3, segment_id=29, segment_index=29, images=Array, duration=3.0, start_time=134.0, end_time=137.0
    ⚡ Invoking Lambda for segment 29 (1 images)...
  📤 Invoking Lambda function: ken-burns-video-generator-go
    Debug - Payload keys: project_id, segment_id, segment_index, images, duration, start_time, end_time, options
    Debug - Payload values: String, String, Integer, Array, Float, Float, Float, Hash
    Debug - Response status: 200
    Debug - Response body keys: statusCode, body
    ✅ Segment 25 completed in 18.41s (Lambda: 18.29s)
    📁 Segment file: segments/b3/25_segment.mp4
  📹 Processing segment 30 (31/103) - Duration: 3.0s
    Debug - Payload: project_id=b3, segment_id=30, segment_index=30, images=Array, duration=3.0, start_time=137.0, end_time=140.0
    Debug - Response status: 200
    Debug - Response body keys: statusCode, body
    ✅ Segment 14 completed in 48.12s (Lambda: 47.96s)
    📁 Segment file: segments/b3/14_segment.mp4
  📹 Processing segment 31 (32/103) - Duration: 3.0s
    Debug - Payload: project_id=b3, segment_id=31, segment_index=31, images=Array, duration=3.0, start_time=140.0, end_time=143.0
    ⚡ Invoking Lambda for segment 30 (1 images)...
  📤 Invoking Lambda function: ken-burns-video-generator-go
    Debug - Payload keys: project_id, segment_id, segment_index, images, duration, start_time, end_time, options
    Debug - Payload values: String, String, Integer, Array, Float, Float, Float, Hash
    ⚡ Invoking Lambda for segment 31 (1 images)...
  📤 Invoking Lambda function: ken-burns-video-generator-go
    Debug - Payload keys: project_id, segment_id, segment_index, images, duration, start_time, end_time, options
    Debug - Payload values: String, String, Integer, Array, Float, Float, Float, Hash
    Debug - Response status: 200
    Debug - Response body keys: statusCode, body
    ✅ Segment 28 completed in 13.79s (Lambda: 13.7s)
    📁 Segment file: segments/b3/28_segment.mp4
  📹 Processing segment 32 (33/103) - Duration: 3.0s
    Debug - Payload: project_id=b3, segment_id=32, segment_index=32, images=Array, duration=3.0, start_time=143.0, end_time=146.0
    ⚡ Invoking Lambda for segment 32 (1 images)...
  📤 Invoking Lambda function: ken-burns-video-generator-go
    Debug - Payload keys: project_id, segment_id, segment_index, images, duration, start_time, end_time, options
    Debug - Payload values: String, String, Integer, Array, Float, Float, Float, Hash
    Debug - Response status: 200
    Debug - Response body keys: statusCode, body
    ✅ Segment 29 completed in 17.61s (Lambda: 17.51s)
    📁 Segment file: segments/b3/29_segment.mp4
  📹 Processing segment 33 (34/103) - Duration: 3.0s
    Debug - Payload: project_id=b3, segment_id=33, segment_index=33, images=Array, duration=3.0, start_time=146.0, end_time=149.0
    ⚡ Invoking Lambda for segment 33 (1 images)...
  📤 Invoking Lambda function: ken-burns-video-generator-go
    Debug - Payload keys: project_id, segment_id, segment_index, images, duration, start_time, end_time, options
    Debug - Payload values: String, String, Integer, Array, Float, Float, Float, Hash
    Debug - Response status: 200
    Debug - Response body keys: statusCode, body
    ✅ Segment 21 completed in 36.12s (Lambda: 36.01s)
    📁 Segment file: segments/b3/21_segment.mp4
  📹 Processing segment 34 (35/103) - Duration: 3.0s
    Debug - Payload: project_id=b3, segment_id=34, segment_index=34, images=Array, duration=3.0, start_time=149.0, end_time=152.0
    ⚡ Invoking Lambda for segment 34 (1 images)...
  📤 Invoking Lambda function: ken-burns-video-generator-go
    Debug - Payload keys: project_id, segment_id, segment_index, images, duration, start_time, end_time, options
    Debug - Payload values: String, String, Integer, Array, Float, Float, Float, Hash
    Debug - Response status: 200
    Debug - Response body keys: statusCode, body
    ✅ Segment 31 completed in 14.59s (Lambda: 14.29s)
    📁 Segment file: segments/b3/31_segment.mp4
  📹 Processing segment 35 (36/103) - Duration: 3.0s
    Debug - Payload: project_id=b3, segment_id=35, segment_index=35, images=Array, duration=3.0, start_time=152.0, end_time=155.0
    ⚡ Invoking Lambda for segment 35 (1 images)...
  📤 Invoking Lambda function: ken-burns-video-generator-go
    Debug - Payload keys: project_id, segment_id, segment_index, images, duration, start_time, end_time, options
    Debug - Payload values: String, String, Integer, Array, Float, Float, Float, Hash
    Debug - Response status: 200
    Debug - Response body keys: statusCode, body
    ✅ Segment 32 completed in 17.13s (Lambda: 17.04s)
    📁 Segment file: segments/b3/32_segment.mp4
  📹 Processing segment 36 (37/103) - Duration: 3.0s
    Debug - Payload: project_id=b3, segment_id=36, segment_index=36, images=Array, duration=3.0, start_time=155.0, end_time=158.0
    Debug - Response status: 200
    Debug - Response body keys: statusCode, body
    ✅ Segment 30 completed in 17.78s (Lambda: 17.45s)
    📁 Segment file: segments/b3/30_segment.mp4
  📹 Processing segment 37 (38/103) - Duration: 3.0s
    Debug - Payload: project_id=b3, segment_id=37, segment_index=37, images=Array, duration=3.0, start_time=158.0, end_time=161.0
    ⚡ Invoking Lambda for segment 36 (1 images)...
  📤 Invoking Lambda function: ken-burns-video-generator-go
    Debug - Payload keys: project_id, segment_id, segment_index, images, duration, start_time, end_time, options
    Debug - Payload values: String, String, Integer, Array, Float, Float, Float, Hash
    ⚡ Invoking Lambda for segment 37 (1 images)...
  📤 Invoking Lambda function: ken-burns-video-generator-go
    Debug - Payload keys: project_id, segment_id, segment_index, images, duration, start_time, end_time, options
    Debug - Payload values: String, String, Integer, Array, Float, Float, Float, Hash
    Debug - Response status: 200
    Debug - Response body keys: statusCode, body
    ✅ Segment 33 completed in 16.39s (Lambda: 16.08s)
    📁 Segment file: segments/b3/33_segment.mp4
  📹 Processing segment 38 (39/103) - Duration: 3.0s
    Debug - Payload: project_id=b3, segment_id=38, segment_index=38, images=Array, duration=3.0, start_time=161.0, end_time=164.0
    ⚡ Invoking Lambda for segment 38 (1 images)...
  📤 Invoking Lambda function: ken-burns-video-generator-go
    Debug - Payload keys: project_id, segment_id, segment_index, images, duration, start_time, end_time, options
    Debug - Payload values: String, String, Integer, Array, Float, Float, Float, Hash
    Debug - Response status: 200
    Debug - Response body keys: statusCode, body
    ✅ Segment 34 completed in 16.63s (Lambda: 16.52s)
    📁 Segment file: segments/b3/34_segment.mp4
  📹 Processing segment 39 (40/103) - Duration: 3.0s
    Debug - Payload: project_id=b3, segment_id=39, segment_index=39, images=Array, duration=3.0, start_time=164.0, end_time=167.0
    ⚡ Invoking Lambda for segment 39 (1 images)...
  📤 Invoking Lambda function: ken-burns-video-generator-go
    Debug - Payload keys: project_id, segment_id, segment_index, images, duration, start_time, end_time, options
    Debug - Payload values: String, String, Integer, Array, Float, Float, Float, Hash
    Debug - Response status: 200
    Debug - Response body keys: statusCode, body
    ✅ Segment 35 completed in 16.86s (Lambda: 16.51s)
    📁 Segment file: segments/b3/35_segment.mp4
  📹 Processing segment 40 (41/103) - Duration: 3.5s
    Debug - Payload: project_id=b3, segment_id=40, segment_index=40, images=Array, duration=3.5, start_time=167.0, end_time=170.5
    ⚡ Invoking Lambda for segment 40 (1 images)...
  📤 Invoking Lambda function: ken-burns-video-generator-go
    Debug - Payload keys: project_id, segment_id, segment_index, images, duration, start_time, end_time, options
    Debug - Payload values: String, String, Integer, Array, Float, Float, Float, Hash
    Debug - Response status: 200
    Debug - Response body keys: statusCode, body
    ✅ Segment 37 completed in 15.68s (Lambda: 15.28s)
    📁 Segment file: segments/b3/37_segment.mp4
  📹 Processing segment 41 (42/103) - Duration: 10.5s
    Debug - Payload: project_id=b3, segment_id=41, segment_index=41, images=Array, duration=10.5, start_time=170.5, end_time=181.0
    ⚡ Invoking Lambda for segment 41 (1 images)...
  📤 Invoking Lambda function: ken-burns-video-generator-go
    Debug - Payload keys: project_id, segment_id, segment_index, images, duration, start_time, end_time, options
    Debug - Payload values: String, String, Integer, Array, Float, Float, Float, Hash
    Debug - Response status: 200
    Debug - Response body keys: statusCode, body
    ✅ Segment 26 completed in 56.81s (Lambda: 56.64s)
    📁 Segment file: segments/b3/26_segment.mp4
  📹 Processing segment 42 (43/103) - Duration: 7.0s
    Debug - Payload: project_id=b3, segment_id=42, segment_index=42, images=Array, duration=7.0, start_time=181.0, end_time=188.0
    ⚡ Invoking Lambda for segment 42 (1 images)...
  📤 Invoking Lambda function: ken-burns-video-generator-go
    Debug - Payload keys: project_id, segment_id, segment_index, images, duration, start_time, end_time, options
    Debug - Payload values: String, String, Integer, Array, Float, Float, Float, Hash
    Debug - Response status: 200
    Debug - Response body keys: statusCode, body
    ✅ Segment 38 completed in 16.49s (Lambda: 16.4s)
    📁 Segment file: segments/b3/38_segment.mp4
  📹 Processing segment 43 (44/103) - Duration: 3.0s
    Debug - Payload: project_id=b3, segment_id=43, segment_index=43, images=Array, duration=3.0, start_time=188.0, end_time=191.0
    ⚡ Invoking Lambda for segment 43 (1 images)...
  📤 Invoking Lambda function: ken-burns-video-generator-go
    Debug - Payload keys: project_id, segment_id, segment_index, images, duration, start_time, end_time, options
    Debug - Payload values: String, String, Integer, Array, Float, Float, Float, Hash
    Debug - Response status: 200
    Debug - Response body keys: statusCode, body
    ✅ Segment 39 completed in 16.16s (Lambda: 16.03s)
    📁 Segment file: segments/b3/39_segment.mp4
  📹 Processing segment 44 (45/103) - Duration: 7.0s
    Debug - Payload: project_id=b3, segment_id=44, segment_index=44, images=Array, duration=7.0, start_time=191.0, end_time=198.0
    ⚡ Invoking Lambda for segment 44 (1 images)...
  📤 Invoking Lambda function: ken-burns-video-generator-go
    Debug - Payload keys: project_id, segment_id, segment_index, images, duration, start_time, end_time, options
    Debug - Payload values: String, String, Integer, Array, Float, Float, Float, Hash
    Debug - Response status: 200
    Debug - Response body keys: statusCode, body
    ✅ Segment 40 completed in 19.01s (Lambda: 18.45s)
    📁 Segment file: segments/b3/40_segment.mp4
  📹 Processing segment 45 (46/103) - Duration: 11.75s
    Debug - Payload: project_id=b3, segment_id=45, segment_index=45, images=Array, duration=11.75, start_time=198.0, end_time=209.75
    ⚡ Invoking Lambda for segment 45 (1 images)...
  📤 Invoking Lambda function: ken-burns-video-generator-go
    Debug - Payload keys: project_id, segment_id, segment_index, images, duration, start_time, end_time, options
    Debug - Payload values: String, String, Integer, Array, Float, Float, Float, Hash
    Debug - Response status: 200
    Debug - Response body keys: statusCode, body
    ✅ Segment 43 completed in 18.85s (Lambda: 18.74s)
    📁 Segment file: segments/b3/43_segment.mp4
  📹 Processing segment 46 (47/103) - Duration: 6.75s
    Debug - Payload: project_id=b3, segment_id=46, segment_index=46, images=Array, duration=6.75, start_time=209.75, end_time=216.5
    ⚡ Invoking Lambda for segment 46 (1 images)...
  📤 Invoking Lambda function: ken-burns-video-generator-go
    Debug - Payload keys: project_id, segment_id, segment_index, images, duration, start_time, end_time, options
    Debug - Payload values: String, String, Integer, Array, Float, Float, Float, Hash
    Debug - Response status: 200
    Debug - Response body keys: errorMessage, errorType
    Debug - Lambda error: failed to generate enhanced video: signal: killed
    Debug - Error type: errorString
    Debug - Stack trace: 
    ❌ Segment 46 failed in 8.06s: Lambda function error: failed to generate enhanced video: signal: killed
  📹 Processing segment 47 (48/103) - Duration: 3.0s
    Debug - Payload: project_id=b3, segment_id=47, segment_index=47, images=Array, duration=3.0, start_time=216.5, end_time=219.5
    ⚡ Invoking Lambda for segment 47 (1 images)...
  📤 Invoking Lambda function: ken-burns-video-generator-go
    Debug - Payload keys: project_id, segment_id, segment_index, images, duration, start_time, end_time, options
    Debug - Payload values: String, String, Integer, Array, Float, Float, Float, Hash
    Debug - Response status: 200
    Debug - Response body keys: statusCode, body
    ✅ Segment 41 completed in 40.0s (Lambda: 39.87s)
    📁 Segment file: segments/b3/41_segment.mp4
  📹 Processing segment 48 (49/103) - Duration: 3.0s
    Debug - Payload: project_id=b3, segment_id=48, segment_index=48, images=Array, duration=3.0, start_time=219.5, end_time=222.5
    ⚡ Invoking Lambda for segment 48 (1 images)...
  📤 Invoking Lambda function: ken-burns-video-generator-go
    Debug - Payload keys: project_id, segment_id, segment_index, images, duration, start_time, end_time, options
    Debug - Payload values: String, String, Integer, Array, Float, Float, Float, Hash
    Debug - Response status: 200
    Debug - Response body keys: statusCode, body
    ✅ Segment 42 completed in 38.28s (Lambda: 37.98s)
    📁 Segment file: segments/b3/42_segment.mp4
  📹 Processing segment 49 (50/103) - Duration: 4.0s
    Debug - Payload: project_id=b3, segment_id=49, segment_index=49, images=Array, duration=4.0, start_time=222.5, end_time=226.5
    ⚡ Invoking Lambda for segment 49 (1 images)...
  📤 Invoking Lambda function: ken-burns-video-generator-go
    Debug - Payload keys: project_id, segment_id, segment_index, images, duration, start_time, end_time, options
    Debug - Payload values: String, String, Integer, Array, Float, Float, Float, Hash
    Debug - Response status: 200
    Debug - Response body keys: statusCode, body
    ✅ Segment 44 completed in 39.17s (Lambda: 39.08s)
    📁 Segment file: segments/b3/44_segment.mp4
  📹 Processing segment 50 (51/103) - Duration: 6.25s
    Debug - Payload: project_id=b3, segment_id=50, segment_index=50, images=Array, duration=6.25, start_time=226.5, end_time=232.75
    ⚡ Invoking Lambda for segment 50 (1 images)...
  📤 Invoking Lambda function: ken-burns-video-generator-go
    Debug - Payload keys: project_id, segment_id, segment_index, images, duration, start_time, end_time, options
    Debug - Payload values: String, String, Integer, Array, Float, Float, Float, Hash
    Debug - Response status: 200
    Debug - Response body keys: statusCode, body
    ✅ Segment 47 completed in 23.38s (Lambda: 23.06s)
    📁 Segment file: segments/b3/47_segment.mp4
  📹 Processing segment 51 (52/103) - Duration: 3.0s
    Debug - Payload: project_id=b3, segment_id=51, segment_index=51, images=Array, duration=3.0, start_time=232.75, end_time=235.75
    ⚡ Invoking Lambda for segment 51 (1 images)...
  📤 Invoking Lambda function: ken-burns-video-generator-go
    Debug - Payload keys: project_id, segment_id, segment_index, images, duration, start_time, end_time, options
    Debug - Payload values: String, String, Integer, Array, Float, Float, Float, Hash
    Debug - Response status: 200
    Debug - Response body keys: statusCode, body
    ✅ Segment 48 completed in 17.17s (Lambda: 16.81s)
    📁 Segment file: segments/b3/48_segment.mp4
  📹 Processing segment 52 (53/103) - Duration: 19.5s
    Debug - Payload: project_id=b3, segment_id=52, segment_index=52, images=Array, duration=19.5, start_time=235.75, end_time=255.25
    ⚡ Invoking Lambda for segment 52 (1 images)...
  📤 Invoking Lambda function: ken-burns-video-generator-go
    Debug - Payload keys: project_id, segment_id, segment_index, images, duration, start_time, end_time, options
    Debug - Payload values: String, String, Integer, Array, Float, Float, Float, Hash
    Debug - Response status: 200
    Debug - Response body keys: statusCode, body
    ✅ Segment 49 completed in 21.96s (Lambda: 21.85s)
    📁 Segment file: segments/b3/49_segment.mp4
  📹 Processing segment 53 (54/103) - Duration: 3.0s
    Debug - Payload: project_id=b3, segment_id=53, segment_index=53, images=Array, duration=3.0, start_time=255.25, end_time=258.25
    ⚡ Invoking Lambda for segment 53 (1 images)...
  📤 Invoking Lambda function: ken-burns-video-generator-go
    Debug - Payload keys: project_id, segment_id, segment_index, images, duration, start_time, end_time, options
    Debug - Payload values: String, String, Integer, Array, Float, Float, Float, Hash
    Debug - Response status: 200
    Debug - Response body keys: statusCode, body
    ✅ Segment 51 completed in 12.47s (Lambda: 12.05s)
    📁 Segment file: segments/b3/51_segment.mp4
  📹 Processing segment 54 (55/103) - Duration: 3.0s
    Debug - Payload: project_id=b3, segment_id=54, segment_index=54, images=Array, duration=3.0, start_time=258.25, end_time=261.25
    ⚡ Invoking Lambda for segment 54 (1 images)...
  📤 Invoking Lambda function: ken-burns-video-generator-go
    Debug - Payload keys: project_id, segment_id, segment_index, images, duration, start_time, end_time, options
    Debug - Payload values: String, String, Integer, Array, Float, Float, Float, Hash
    Debug - Response status: 200
    Debug - Response body keys: statusCode, body
    ✅ Segment 50 completed in 33.92s (Lambda: 33.82s)
    📁 Segment file: segments/b3/50_segment.mp4
  📹 Processing segment 55 (56/103) - Duration: 3.0s
    Debug - Payload: project_id=b3, segment_id=55, segment_index=55, images=Array, duration=3.0, start_time=261.25, end_time=264.25
    ⚡ Invoking Lambda for segment 55 (1 images)...
  📤 Invoking Lambda function: ken-burns-video-generator-go
    Debug - Payload keys: project_id, segment_id, segment_index, images, duration, start_time, end_time, options
    Debug - Payload values: String, String, Integer, Array, Float, Float, Float, Hash
    Debug - Response status: 200
    Debug - Response body keys: statusCode, body
    ✅ Segment 53 completed in 17.06s (Lambda: 16.72s)
    📁 Segment file: segments/b3/53_segment.mp4
  📹 Processing segment 56 (57/103) - Duration: 24.0s
    Debug - Payload: project_id=b3, segment_id=56, segment_index=56, images=Array, duration=24.0, start_time=264.25, end_time=288.25
    ⚡ Invoking Lambda for segment 56 (1 images)...
  📤 Invoking Lambda function: ken-burns-video-generator-go
    Debug - Payload keys: project_id, segment_id, segment_index, images, duration, start_time, end_time, options
    Debug - Payload values: String, String, Integer, Array, Float, Float, Float, Hash
    Debug - Response status: 200
    Debug - Response body keys: statusCode, body
    ✅ Segment 54 completed in 18.02s (Lambda: 17.92s)
    📁 Segment file: segments/b3/54_segment.mp4
  📹 Processing segment 57 (58/103) - Duration: 5.75s
    Debug - Payload: project_id=b3, segment_id=57, segment_index=57, images=Array, duration=5.75, start_time=288.25, end_time=294.0
    ⚡ Invoking Lambda for segment 57 (1 images)...
  📤 Invoking Lambda function: ken-burns-video-generator-go
    Debug - Payload keys: project_id, segment_id, segment_index, images, duration, start_time, end_time, options
    Debug - Payload values: String, String, Integer, Array, Float, Float, Float, Hash
    Debug - Response status: 200
    Debug - Response body keys: statusCode, body
    ✅ Segment 55 completed in 18.12s (Lambda: 17.72s)
    📁 Segment file: segments/b3/55_segment.mp4
  📹 Processing segment 58 (59/103) - Duration: 3.0s
    Debug - Payload: project_id=b3, segment_id=58, segment_index=58, images=Array, duration=3.0, start_time=294.0, end_time=297.0
    ⚡ Invoking Lambda for segment 58 (1 images)...
  📤 Invoking Lambda function: ken-burns-video-generator-go
    Debug - Payload keys: project_id, segment_id, segment_index, images, duration, start_time, end_time, options
    Debug - Payload values: String, String, Integer, Array, Float, Float, Float, Hash
    Debug - Response status: 200
    Debug - Response body keys: statusCode, body
    ✅ Segment 57 completed in 27.85s (Lambda: 27.75s)
    📁 Segment file: segments/b3/57_segment.mp4
  📹 Processing segment 59 (60/103) - Duration: 3.0s
    Debug - Payload: project_id=b3, segment_id=59, segment_index=59, images=Array, duration=3.0, start_time=297.0, end_time=300.0
    ⚡ Invoking Lambda for segment 59 (1 images)...
  📤 Invoking Lambda function: ken-burns-video-generator-go
    Debug - Payload keys: project_id, segment_id, segment_index, images, duration, start_time, end_time, options
    Debug - Payload values: String, String, Integer, Array, Float, Float, Float, Hash
    Debug - Response status: 200
    Debug - Response body keys: statusCode, body
    ✅ Segment 58 completed in 19.39s (Lambda: 19.06s)
    📁 Segment file: segments/b3/58_segment.mp4
  📹 Processing segment 60 (61/103) - Duration: 3.0s
    Debug - Payload: project_id=b3, segment_id=60, segment_index=60, images=Array, duration=3.0, start_time=300.0, end_time=303.0
    ⚡ Invoking Lambda for segment 60 (1 images)...
  📤 Invoking Lambda function: ken-burns-video-generator-go
    Debug - Payload keys: project_id, segment_id, segment_index, images, duration, start_time, end_time, options
    Debug - Payload values: String, String, Integer, Array, Float, Float, Float, Hash
    Debug - Response status: 200
    Debug - Response body keys: statusCode, body
    ✅ Segment 59 completed in 16.6s (Lambda: 16.25s)
    📁 Segment file: segments/b3/59_segment.mp4
  📹 Processing segment 61 (62/103) - Duration: 3.75s
    Debug - Payload: project_id=b3, segment_id=61, segment_index=61, images=Array, duration=3.75, start_time=303.0, end_time=306.75
    ⚡ Invoking Lambda for segment 61 (1 images)...
  📤 Invoking Lambda function: ken-burns-video-generator-go
    Debug - Payload keys: project_id, segment_id, segment_index, images, duration, start_time, end_time, options
    Debug - Payload values: String, String, Integer, Array, Float, Float, Float, Hash
    Debug - Response status: 200
    Debug - Response body keys: statusCode, body
    ✅ Segment 60 completed in 16.63s (Lambda: 16.53s)
    📁 Segment file: segments/b3/60_segment.mp4
  📹 Processing segment 62 (63/103) - Duration: 7.5s
    Debug - Payload: project_id=b3, segment_id=62, segment_index=62, images=Array, duration=7.5, start_time=306.75, end_time=314.25
    ⚡ Invoking Lambda for segment 62 (1 images)...
  📤 Invoking Lambda function: ken-burns-video-generator-go
    Debug - Payload keys: project_id, segment_id, segment_index, images, duration, start_time, end_time, options
    Debug - Payload values: String, String, Integer, Array, Float, Float, Float, Hash
    ❌ Lambda invocation error: Net::ReadTimeout with #<TCPSocket:(closed)>
    ❌ Error class: Seahorse::Client::NetworkingError
    ❌ Segment 7 failed in 243.71s: Lambda invocation failed: Net::ReadTimeout with #<TCPSocket:(closed)>
  📹 Processing segment 63 (64/103) - Duration: 19.5s
    Debug - Payload: project_id=b3, segment_id=63, segment_index=63, images=Array, duration=19.5, start_time=314.25, end_time=333.75
    ⚡ Invoking Lambda for segment 63 (1 images)...
  📤 Invoking Lambda function: ken-burns-video-generator-go
    Debug - Payload keys: project_id, segment_id, segment_index, images, duration, start_time, end_time, options
    Debug - Payload values: String, String, Integer, Array, Float, Float, Float, Hash
    Debug - Response status: 200
    Debug - Response body keys: statusCode, body
    ✅ Segment 61 completed in 21.27s (Lambda: 20.93s)
    📁 Segment file: segments/b3/61_segment.mp4
  📹 Processing segment 64 (65/103) - Duration: 3.0s
    Debug - Payload: project_id=b3, segment_id=64, segment_index=64, images=Array, duration=3.0, start_time=333.75, end_time=336.75
    ⚡ Invoking Lambda for segment 64 (1 images)...
  📤 Invoking Lambda function: ken-burns-video-generator-go
    Debug - Payload keys: project_id, segment_id, segment_index, images, duration, start_time, end_time, options
    Debug - Payload values: String, String, Integer, Array, Float, Float, Float, Hash
    Debug - Response status: 200
    Debug - Response body keys: statusCode, body
    ✅ Segment 64 completed in 15.08s (Lambda: 14.76s)
    📁 Segment file: segments/b3/64_segment.mp4
  📹 Processing segment 65 (66/103) - Duration: 3.25s
    Debug - Payload: project_id=b3, segment_id=65, segment_index=65, images=Array, duration=3.25, start_time=336.75, end_time=340.0
    ⚡ Invoking Lambda for segment 65 (1 images)...
  📤 Invoking Lambda function: ken-burns-video-generator-go
    Debug - Payload keys: project_id, segment_id, segment_index, images, duration, start_time, end_time, options
    Debug - Payload values: String, String, Integer, Array, Float, Float, Float, Hash
    Debug - Response status: 200
    Debug - Response body keys: statusCode, body
    ✅ Segment 62 completed in 41.32s (Lambda: 41.2s)
    📁 Segment file: segments/b3/62_segment.mp4
  📹 Processing segment 66 (67/103) - Duration: 5.5s
    Debug - Payload: project_id=b3, segment_id=66, segment_index=66, images=Array, duration=5.5, start_time=340.0, end_time=345.5
    Debug - Response status: 200
    Debug - Response body keys: errorMessage, errorType
    Debug - Lambda error: failed to generate enhanced video: signal: killed
    Debug - Error type: errorString
    Debug - Stack trace: 
    ❌ Segment 63 failed in 34.11s: Lambda function error: failed to generate enhanced video: signal: killed
  📹 Processing segment 67 (68/103) - Duration: 3.0s
    Debug - Payload: project_id=b3, segment_id=67, segment_index=67, images=Array, duration=3.0, start_time=345.5, end_time=348.5
    ⚡ Invoking Lambda for segment 66 (1 images)...
  📤 Invoking Lambda function: ken-burns-video-generator-go
    Debug - Payload keys: project_id, segment_id, segment_index, images, duration, start_time, end_time, options
    Debug - Payload values: String, String, Integer, Array, Float, Float, Float, Hash
    ⚡ Invoking Lambda for segment 67 (1 images)...
  📤 Invoking Lambda function: ken-burns-video-generator-go
    Debug - Payload keys: project_id, segment_id, segment_index, images, duration, start_time, end_time, options
    Debug - Payload values: String, String, Integer, Array, Float, Float, Float, Hash
    ❌ Lambda invocation error: Net::ReadTimeout with #<TCPSocket:(closed)>
    ❌ Error class: Seahorse::Client::NetworkingError
    ❌ Segment 23 failed in 243.14s: Lambda invocation failed: Net::ReadTimeout with #<TCPSocket:(closed)>
  📹 Processing segment 68 (69/103) - Duration: 3.5s
    Debug - Payload: project_id=b3, segment_id=68, segment_index=68, images=Array, duration=3.5, start_time=348.5, end_time=352.0
    Debug - Response status: 200
    Debug - Response body keys: statusCode, body
    ✅ Segment 65 completed in 18.2s (Lambda: 17.88s)
    📁 Segment file: segments/b3/65_segment.mp4
  📹 Processing segment 69 (70/103) - Duration: 3.0s
    Debug - Payload: project_id=b3, segment_id=69, segment_index=69, images=Array, duration=3.0, start_time=352.0, end_time=355.0
    ⚡ Invoking Lambda for segment 68 (1 images)...
  📤 Invoking Lambda function: ken-burns-video-generator-go
    Debug - Payload keys: project_id, segment_id, segment_index, images, duration, start_time, end_time, options
    Debug - Payload values: String, String, Integer, Array, Float, Float, Float, Hash
    ⚡ Invoking Lambda for segment 69 (1 images)...
  📤 Invoking Lambda function: ken-burns-video-generator-go
    Debug - Payload keys: project_id, segment_id, segment_index, images, duration, start_time, end_time, options
    Debug - Payload values: String, String, Integer, Array, Float, Float, Float, Hash
    ❌ Lambda invocation error: Net::ReadTimeout with #<TCPSocket:(closed)>
    ❌ Error class: Seahorse::Client::NetworkingError
    ❌ Segment 24 failed in 243.22s: Lambda invocation failed: Net::ReadTimeout with #<TCPSocket:(closed)>
  📹 Processing segment 70 (71/103) - Duration: 3.0s
    Debug - Payload: project_id=b3, segment_id=70, segment_index=70, images=Array, duration=3.0, start_time=355.0, end_time=358.0
    ⚡ Invoking Lambda for segment 70 (1 images)...
  📤 Invoking Lambda function: ken-burns-video-generator-go
    Debug - Payload keys: project_id, segment_id, segment_index, images, duration, start_time, end_time, options
    Debug - Payload values: String, String, Integer, Array, Float, Float, Float, Hash
    ❌ Lambda invocation error: Net::ReadTimeout with #<TCPSocket:(closed)>
    ❌ Error class: Seahorse::Client::NetworkingError
    ❌ Segment 27 failed in 243.14s: Lambda invocation failed: Net::ReadTimeout with #<TCPSocket:(closed)>
  📹 Processing segment 71 (72/103) - Duration: 3.0s
    Debug - Payload: project_id=b3, segment_id=71, segment_index=71, images=Array, duration=3.0, start_time=358.0, end_time=361.0
    ⚡ Invoking Lambda for segment 71 (1 images)...
  📤 Invoking Lambda function: ken-burns-video-generator-go
    Debug - Payload keys: project_id, segment_id, segment_index, images, duration, start_time, end_time, options
    Debug - Payload values: String, String, Integer, Array, Float, Float, Float, Hash
    Debug - Response status: 200
    Debug - Response body keys: statusCode, body
    ✅ Segment 67 completed in 20.25s (Lambda: 19.95s)
    📁 Segment file: segments/b3/67_segment.mp4
  📹 Processing segment 72 (73/103) - Duration: 3.0s
    Debug - Payload: project_id=b3, segment_id=72, segment_index=72, images=Array, duration=3.0, start_time=361.0, end_time=364.0
    ⚡ Invoking Lambda for segment 72 (1 images)...
  📤 Invoking Lambda function: ken-burns-video-generator-go
    Debug - Payload keys: project_id, segment_id, segment_index, images, duration, start_time, end_time, options
    Debug - Payload values: String, String, Integer, Array, Float, Float, Float, Hash
    Debug - Response status: 200
    Debug - Response body keys: statusCode, body
    ✅ Segment 69 completed in 17.97s (Lambda: 17.65s)
    📁 Segment file: segments/b3/69_segment.mp4
  📹 Processing segment 73 (74/103) - Duration: 3.0s
    Debug - Payload: project_id=b3, segment_id=73, segment_index=73, images=Array, duration=3.0, start_time=364.0, end_time=367.0
    ⚡ Invoking Lambda for segment 73 (1 images)...
  📤 Invoking Lambda function: ken-burns-video-generator-go
    Debug - Payload keys: project_id, segment_id, segment_index, images, duration, start_time, end_time, options
    Debug - Payload values: String, String, Integer, Array, Float, Float, Float, Hash
    Debug - Response status: 200
    Debug - Response body keys: statusCode, body
    ✅ Segment 68 completed in 19.52s (Lambda: 19.19s)
    📁 Segment file: segments/b3/68_segment.mp4
  📹 Processing segment 74 (75/103) - Duration: 10.5s
    Debug - Payload: project_id=b3, segment_id=74, segment_index=74, images=Array, duration=10.5, start_time=367.0, end_time=377.5
    ⚡ Invoking Lambda for segment 74 (1 images)...
  📤 Invoking Lambda function: ken-burns-video-generator-go
    Debug - Payload keys: project_id, segment_id, segment_index, images, duration, start_time, end_time, options
    Debug - Payload values: String, String, Integer, Array, Float, Float, Float, Hash
    Debug - Response status: 200
    Debug - Response body keys: statusCode, body
    ✅ Segment 70 completed in 18.3s (Lambda: 18.2s)
    📁 Segment file: segments/b3/70_segment.mp4
  📹 Processing segment 75 (76/103) - Duration: 6.75s
    Debug - Payload: project_id=b3, segment_id=75, segment_index=75, images=Array, duration=6.75, start_time=377.5, end_time=384.25
    Debug - Response status: 200
    Debug - Response body keys: statusCode, body
    ✅ Segment 66 completed in 30.16s (Lambda: 29.85s)
    📁 Segment file: segments/b3/66_segment.mp4
  📹 Processing segment 76 (77/103) - Duration: 3.0s
    Debug - Payload: project_id=b3, segment_id=76, segment_index=76, images=Array, duration=3.0, start_time=384.25, end_time=387.25
    ⚡ Invoking Lambda for segment 75 (1 images)...
  📤 Invoking Lambda function: ken-burns-video-generator-go
    Debug - Payload keys: project_id, segment_id, segment_index, images, duration, start_time, end_time, options
    Debug - Payload values: String, String, Integer, Array, Float, Float, Float, Hash
    ⚡ Invoking Lambda for segment 76 (1 images)...
  📤 Invoking Lambda function: ken-burns-video-generator-go
    Debug - Payload keys: project_id, segment_id, segment_index, images, duration, start_time, end_time, options
    Debug - Payload values: String, String, Integer, Array, Float, Float, Float, Hash
    Debug - Response status: 200
    Debug - Response body keys: statusCode, body
    ✅ Segment 71 completed in 17.79s (Lambda: 17.49s)
    📁 Segment file: segments/b3/71_segment.mp4
  📹 Processing segment 77 (78/103) - Duration: 15.5s
    Debug - Payload: project_id=b3, segment_id=77, segment_index=77, images=Array, duration=15.5, start_time=387.25, end_time=402.75
    ⚡ Invoking Lambda for segment 77 (1 images)...
  📤 Invoking Lambda function: ken-burns-video-generator-go
    Debug - Payload keys: project_id, segment_id, segment_index, images, duration, start_time, end_time, options
    Debug - Payload values: String, String, Integer, Array, Float, Float, Float, Hash
    Debug - Response status: 200
    Debug - Response body keys: statusCode, body
    ✅ Segment 73 completed in 7.81s (Lambda: 7.47s)
    📁 Segment file: segments/b3/73_segment.mp4
  📹 Processing segment 78 (79/103) - Duration: 4.25s
    Debug - Payload: project_id=b3, segment_id=78, segment_index=78, images=Array, duration=4.25, start_time=402.75, end_time=407.0
    ⚡ Invoking Lambda for segment 78 (1 images)...
  📤 Invoking Lambda function: ken-burns-video-generator-go
    Debug - Payload keys: project_id, segment_id, segment_index, images, duration, start_time, end_time, options
    Debug - Payload values: String, String, Integer, Array, Float, Float, Float, Hash
    Debug - Response status: 200
    Debug - Response body keys: statusCode, body
    ✅ Segment 72 completed in 17.14s (Lambda: 17.04s)
    📁 Segment file: segments/b3/72_segment.mp4
  📹 Processing segment 79 (80/103) - Duration: 3.0s
    Debug - Payload: project_id=b3, segment_id=79, segment_index=79, images=Array, duration=3.0, start_time=407.0, end_time=410.0
    ⚡ Invoking Lambda for segment 79 (1 images)...
  📤 Invoking Lambda function: ken-burns-video-generator-go
    Debug - Payload keys: project_id, segment_id, segment_index, images, duration, start_time, end_time, options
    Debug - Payload values: String, String, Integer, Array, Float, Float, Float, Hash
    Debug - Response status: 200
    Debug - Response body keys: statusCode, body
    ✅ Segment 76 completed in 14.95s (Lambda: 14.65s)
    📁 Segment file: segments/b3/76_segment.mp4
  📹 Processing segment 80 (81/103) - Duration: 3.0s
    Debug - Payload: project_id=b3, segment_id=80, segment_index=80, images=Array, duration=3.0, start_time=410.0, end_time=413.0
    ⚡ Invoking Lambda for segment 80 (1 images)...
  📤 Invoking Lambda function: ken-burns-video-generator-go
    Debug - Payload keys: project_id, segment_id, segment_index, images, duration, start_time, end_time, options
    Debug - Payload values: String, String, Integer, Array, Float, Float, Float, Hash
    ❌ Lambda invocation error: Net::ReadTimeout with #<TCPSocket:(closed)>
    ❌ Error class: Seahorse::Client::NetworkingError
    ❌ Segment 36 failed in 243.21s: Lambda invocation failed: Net::ReadTimeout with #<TCPSocket:(closed)>
  📹 Processing segment 81 (82/103) - Duration: 3.0s
    Debug - Payload: project_id=b3, segment_id=81, segment_index=81, images=Array, duration=3.0, start_time=413.0, end_time=416.0
    ⚡ Invoking Lambda for segment 81 (1 images)...
  📤 Invoking Lambda function: ken-burns-video-generator-go
    Debug - Payload keys: project_id, segment_id, segment_index, images, duration, start_time, end_time, options
    Debug - Payload values: String, String, Integer, Array, Float, Float, Float, Hash
    Debug - Response status: 200
    Debug - Response body keys: statusCode, body
    ✅ Segment 79 completed in 16.6s (Lambda: 16.49s)
    📁 Segment file: segments/b3/79_segment.mp4
  📹 Processing segment 82 (83/103) - Duration: 5.75s
    Debug - Payload: project_id=b3, segment_id=82, segment_index=82, images=Array, duration=5.75, start_time=416.0, end_time=421.75
    ⚡ Invoking Lambda for segment 82 (1 images)...
  📤 Invoking Lambda function: ken-burns-video-generator-go
    Debug - Payload keys: project_id, segment_id, segment_index, images, duration, start_time, end_time, options
    Debug - Payload values: String, String, Integer, Array, Float, Float, Float, Hash
    Debug - Response status: 200
    Debug - Response body keys: statusCode, body
    ✅ Segment 78 completed in 21.72s (Lambda: 21.62s)
    📁 Segment file: segments/b3/78_segment.mp4
  📹 Processing segment 83 (84/103) - Duration: 3.0s
    Debug - Payload: project_id=b3, segment_id=83, segment_index=83, images=Array, duration=3.0, start_time=421.75, end_time=424.75
    ⚡ Invoking Lambda for segment 83 (1 images)...
  📤 Invoking Lambda function: ken-burns-video-generator-go
    Debug - Payload keys: project_id, segment_id, segment_index, images, duration, start_time, end_time, options
    Debug - Payload values: String, String, Integer, Array, Float, Float, Float, Hash
    Debug - Response status: 200
    Debug - Response body keys: statusCode, body
    ✅ Segment 75 completed in 36.15s (Lambda: 36.05s)
    📁 Segment file: segments/b3/75_segment.mp4
  📹 Processing segment 84 (85/103) - Duration: 3.0s
    Debug - Payload: project_id=b3, segment_id=84, segment_index=84, images=Array, duration=3.0, start_time=424.75, end_time=427.75
    ⚡ Invoking Lambda for segment 84 (1 images)...
  📤 Invoking Lambda function: ken-burns-video-generator-go
    Debug - Payload keys: project_id, segment_id, segment_index, images, duration, start_time, end_time, options
    Debug - Payload values: String, String, Integer, Array, Float, Float, Float, Hash
    Debug - Response status: 200
    Debug - Response body keys: statusCode, body
    ✅ Segment 81 completed in 16.28s (Lambda: 15.95s)
    📁 Segment file: segments/b3/81_segment.mp4
  📹 Processing segment 85 (86/103) - Duration: 3.0s
    Debug - Payload: project_id=b3, segment_id=85, segment_index=85, images=Array, duration=3.0, start_time=427.75, end_time=430.75
    ⚡ Invoking Lambda for segment 85 (1 images)...
  📤 Invoking Lambda function: ken-burns-video-generator-go
    Debug - Payload keys: project_id, segment_id, segment_index, images, duration, start_time, end_time, options
    Debug - Payload values: String, String, Integer, Array, Float, Float, Float, Hash
    Debug - Response status: 200
    Debug - Response body keys: statusCode, body
    ✅ Segment 83 completed in 16.9s (Lambda: 16.8s)
    📁 Segment file: segments/b3/83_segment.mp4
  📹 Processing segment 86 (87/103) - Duration: 3.25s
    Debug - Payload: project_id=b3, segment_id=86, segment_index=86, images=Array, duration=3.25, start_time=430.75, end_time=434.0
    ⚡ Invoking Lambda for segment 86 (1 images)...
  📤 Invoking Lambda function: ken-burns-video-generator-go
    Debug - Payload keys: project_id, segment_id, segment_index, images, duration, start_time, end_time, options
    Debug - Payload values: String, String, Integer, Array, Float, Float, Float, Hash
    Debug - Response status: 200
    Debug - Response body keys: statusCode, body
    ✅ Segment 84 completed in 15.49s (Lambda: 15.18s)
    📁 Segment file: segments/b3/84_segment.mp4
  📹 Processing segment 87 (88/103) - Duration: 7.25s
    Debug - Payload: project_id=b3, segment_id=87, segment_index=87, images=Array, duration=7.25, start_time=434.0, end_time=441.25
    ⚡ Invoking Lambda for segment 87 (1 images)...
  📤 Invoking Lambda function: ken-burns-video-generator-go
    Debug - Payload keys: project_id, segment_id, segment_index, images, duration, start_time, end_time, options
    Debug - Payload values: String, String, Integer, Array, Float, Float, Float, Hash
    Debug - Response status: 200
    Debug - Response body keys: statusCode, body
    ✅ Segment 82 completed in 28.84s (Lambda: 28.74s)
    📁 Segment file: segments/b3/82_segment.mp4
  📹 Processing segment 88 (89/103) - Duration: 10.25s
    Debug - Payload: project_id=b3, segment_id=88, segment_index=88, images=Array, duration=10.25, start_time=441.25, end_time=451.5
    ⚡ Invoking Lambda for segment 88 (1 images)...
  📤 Invoking Lambda function: ken-burns-video-generator-go
    Debug - Payload keys: project_id, segment_id, segment_index, images, duration, start_time, end_time, options
    Debug - Payload values: String, String, Integer, Array, Float, Float, Float, Hash
    ❌ Lambda invocation error: Net::ReadTimeout with #<TCPSocket:(closed)>
    ❌ Error class: Seahorse::Client::NetworkingError
    ❌ Segment 45 failed in 243.31s: Lambda invocation failed: Net::ReadTimeout with #<TCPSocket:(closed)>
  📹 Processing segment 89 (90/103) - Duration: 3.0s
    Debug - Payload: project_id=b3, segment_id=89, segment_index=89, images=Array, duration=3.0, start_time=451.5, end_time=454.5
    ⚡ Invoking Lambda for segment 89 (1 images)...
  📤 Invoking Lambda function: ken-burns-video-generator-go
    Debug - Payload keys: project_id, segment_id, segment_index, images, duration, start_time, end_time, options
    Debug - Payload values: String, String, Integer, Array, Float, Float, Float, Hash
    Debug - Response status: 200
    Debug - Response body keys: statusCode, body
    ✅ Segment 85 completed in 17.61s (Lambda: 17.52s)
    📁 Segment file: segments/b3/85_segment.mp4
  📹 Processing segment 90 (91/103) - Duration: 5.75s
    Debug - Payload: project_id=b3, segment_id=90, segment_index=90, images=Array, duration=5.75, start_time=454.5, end_time=460.25
    ⚡ Invoking Lambda for segment 90 (1 images)...
  📤 Invoking Lambda function: ken-burns-video-generator-go
    Debug - Payload keys: project_id, segment_id, segment_index, images, duration, start_time, end_time, options
    Debug - Payload values: String, String, Integer, Array, Float, Float, Float, Hash
    Debug - Response status: 200
    Debug - Response body keys: statusCode, body
    ✅ Segment 86 completed in 17.79s (Lambda: 17.41s)
    📁 Segment file: segments/b3/86_segment.mp4
  📹 Processing segment 91 (92/103) - Duration: 3.0s
    Debug - Payload: project_id=b3, segment_id=91, segment_index=91, images=Array, duration=3.0, start_time=460.25, end_time=463.25
    ⚡ Invoking Lambda for segment 91 (1 images)...
  📤 Invoking Lambda function: ken-burns-video-generator-go
    Debug - Payload keys: project_id, segment_id, segment_index, images, duration, start_time, end_time, options
    Debug - Payload values: String, String, Integer, Array, Float, Float, Float, Hash
    Debug - Response status: 200
    Debug - Response body keys: statusCode, body
    ✅ Segment 89 completed in 19.05s (Lambda: 18.91s)
    📁 Segment file: segments/b3/89_segment.mp4
  📹 Processing segment 92 (93/103) - Duration: 3.0s
    Debug - Payload: project_id=b3, segment_id=92, segment_index=92, images=Array, duration=3.0, start_time=463.25, end_time=466.25
    ⚡ Invoking Lambda for segment 92 (1 images)...
  📤 Invoking Lambda function: ken-burns-video-generator-go
    Debug - Payload keys: project_id, segment_id, segment_index, images, duration, start_time, end_time, options
    Debug - Payload values: String, String, Integer, Array, Float, Float, Float, Hash
    Debug - Response status: 200
    Debug - Response body keys: statusCode, body
    ✅ Segment 91 completed in 16.08s (Lambda: 15.78s)
    📁 Segment file: segments/b3/91_segment.mp4
  📹 Processing segment 93 (94/103) - Duration: 7.0s
    Debug - Payload: project_id=b3, segment_id=93, segment_index=93, images=Array, duration=7.0, start_time=466.25, end_time=473.25
    ⚡ Invoking Lambda for segment 93 (1 images)...
  📤 Invoking Lambda function: ken-burns-video-generator-go
    Debug - Payload keys: project_id, segment_id, segment_index, images, duration, start_time, end_time, options
    Debug - Payload values: String, String, Integer, Array, Float, Float, Float, Hash
    Debug - Response status: 200
    Debug - Response body keys: statusCode, body
    ✅ Segment 90 completed in 31.05s (Lambda: 30.95s)
    📁 Segment file: segments/b3/90_segment.mp4
  📹 Processing segment 94 (95/103) - Duration: 3.0s
    Debug - Payload: project_id=b3, segment_id=94, segment_index=94, images=Array, duration=3.0, start_time=473.25, end_time=476.25
    ⚡ Invoking Lambda for segment 94 (1 images)...
  📤 Invoking Lambda function: ken-burns-video-generator-go
    Debug - Payload keys: project_id, segment_id, segment_index, images, duration, start_time, end_time, options
    Debug - Payload values: String, String, Integer, Array, Float, Float, Float, Hash
    Debug - Response status: 200
    Debug - Response body keys: statusCode, body
    ✅ Segment 87 completed in 37.1s (Lambda: 36.78s)
    📁 Segment file: segments/b3/87_segment.mp4
  📹 Processing segment 95 (96/103) - Duration: 3.0s
    Debug - Payload: project_id=b3, segment_id=95, segment_index=95, images=Array, duration=3.0, start_time=476.25, end_time=479.25
    ⚡ Invoking Lambda for segment 95 (1 images)...
  📤 Invoking Lambda function: ken-burns-video-generator-go
    Debug - Payload keys: project_id, segment_id, segment_index, images, duration, start_time, end_time, options
    Debug - Payload values: String, String, Integer, Array, Float, Float, Float, Hash
    Debug - Response status: 200
    Debug - Response body keys: statusCode, body
    ✅ Segment 92 completed in 18.38s (Lambda: 18.05s)
    📁 Segment file: segments/b3/92_segment.mp4
  📹 Processing segment 96 (97/103) - Duration: 3.0s
    Debug - Payload: project_id=b3, segment_id=96, segment_index=96, images=Array, duration=3.0, start_time=479.25, end_time=482.25
    ⚡ Invoking Lambda for segment 96 (1 images)...
  📤 Invoking Lambda function: ken-burns-video-generator-go
    Debug - Payload keys: project_id, segment_id, segment_index, images, duration, start_time, end_time, options
    Debug - Payload values: String, String, Integer, Array, Float, Float, Float, Hash
    ❌ Lambda invocation error: Net::ReadTimeout with #<TCPSocket:(closed)>
    ❌ Error class: Seahorse::Client::NetworkingError
    ❌ Segment 52 failed in 243.21s: Lambda invocation failed: Net::ReadTimeout with #<TCPSocket:(closed)>
  📹 Processing segment 97 (98/103) - Duration: 3.0s
    Debug - Payload: project_id=b3, segment_id=97, segment_index=97, images=Array, duration=3.0, start_time=482.25, end_time=485.25
    ⚡ Invoking Lambda for segment 97 (1 images)...
  📤 Invoking Lambda function: ken-burns-video-generator-go
    Debug - Payload keys: project_id, segment_id, segment_index, images, duration, start_time, end_time, options
    Debug - Payload values: String, String, Integer, Array, Float, Float, Float, Hash
    Debug - Response status: 200
    Debug - Response body keys: statusCode, body
    ✅ Segment 95 completed in 10.59s (Lambda: 10.49s)
    📁 Segment file: segments/b3/95_segment.mp4
  📹 Processing segment 98 (99/103) - Duration: 4.0s
    Debug - Payload: project_id=b3, segment_id=98, segment_index=98, images=Array, duration=4.0, start_time=485.25, end_time=489.25
    ⚡ Invoking Lambda for segment 98 (1 images)...
  📤 Invoking Lambda function: ken-burns-video-generator-go
    Debug - Payload keys: project_id, segment_id, segment_index, images, duration, start_time, end_time, options
    Debug - Payload values: String, String, Integer, Array, Float, Float, Float, Hash
    Debug - Response status: 200
    Debug - Response body keys: statusCode, body
    ✅ Segment 94 completed in 18.12s (Lambda: 17.83s)
    📁 Segment file: segments/b3/94_segment.mp4
  📹 Processing segment 99 (100/103) - Duration: 3.0s
    Debug - Payload: project_id=b3, segment_id=99, segment_index=99, images=Array, duration=3.0, start_time=489.25, end_time=492.25
    ⚡ Invoking Lambda for segment 99 (1 images)...
  📤 Invoking Lambda function: ken-burns-video-generator-go
    Debug - Payload keys: project_id, segment_id, segment_index, images, duration, start_time, end_time, options
    Debug - Payload values: String, String, Integer, Array, Float, Float, Float, Hash
    Debug - Response status: 200
    Debug - Response body keys: statusCode, body
    ✅ Segment 88 completed in 54.21s (Lambda: 54.11s)
    📁 Segment file: segments/b3/88_segment.mp4
  📹 Processing segment 100 (101/103) - Duration: 7.25s
    Debug - Payload: project_id=b3, segment_id=100, segment_index=100, images=Array, duration=7.25, start_time=492.25, end_time=499.5
    ⚡ Invoking Lambda for segment 100 (1 images)...